v0 = add_virtual_bool_target_safe
v2 = add_virtual_bool_target_safe
v3 = add_virtual_bool_target_safe
v4 = add_virtual_bool_target_safe
v5 = add_virtual_bool_target_safe
v6 = add_virtual_bool_target_safe
v7 = add_virtual_bool_target_safe
v8 = add_virtual_bool_target_safe
v9 = add_virtual_bool_target_safe
v10 = add_virtual_bool_target_safe
v11 = add_virtual_bool_target_safe
v12 = add_virtual_bool_target_safe
v13 = add_virtual_bool_target_safe
v14 = add_virtual_bool_target_safe
v15 = add_virtual_bool_target_safe
v16 = add_virtual_bool_target_safe
v17 = add_virtual_bool_target_safe
v18 = add_virtual_bool_target_safe
v19 = add_virtual_bool_target_safe
v20 = add_virtual_bool_target_safe
v21 = add_virtual_bool_target_safe
v22 = add_virtual_bool_target_safe
v23 = add_virtual_bool_target_safe
v24 = add_virtual_bool_target_safe
v25 = add_virtual_bool_target_safe
v26 = add_virtual_bool_target_safe
v27 = add_virtual_bool_target_safe
v28 = add_virtual_bool_target_safe
v29 = add_virtual_bool_target_safe
v30 = add_virtual_bool_target_safe
v31 = add_virtual_bool_target_safe
v32 = add_virtual_bool_target_safe
v33 = add_virtual_bool_target_safe
v34 = add_virtual_bool_target_safe
v35 = add_virtual_bool_target_safe
v36 = add_virtual_bool_target_safe
v37 = add_virtual_bool_target_safe
v38 = add_virtual_bool_target_safe
v39 = add_virtual_bool_target_safe
v40 = add_virtual_bool_target_safe
v41 = add_virtual_bool_target_safe
v42 = add_virtual_bool_target_safe
v43 = add_virtual_bool_target_safe
v44 = add_virtual_bool_target_safe
v45 = add_virtual_bool_target_safe
v46 = add_virtual_bool_target_safe
v47 = add_virtual_bool_target_safe
v48 = add_virtual_bool_target_safe
v49 = add_virtual_bool_target_safe
v50 = add_virtual_bool_target_safe
v51 = add_virtual_bool_target_safe
v52 = add_virtual_bool_target_safe
v53 = add_virtual_bool_target_safe
v54 = add_virtual_bool_target_safe
v55 = add_virtual_bool_target_safe
v56 = add_virtual_bool_target_safe
v57 = add_virtual_bool_target_safe
v58 = add_virtual_bool_target_safe
v59 = add_virtual_bool_target_safe
v60 = add_virtual_bool_target_safe
v61 = add_virtual_bool_target_safe
v62 = add_virtual_bool_target_safe
v63 = add_virtual_bool_target_safe
v64 = add_virtual_bool_target_safe
v65 = add_virtual_target
v66 = add_virtual_target
v67 = add_virtual_target
v68 = add_virtual_target
v69 = add_virtual_target
v70 = add_virtual_target
v71 = add_virtual_target
v72 = add_virtual_target
v73 = add_virtual_target
v74 = add_virtual_target
v75 = add_virtual_target
v76 = add_virtual_target
v77 = add_virtual_target
v78 = add_virtual_target
v79 = add_virtual_target
v80 = add_virtual_target
v81 = add_virtual_target
v82 = add_virtual_target
# [src/dungeon.nr]
# [22] assert(path[0].x == 0);
v1 = constant 0
connect v67,v1
# [23] assert(path[0].y == 0);
v1 = constant 0
connect v68,v1
# [24] assert(path[7].x == dagger.x);
connect v81,v65
# [25] assert(path[7].y == dagger.y);
connect v82,v66
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r4c1,r4c2,r4c3,r4c4,r4c5,r4c6,r4c7,r4c8,r4c9,r4c10,r4c11,r4c12,r4c13,r4c14,r4c15,r4c16,r4c17,r4c18,r4c19,r4c20,r4c21,r4c22,r4c23,r4c24,r4c25,r4c26,r4c27,r4c28,r4c29,r4c30,r4c31,r4c32,r4c33,r4c34,r4c35,r4c36,r4c37,r4c38,r4c39,r4c40,r4c41,r4c42,r4c43,r4c44,r4c45,r4c46,r4c47,r4c48,r4c49,r4c50,r4c51,r4c52,r4c53,r4c54,r4c55,r4c56,r4c57,r4c58,r4c59,r4c60,r4c61,r4c62,r4c63,r5c1,r5c2,r5c3,r5c4,r5c5,r5c6,r5c7,r5c8,r5c9,r5c10,r5c11,r5c12,r5c13,r5c14,r5c15,r5c16,r5c17,r5c18,r5c19,r5c20,r5c21,r5c22,r5c23,r5c24,r5c25,r5c26,r5c27,r5c28,r5c29,r5c30,r5c31,r5c32,r5c33,r5c34,r5c35,r5c36,r5c37,r5c38,r5c39,r5c40,r5c41,r5c42,r5c43,r5c44,r5c45,r5c46,r5c47,r5c48,r5c49,r5c50,r5c51,r5c52,r5c53,r5c54,r5c55,r5c56,r5c57,r5c58,r5c59,r5c60,r5c61,r5c62,r5c63,r6c1,r6c2,r6c3,r6c4,r6c5,r6c6,r6c7,r6c8,r6c9,r6c10,r6c11,r6c12,r6c13,r6c14,r6c15,r6c16,r6c17,r6c18,r6c19,r6c20,r6c21,r6c22,r6c23,r6c24,r6c25,r6c26,r6c27,r6c28,r6c29,r6c30,r6c31,r6c32,r6c33,r6c34,r6c35,r6c36,r6c37,r6c38,r6c39,r6c40,r6c41,r6c42,r6c43,r6c44,r6c45,r6c46,r6c47,r6c48,r6c49,r6c50,r6c51,r6c52,r6c53,r6c54,r6c55,r6c56,r6c57,r6c58,r6c59,r6c60,r6c61,r6c62,r6c63,r7c1,r7c2,r7c3,r7c4,r7c5,r7c6,r7c7,r7c8,r7c9,r7c10,r7c11,r7c12,r7c13,r7c14,r7c15,r7c16,r7c17,r7c18,r7c19,r7c20,r7c21,r7c22,r7c23,r7c24,r7c25,r7c26,r7c27,r7c28,r7c29,r7c30,r7c31,r7c32,r7c33,r7c34,r7c35,r7c36,r7c37,r7c38,r7c39,r7c40,r7c41,r7c42,r7c43,r7c44,r7c45,r7c46,r7c47,r7c48,r7c49,r7c50,r7c51,r7c52,r7c53,r7c54,r7c55,r7c56,r7c57,r7c58,r7c59,r7c60,r7c61,r7c62,r7c63,r8c1,r8c2) = split_le v69,254
r9c43 = le_sum (r4c1,r4c2,r4c3,r4c4,r4c5,r4c6,r4c7,r4c8)
v85 = add_virtual_target
connect r9c43,v85
v86 = constant 8
# lessthan begin (a = v85, b = v86, signed = false)
(r10c1,r10c2,r10c3,r10c4,r10c5,r10c6,r10c7,r10c8) = split_le v85,8
(r11c1,r11c2,r11c3,r11c4,r11c5,r11c6,r11c7,r11c8) = split_le v86,8
r3c19 = not r10c8
r12c3 = and r3c19,r11c8
v88 = is_equal r10c8,r11c8
r3c35 = not r10c7
r12c15 = and r3c35,r11c7
r12c19 = and r12c15,v88
r9c47 = or r12c3,r12c19
v90 = is_equal r10c7,r11c7
r12c31 = and v88,v90
r3c51 = not r10c6
r12c35 = and r3c51,r11c6
r12c39 = and r12c35,r12c31
r9c51 = or r9c47,r12c39
v92 = is_equal r10c6,r11c6
r12c51 = and r12c31,v92
r3c67 = not r10c5
r12c55 = and r3c67,r11c5
r12c59 = and r12c55,r12c51
r9c55 = or r9c51,r12c59
v94 = is_equal r10c5,r11c5
r12c71 = and r12c51,v94
r14c3 = not r10c4
r12c75 = and r14c3,r11c4
r12c79 = and r12c75,r12c71
r9c59 = or r9c55,r12c79
v96 = is_equal r10c4,r11c4
r15c11 = and r12c71,v96
r14c19 = not r10c3
r15c15 = and r14c19,r11c3
r15c19 = and r15c15,r15c11
r9c63 = or r9c59,r15c19
v98 = is_equal r10c3,r11c3
r15c31 = and r15c11,v98
r14c35 = not r10c2
r15c35 = and r14c35,r11c2
r15c39 = and r15c35,r15c31
r9c67 = or r9c63,r15c39
v100 = is_equal r10c2,r11c2
r15c51 = and r15c31,v100
r14c51 = not r10c1
r15c55 = and r14c51,r11c1
r15c59 = and r15c55,r15c51
r9c71 = or r9c67,r15c59
# lessthan end (result = r9c71)
(r16c1,r16c2,r16c3,r16c4,r16c5,r16c6,r16c7,r16c8,r16c9,r16c10,r16c11,r16c12,r16c13,r16c14,r16c15,r16c16,r16c17,r16c18,r16c19,r16c20,r16c21,r16c22,r16c23,r16c24,r16c25,r16c26,r16c27,r16c28,r16c29,r16c30,r16c31,r16c32,r16c33,r16c34,r16c35,r16c36,r16c37,r16c38,r16c39,r16c40,r16c41,r16c42,r16c43,r16c44,r16c45,r16c46,r16c47,r16c48,r16c49,r16c50,r16c51,r16c52,r16c53,r16c54,r16c55,r16c56,r16c57,r16c58,r16c59,r16c60,r16c61,r16c62,r16c63,r17c1,r17c2,r17c3,r17c4,r17c5,r17c6,r17c7,r17c8,r17c9,r17c10,r17c11,r17c12,r17c13,r17c14,r17c15,r17c16,r17c17,r17c18,r17c19,r17c20,r17c21,r17c22,r17c23,r17c24,r17c25,r17c26,r17c27,r17c28,r17c29,r17c30,r17c31,r17c32,r17c33,r17c34,r17c35,r17c36,r17c37,r17c38,r17c39,r17c40,r17c41,r17c42,r17c43,r17c44,r17c45,r17c46,r17c47,r17c48,r17c49,r17c50,r17c51,r17c52,r17c53,r17c54,r17c55,r17c56,r17c57,r17c58,r17c59,r17c60,r17c61,r17c62,r17c63,r18c1,r18c2,r18c3,r18c4,r18c5,r18c6,r18c7,r18c8,r18c9,r18c10,r18c11,r18c12,r18c13,r18c14,r18c15,r18c16,r18c17,r18c18,r18c19,r18c20,r18c21,r18c22,r18c23,r18c24,r18c25,r18c26,r18c27,r18c28,r18c29,r18c30,r18c31,r18c32,r18c33,r18c34,r18c35,r18c36,r18c37,r18c38,r18c39,r18c40,r18c41,r18c42,r18c43,r18c44,r18c45,r18c46,r18c47,r18c48,r18c49,r18c50,r18c51,r18c52,r18c53,r18c54,r18c55,r18c56,r18c57,r18c58,r18c59,r18c60,r18c61,r18c62,r18c63,r19c1,r19c2,r19c3,r19c4,r19c5,r19c6,r19c7,r19c8,r19c9,r19c10,r19c11,r19c12,r19c13,r19c14,r19c15,r19c16,r19c17,r19c18,r19c19,r19c20,r19c21,r19c22,r19c23,r19c24,r19c25,r19c26,r19c27,r19c28,r19c29,r19c30,r19c31,r19c32,r19c33,r19c34,r19c35,r19c36,r19c37,r19c38,r19c39,r19c40,r19c41,r19c42,r19c43,r19c44,r19c45,r19c46,r19c47,r19c48,r19c49,r19c50,r19c51,r19c52,r19c53,r19c54,r19c55,r19c56,r19c57,r19c58,r19c59,r19c60,r19c61,r19c62,r19c63,r20c1,r20c2) = split_le v70,254
r21c35 = le_sum (r16c1,r16c2,r16c3,r16c4,r16c5,r16c6,r16c7,r16c8)
v102 = add_virtual_target
connect r21c35,v102
v86 = constant 8
# lessthan begin (a = v102, b = v86, signed = false)
(r22c1,r22c2,r22c3,r22c4,r22c5,r22c6,r22c7,r22c8) = split_le v102,8
(r23c1,r23c2,r23c3,r23c4,r23c5,r23c6,r23c7,r23c8) = split_le v86,8
r14c55 = not r22c8
r15c63 = and r14c55,r23c8
v103 = is_equal r22c8,r23c8
r14c71 = not r22c7
r15c75 = and r14c71,r23c7
r15c79 = and r15c75,v103
r21c39 = or r15c63,r15c79
v105 = is_equal r22c7,r23c7
r24c11 = and v103,v105
r25c7 = not r22c6
r24c15 = and r25c7,r23c6
r24c19 = and r24c15,r24c11
r21c43 = or r21c39,r24c19
v107 = is_equal r22c6,r23c6
r24c31 = and r24c11,v107
r25c23 = not r22c5
r24c35 = and r25c23,r23c5
r24c39 = and r24c35,r24c31
r21c47 = or r21c43,r24c39
v109 = is_equal r22c5,r23c5
r24c51 = and r24c31,v109
r25c39 = not r22c4
r24c55 = and r25c39,r23c4
r24c59 = and r24c55,r24c51
r21c51 = or r21c47,r24c59
v111 = is_equal r22c4,r23c4
r24c71 = and r24c51,v111
r25c55 = not r22c3
r24c75 = and r25c55,r23c3
r24c79 = and r24c75,r24c71
r21c55 = or r21c51,r24c79
v113 = is_equal r22c3,r23c3
r26c11 = and r24c71,v113
r25c71 = not r22c2
r26c15 = and r25c71,r23c2
r26c19 = and r26c15,r26c11
r21c59 = or r21c55,r26c19
v115 = is_equal r22c2,r23c2
r26c31 = and r26c11,v115
r27c7 = not r22c1
r26c35 = and r27c7,r23c1
r26c39 = and r26c35,r26c31
r21c63 = or r21c59,r26c39
# lessthan end (result = r21c63)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r9c71,v87
v87 = constant_bool true
connect r21c63,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
v117 = is_equal v84,v69
v87 = constant 1
v119 = is_equal v87,v70
r26c59 = and v117,v119
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v121 = constant 18446744069414584319
v122 = is_equal v121,v69
r26c71 = and v122,v119
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r21c67 = or r26c59,r26c71
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v124 = constant 18446744069414584320
v125 = is_equal v124,v70
r28c3 = and v117,v125
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r21c71 = or r21c67,r28c3
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r28c7 = and v122,v125
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r21c75 = or r21c71,r28c7
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
v127 = is_equal v87,v69
v84 = constant 2
v129 = is_equal v84,v70
r28c27 = and v127,v129
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r21c79 = or r21c75,r28c27
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v124 = constant 18446744069414584320
v131 = is_equal v124,v69
r28c39 = and v131,v129
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r30c3 = or r21c79,r28c39
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v121 = constant 18446744069414584319
v133 = is_equal v121,v70
r28c51 = and v127,v133
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r30c7 = or r30c3,r28c51
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r28c55 = and v131,v133
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r30c11 = or r30c7,r28c55
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r30c11,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r32c1,r32c2,r32c3,r32c4,r32c5,r32c6,r32c7,r32c8,r32c9,r32c10,r32c11,r32c12,r32c13,r32c14,r32c15,r32c16,r32c17,r32c18,r32c19,r32c20,r32c21,r32c22,r32c23,r32c24,r32c25,r32c26,r32c27,r32c28,r32c29,r32c30,r32c31,r32c32,r32c33,r32c34,r32c35,r32c36,r32c37,r32c38,r32c39,r32c40,r32c41,r32c42,r32c43,r32c44,r32c45,r32c46,r32c47,r32c48,r32c49,r32c50,r32c51,r32c52,r32c53,r32c54,r32c55,r32c56,r32c57,r32c58,r32c59,r32c60,r32c61,r32c62,r32c63,r33c1,r33c2,r33c3,r33c4,r33c5,r33c6,r33c7,r33c8,r33c9,r33c10,r33c11,r33c12,r33c13,r33c14,r33c15,r33c16,r33c17,r33c18,r33c19,r33c20,r33c21,r33c22,r33c23,r33c24,r33c25,r33c26,r33c27,r33c28,r33c29,r33c30,r33c31,r33c32,r33c33,r33c34,r33c35,r33c36,r33c37,r33c38,r33c39,r33c40,r33c41,r33c42,r33c43,r33c44,r33c45,r33c46,r33c47,r33c48,r33c49,r33c50,r33c51,r33c52,r33c53,r33c54,r33c55,r33c56,r33c57,r33c58,r33c59,r33c60,r33c61,r33c62,r33c63,r34c1,r34c2,r34c3,r34c4,r34c5,r34c6,r34c7,r34c8,r34c9,r34c10,r34c11,r34c12,r34c13,r34c14,r34c15,r34c16,r34c17,r34c18,r34c19,r34c20,r34c21,r34c22,r34c23,r34c24,r34c25,r34c26,r34c27,r34c28,r34c29,r34c30,r34c31,r34c32,r34c33,r34c34,r34c35,r34c36,r34c37,r34c38,r34c39,r34c40,r34c41,r34c42,r34c43,r34c44,r34c45,r34c46,r34c47,r34c48,r34c49,r34c50,r34c51,r34c52,r34c53,r34c54,r34c55,r34c56,r34c57,r34c58,r34c59,r34c60,r34c61,r34c62,r34c63,r35c1,r35c2,r35c3,r35c4,r35c5,r35c6,r35c7,r35c8,r35c9,r35c10,r35c11,r35c12,r35c13,r35c14,r35c15,r35c16,r35c17,r35c18,r35c19,r35c20,r35c21,r35c22,r35c23,r35c24,r35c25,r35c26,r35c27,r35c28,r35c29,r35c30,r35c31,r35c32,r35c33,r35c34,r35c35,r35c36,r35c37,r35c38,r35c39,r35c40,r35c41,r35c42,r35c43,r35c44,r35c45,r35c46,r35c47,r35c48,r35c49,r35c50,r35c51,r35c52,r35c53,r35c54,r35c55,r35c56,r35c57,r35c58,r35c59,r35c60,r35c61,r35c62,r35c63,r36c1,r36c2) = split_le v71,254
r30c55 = le_sum (r32c1,r32c2,r32c3,r32c4,r32c5,r32c6,r32c7,r32c8)
v135 = add_virtual_target
connect r30c55,v135
v86 = constant 8
# lessthan begin (a = v135, b = v86, signed = false)
(r37c1,r37c2,r37c3,r37c4,r37c5,r37c6,r37c7,r37c8) = split_le v135,8
(r38c1,r38c2,r38c3,r38c4,r38c5,r38c6,r38c7,r38c8) = split_le v86,8
r29c27 = not r37c8
r28c59 = and r29c27,r38c8
v136 = is_equal r37c8,r38c8
r29c43 = not r37c7
r28c71 = and r29c43,r38c7
r28c75 = and r28c71,v136
r30c59 = or r28c59,r28c75
v138 = is_equal r37c7,r38c7
r39c7 = and v136,v138
r29c59 = not r37c6
r39c11 = and r29c59,r38c6
r39c15 = and r39c11,r39c7
r30c63 = or r30c59,r39c15
v140 = is_equal r37c6,r38c6
r39c27 = and r39c7,v140
r29c75 = not r37c5
r39c31 = and r29c75,r38c5
r39c35 = and r39c31,r39c27
r30c67 = or r30c63,r39c35
v142 = is_equal r37c5,r38c5
r39c47 = and r39c27,v142
r40c11 = not r37c4
r39c51 = and r40c11,r38c4
r39c55 = and r39c51,r39c47
r30c71 = or r30c67,r39c55
v144 = is_equal r37c4,r38c4
r39c67 = and r39c47,v144
r40c27 = not r37c3
r39c71 = and r40c27,r38c3
r39c75 = and r39c71,r39c67
r30c75 = or r30c71,r39c75
v146 = is_equal r37c3,r38c3
r41c7 = and r39c67,v146
r40c43 = not r37c2
r41c11 = and r40c43,r38c2
r41c15 = and r41c11,r41c7
r30c79 = or r30c75,r41c15
v148 = is_equal r37c2,r38c2
r41c27 = and r41c7,v148
r40c59 = not r37c1
r41c31 = and r40c59,r38c1
r41c35 = and r41c31,r41c27
r42c3 = or r30c79,r41c35
# lessthan end (result = r42c3)
(r43c1,r43c2,r43c3,r43c4,r43c5,r43c6,r43c7,r43c8,r43c9,r43c10,r43c11,r43c12,r43c13,r43c14,r43c15,r43c16,r43c17,r43c18,r43c19,r43c20,r43c21,r43c22,r43c23,r43c24,r43c25,r43c26,r43c27,r43c28,r43c29,r43c30,r43c31,r43c32,r43c33,r43c34,r43c35,r43c36,r43c37,r43c38,r43c39,r43c40,r43c41,r43c42,r43c43,r43c44,r43c45,r43c46,r43c47,r43c48,r43c49,r43c50,r43c51,r43c52,r43c53,r43c54,r43c55,r43c56,r43c57,r43c58,r43c59,r43c60,r43c61,r43c62,r43c63,r44c1,r44c2,r44c3,r44c4,r44c5,r44c6,r44c7,r44c8,r44c9,r44c10,r44c11,r44c12,r44c13,r44c14,r44c15,r44c16,r44c17,r44c18,r44c19,r44c20,r44c21,r44c22,r44c23,r44c24,r44c25,r44c26,r44c27,r44c28,r44c29,r44c30,r44c31,r44c32,r44c33,r44c34,r44c35,r44c36,r44c37,r44c38,r44c39,r44c40,r44c41,r44c42,r44c43,r44c44,r44c45,r44c46,r44c47,r44c48,r44c49,r44c50,r44c51,r44c52,r44c53,r44c54,r44c55,r44c56,r44c57,r44c58,r44c59,r44c60,r44c61,r44c62,r44c63,r45c1,r45c2,r45c3,r45c4,r45c5,r45c6,r45c7,r45c8,r45c9,r45c10,r45c11,r45c12,r45c13,r45c14,r45c15,r45c16,r45c17,r45c18,r45c19,r45c20,r45c21,r45c22,r45c23,r45c24,r45c25,r45c26,r45c27,r45c28,r45c29,r45c30,r45c31,r45c32,r45c33,r45c34,r45c35,r45c36,r45c37,r45c38,r45c39,r45c40,r45c41,r45c42,r45c43,r45c44,r45c45,r45c46,r45c47,r45c48,r45c49,r45c50,r45c51,r45c52,r45c53,r45c54,r45c55,r45c56,r45c57,r45c58,r45c59,r45c60,r45c61,r45c62,r45c63,r46c1,r46c2,r46c3,r46c4,r46c5,r46c6,r46c7,r46c8,r46c9,r46c10,r46c11,r46c12,r46c13,r46c14,r46c15,r46c16,r46c17,r46c18,r46c19,r46c20,r46c21,r46c22,r46c23,r46c24,r46c25,r46c26,r46c27,r46c28,r46c29,r46c30,r46c31,r46c32,r46c33,r46c34,r46c35,r46c36,r46c37,r46c38,r46c39,r46c40,r46c41,r46c42,r46c43,r46c44,r46c45,r46c46,r46c47,r46c48,r46c49,r46c50,r46c51,r46c52,r46c53,r46c54,r46c55,r46c56,r46c57,r46c58,r46c59,r46c60,r46c61,r46c62,r46c63,r47c1,r47c2) = split_le v72,254
r42c47 = le_sum (r43c1,r43c2,r43c3,r43c4,r43c5,r43c6,r43c7,r43c8)
v150 = add_virtual_target
connect r42c47,v150
v86 = constant 8
# lessthan begin (a = v150, b = v86, signed = false)
(r48c1,r48c2,r48c3,r48c4,r48c5,r48c6,r48c7,r48c8) = split_le v150,8
(r49c1,r49c2,r49c3,r49c4,r49c5,r49c6,r49c7,r49c8) = split_le v86,8
r40c63 = not r48c8
r41c39 = and r40c63,r49c8
v151 = is_equal r48c8,r49c8
r40c79 = not r48c7
r41c51 = and r40c79,r49c7
r41c55 = and r41c51,v151
r42c51 = or r41c39,r41c55
v153 = is_equal r48c7,r49c7
r41c67 = and v151,v153
r50c15 = not r48c6
r41c71 = and r50c15,r49c6
r41c75 = and r41c71,r41c67
r42c55 = or r42c51,r41c75
v155 = is_equal r48c6,r49c6
r51c7 = and r41c67,v155
r50c31 = not r48c5
r51c11 = and r50c31,r49c5
r51c15 = and r51c11,r51c7
r42c59 = or r42c55,r51c15
v157 = is_equal r48c5,r49c5
r51c27 = and r51c7,v157
r50c47 = not r48c4
r51c31 = and r50c47,r49c4
r51c35 = and r51c31,r51c27
r42c63 = or r42c59,r51c35
v159 = is_equal r48c4,r49c4
r51c47 = and r51c27,v159
r50c63 = not r48c3
r51c51 = and r50c63,r49c3
r51c55 = and r51c51,r51c47
r42c67 = or r42c63,r51c55
v161 = is_equal r48c3,r49c3
r51c67 = and r51c47,v161
r50c79 = not r48c2
r51c71 = and r50c79,r49c2
r51c75 = and r51c71,r51c67
r42c71 = or r42c67,r51c75
v163 = is_equal r48c2,r49c2
r53c7 = and r51c67,v163
r52c15 = not r48c1
r53c11 = and r52c15,r49c1
r53c15 = and r53c11,r53c7
r42c75 = or r42c71,r53c15
# lessthan end (result = r42c75)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r42c3,v87
v87 = constant_bool true
connect r42c75,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r42c79 = add v69,v84
v165 = is_equal r42c79,v71
v87 = constant 1
r54c3 = add v70,v87
v167 = is_equal r54c3,v72
r53c35 = and v165,v167
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r52c43 = sub v69,v84
v169 = is_equal r52c43,v71
r53c47 = and v169,v167
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r54c7 = or r53c35,r53c47
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r52c59 = sub v70,v87
v171 = is_equal r52c59,v72
r53c59 = and v165,v171
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r54c11 = or r54c7,r53c59
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r53c63 = and v169,v171
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r54c15 = or r54c11,r53c63
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r54c19 = add v69,v87
v173 = is_equal r54c19,v71
v84 = constant 2
r54c23 = add v70,v84
v175 = is_equal r54c23,v72
r56c3 = and v173,v175
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r54c27 = or r54c15,r56c3
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r55c19 = sub v69,v87
v177 = is_equal r55c19,v71
r56c15 = and v177,v175
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r54c31 = or r54c27,r56c15
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r55c35 = sub v70,v84
v179 = is_equal r55c35,v72
r56c27 = and v173,v179
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r54c35 = or r54c31,r56c27
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r56c31 = and v177,v179
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r54c39 = or r54c35,r56c31
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r54c39,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r58c1,r58c2,r58c3,r58c4,r58c5,r58c6,r58c7,r58c8,r58c9,r58c10,r58c11,r58c12,r58c13,r58c14,r58c15,r58c16,r58c17,r58c18,r58c19,r58c20,r58c21,r58c22,r58c23,r58c24,r58c25,r58c26,r58c27,r58c28,r58c29,r58c30,r58c31,r58c32,r58c33,r58c34,r58c35,r58c36,r58c37,r58c38,r58c39,r58c40,r58c41,r58c42,r58c43,r58c44,r58c45,r58c46,r58c47,r58c48,r58c49,r58c50,r58c51,r58c52,r58c53,r58c54,r58c55,r58c56,r58c57,r58c58,r58c59,r58c60,r58c61,r58c62,r58c63,r59c1,r59c2,r59c3,r59c4,r59c5,r59c6,r59c7,r59c8,r59c9,r59c10,r59c11,r59c12,r59c13,r59c14,r59c15,r59c16,r59c17,r59c18,r59c19,r59c20,r59c21,r59c22,r59c23,r59c24,r59c25,r59c26,r59c27,r59c28,r59c29,r59c30,r59c31,r59c32,r59c33,r59c34,r59c35,r59c36,r59c37,r59c38,r59c39,r59c40,r59c41,r59c42,r59c43,r59c44,r59c45,r59c46,r59c47,r59c48,r59c49,r59c50,r59c51,r59c52,r59c53,r59c54,r59c55,r59c56,r59c57,r59c58,r59c59,r59c60,r59c61,r59c62,r59c63,r60c1,r60c2,r60c3,r60c4,r60c5,r60c6,r60c7,r60c8,r60c9,r60c10,r60c11,r60c12,r60c13,r60c14,r60c15,r60c16,r60c17,r60c18,r60c19,r60c20,r60c21,r60c22,r60c23,r60c24,r60c25,r60c26,r60c27,r60c28,r60c29,r60c30,r60c31,r60c32,r60c33,r60c34,r60c35,r60c36,r60c37,r60c38,r60c39,r60c40,r60c41,r60c42,r60c43,r60c44,r60c45,r60c46,r60c47,r60c48,r60c49,r60c50,r60c51,r60c52,r60c53,r60c54,r60c55,r60c56,r60c57,r60c58,r60c59,r60c60,r60c61,r60c62,r60c63,r61c1,r61c2,r61c3,r61c4,r61c5,r61c6,r61c7,r61c8,r61c9,r61c10,r61c11,r61c12,r61c13,r61c14,r61c15,r61c16,r61c17,r61c18,r61c19,r61c20,r61c21,r61c22,r61c23,r61c24,r61c25,r61c26,r61c27,r61c28,r61c29,r61c30,r61c31,r61c32,r61c33,r61c34,r61c35,r61c36,r61c37,r61c38,r61c39,r61c40,r61c41,r61c42,r61c43,r61c44,r61c45,r61c46,r61c47,r61c48,r61c49,r61c50,r61c51,r61c52,r61c53,r61c54,r61c55,r61c56,r61c57,r61c58,r61c59,r61c60,r61c61,r61c62,r61c63,r62c1,r62c2) = split_le v73,254
r63c3 = le_sum (r58c1,r58c2,r58c3,r58c4,r58c5,r58c6,r58c7,r58c8)
v181 = add_virtual_target
connect r63c3,v181
v86 = constant 8
# lessthan begin (a = v181, b = v86, signed = false)
(r64c1,r64c2,r64c3,r64c4,r64c5,r64c6,r64c7,r64c8) = split_le v181,8
(r65c1,r65c2,r65c3,r65c4,r65c5,r65c6,r65c7,r65c8) = split_le v86,8
r55c51 = not r64c8
r56c35 = and r55c51,r65c8
v182 = is_equal r64c8,r65c8
r55c67 = not r64c7
r56c47 = and r55c67,r65c7
r56c51 = and r56c47,v182
r63c7 = or r56c35,r56c51
v184 = is_equal r64c7,r65c7
r56c63 = and v182,v184
r66c3 = not r64c6
r56c67 = and r66c3,r65c6
r56c71 = and r56c67,r56c63
r63c11 = or r63c7,r56c71
v186 = is_equal r64c6,r65c6
r67c3 = and r56c63,v186
r66c19 = not r64c5
r67c7 = and r66c19,r65c5
r67c11 = and r67c7,r67c3
r63c15 = or r63c11,r67c11
v188 = is_equal r64c5,r65c5
r67c23 = and r67c3,v188
r66c35 = not r64c4
r67c27 = and r66c35,r65c4
r67c31 = and r67c27,r67c23
r63c19 = or r63c15,r67c31
v190 = is_equal r64c4,r65c4
r67c43 = and r67c23,v190
r66c51 = not r64c3
r67c47 = and r66c51,r65c3
r67c51 = and r67c47,r67c43
r63c23 = or r63c19,r67c51
v192 = is_equal r64c3,r65c3
r67c63 = and r67c43,v192
r66c67 = not r64c2
r67c67 = and r66c67,r65c2
r67c71 = and r67c67,r67c63
r63c27 = or r63c23,r67c71
v194 = is_equal r64c2,r65c2
r68c3 = and r67c63,v194
r69c3 = not r64c1
r68c7 = and r69c3,r65c1
r68c11 = and r68c7,r68c3
r63c31 = or r63c27,r68c11
# lessthan end (result = r63c31)
(r70c1,r70c2,r70c3,r70c4,r70c5,r70c6,r70c7,r70c8,r70c9,r70c10,r70c11,r70c12,r70c13,r70c14,r70c15,r70c16,r70c17,r70c18,r70c19,r70c20,r70c21,r70c22,r70c23,r70c24,r70c25,r70c26,r70c27,r70c28,r70c29,r70c30,r70c31,r70c32,r70c33,r70c34,r70c35,r70c36,r70c37,r70c38,r70c39,r70c40,r70c41,r70c42,r70c43,r70c44,r70c45,r70c46,r70c47,r70c48,r70c49,r70c50,r70c51,r70c52,r70c53,r70c54,r70c55,r70c56,r70c57,r70c58,r70c59,r70c60,r70c61,r70c62,r70c63,r71c1,r71c2,r71c3,r71c4,r71c5,r71c6,r71c7,r71c8,r71c9,r71c10,r71c11,r71c12,r71c13,r71c14,r71c15,r71c16,r71c17,r71c18,r71c19,r71c20,r71c21,r71c22,r71c23,r71c24,r71c25,r71c26,r71c27,r71c28,r71c29,r71c30,r71c31,r71c32,r71c33,r71c34,r71c35,r71c36,r71c37,r71c38,r71c39,r71c40,r71c41,r71c42,r71c43,r71c44,r71c45,r71c46,r71c47,r71c48,r71c49,r71c50,r71c51,r71c52,r71c53,r71c54,r71c55,r71c56,r71c57,r71c58,r71c59,r71c60,r71c61,r71c62,r71c63,r72c1,r72c2,r72c3,r72c4,r72c5,r72c6,r72c7,r72c8,r72c9,r72c10,r72c11,r72c12,r72c13,r72c14,r72c15,r72c16,r72c17,r72c18,r72c19,r72c20,r72c21,r72c22,r72c23,r72c24,r72c25,r72c26,r72c27,r72c28,r72c29,r72c30,r72c31,r72c32,r72c33,r72c34,r72c35,r72c36,r72c37,r72c38,r72c39,r72c40,r72c41,r72c42,r72c43,r72c44,r72c45,r72c46,r72c47,r72c48,r72c49,r72c50,r72c51,r72c52,r72c53,r72c54,r72c55,r72c56,r72c57,r72c58,r72c59,r72c60,r72c61,r72c62,r72c63,r73c1,r73c2,r73c3,r73c4,r73c5,r73c6,r73c7,r73c8,r73c9,r73c10,r73c11,r73c12,r73c13,r73c14,r73c15,r73c16,r73c17,r73c18,r73c19,r73c20,r73c21,r73c22,r73c23,r73c24,r73c25,r73c26,r73c27,r73c28,r73c29,r73c30,r73c31,r73c32,r73c33,r73c34,r73c35,r73c36,r73c37,r73c38,r73c39,r73c40,r73c41,r73c42,r73c43,r73c44,r73c45,r73c46,r73c47,r73c48,r73c49,r73c50,r73c51,r73c52,r73c53,r73c54,r73c55,r73c56,r73c57,r73c58,r73c59,r73c60,r73c61,r73c62,r73c63,r74c1,r74c2) = split_le v74,254
r63c75 = le_sum (r70c1,r70c2,r70c3,r70c4,r70c5,r70c6,r70c7,r70c8)
v196 = add_virtual_target
connect r63c75,v196
v86 = constant 8
# lessthan begin (a = v196, b = v86, signed = false)
(r75c1,r75c2,r75c3,r75c4,r75c5,r75c6,r75c7,r75c8) = split_le v196,8
(r76c1,r76c2,r76c3,r76c4,r76c5,r76c6,r76c7,r76c8) = split_le v86,8
r69c7 = not r75c8
r68c15 = and r69c7,r76c8
v197 = is_equal r75c8,r76c8
r69c23 = not r75c7
r68c27 = and r69c23,r76c7
r68c31 = and r68c27,v197
r63c79 = or r68c15,r68c31
v199 = is_equal r75c7,r76c7
r68c43 = and v197,v199
r69c39 = not r75c6
r68c47 = and r69c39,r76c6
r68c51 = and r68c47,r68c43
r77c3 = or r63c79,r68c51
v201 = is_equal r75c6,r76c6
r68c63 = and r68c43,v201
r69c55 = not r75c5
r68c67 = and r69c55,r76c5
r68c71 = and r68c67,r68c63
r77c7 = or r77c3,r68c71
v203 = is_equal r75c5,r76c5
r78c3 = and r68c63,v203
r69c71 = not r75c4
r78c7 = and r69c71,r76c4
r78c11 = and r78c7,r78c3
r77c11 = or r77c7,r78c11
v205 = is_equal r75c4,r76c4
r78c23 = and r78c3,v205
r79c7 = not r75c3
r78c27 = and r79c7,r76c3
r78c31 = and r78c27,r78c23
r77c15 = or r77c11,r78c31
v207 = is_equal r75c3,r76c3
r78c43 = and r78c23,v207
r79c23 = not r75c2
r78c47 = and r79c23,r76c2
r78c51 = and r78c47,r78c43
r77c19 = or r77c15,r78c51
v209 = is_equal r75c2,r76c2
r78c63 = and r78c43,v209
r79c39 = not r75c1
r78c67 = and r79c39,r76c1
r78c71 = and r78c67,r78c63
r77c23 = or r77c19,r78c71
# lessthan end (result = r77c23)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r63c31,v87
v87 = constant_bool true
connect r77c23,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r77c27 = add v71,v84
v211 = is_equal r77c27,v73
v87 = constant 1
r77c31 = add v72,v87
v213 = is_equal r77c31,v74
r80c11 = and v211,v213
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r79c67 = sub v71,v84
v215 = is_equal r79c67,v73
r80c23 = and v215,v213
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r77c35 = or r80c11,r80c23
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r81c3 = sub v72,v87
v217 = is_equal r81c3,v74
r80c35 = and v211,v217
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r77c39 = or r77c35,r80c35
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r80c39 = and v215,v217
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r77c43 = or r77c39,r80c39
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r77c47 = add v71,v87
v219 = is_equal r77c47,v73
v84 = constant 2
r77c51 = add v72,v84
v221 = is_equal r77c51,v74
r80c59 = and v219,v221
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r77c55 = or r77c43,r80c59
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r81c43 = sub v71,v87
v223 = is_equal r81c43,v73
r80c71 = and v223,v221
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r77c59 = or r77c55,r80c71
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r81c59 = sub v72,v84
v225 = is_equal r81c59,v74
r83c3 = and v219,v225
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r77c63 = or r77c59,r83c3
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r83c7 = and v223,v225
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r77c67 = or r77c63,r83c7
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r77c67,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r84c1,r84c2,r84c3,r84c4,r84c5,r84c6,r84c7,r84c8,r84c9,r84c10,r84c11,r84c12,r84c13,r84c14,r84c15,r84c16,r84c17,r84c18,r84c19,r84c20,r84c21,r84c22,r84c23,r84c24,r84c25,r84c26,r84c27,r84c28,r84c29,r84c30,r84c31,r84c32,r84c33,r84c34,r84c35,r84c36,r84c37,r84c38,r84c39,r84c40,r84c41,r84c42,r84c43,r84c44,r84c45,r84c46,r84c47,r84c48,r84c49,r84c50,r84c51,r84c52,r84c53,r84c54,r84c55,r84c56,r84c57,r84c58,r84c59,r84c60,r84c61,r84c62,r84c63,r85c1,r85c2,r85c3,r85c4,r85c5,r85c6,r85c7,r85c8,r85c9,r85c10,r85c11,r85c12,r85c13,r85c14,r85c15,r85c16,r85c17,r85c18,r85c19,r85c20,r85c21,r85c22,r85c23,r85c24,r85c25,r85c26,r85c27,r85c28,r85c29,r85c30,r85c31,r85c32,r85c33,r85c34,r85c35,r85c36,r85c37,r85c38,r85c39,r85c40,r85c41,r85c42,r85c43,r85c44,r85c45,r85c46,r85c47,r85c48,r85c49,r85c50,r85c51,r85c52,r85c53,r85c54,r85c55,r85c56,r85c57,r85c58,r85c59,r85c60,r85c61,r85c62,r85c63,r86c1,r86c2,r86c3,r86c4,r86c5,r86c6,r86c7,r86c8,r86c9,r86c10,r86c11,r86c12,r86c13,r86c14,r86c15,r86c16,r86c17,r86c18,r86c19,r86c20,r86c21,r86c22,r86c23,r86c24,r86c25,r86c26,r86c27,r86c28,r86c29,r86c30,r86c31,r86c32,r86c33,r86c34,r86c35,r86c36,r86c37,r86c38,r86c39,r86c40,r86c41,r86c42,r86c43,r86c44,r86c45,r86c46,r86c47,r86c48,r86c49,r86c50,r86c51,r86c52,r86c53,r86c54,r86c55,r86c56,r86c57,r86c58,r86c59,r86c60,r86c61,r86c62,r86c63,r87c1,r87c2,r87c3,r87c4,r87c5,r87c6,r87c7,r87c8,r87c9,r87c10,r87c11,r87c12,r87c13,r87c14,r87c15,r87c16,r87c17,r87c18,r87c19,r87c20,r87c21,r87c22,r87c23,r87c24,r87c25,r87c26,r87c27,r87c28,r87c29,r87c30,r87c31,r87c32,r87c33,r87c34,r87c35,r87c36,r87c37,r87c38,r87c39,r87c40,r87c41,r87c42,r87c43,r87c44,r87c45,r87c46,r87c47,r87c48,r87c49,r87c50,r87c51,r87c52,r87c53,r87c54,r87c55,r87c56,r87c57,r87c58,r87c59,r87c60,r87c61,r87c62,r87c63,r88c1,r88c2) = split_le v75,254
r89c31 = le_sum (r84c1,r84c2,r84c3,r84c4,r84c5,r84c6,r84c7,r84c8)
v227 = add_virtual_target
connect r89c31,v227
v86 = constant 8
# lessthan begin (a = v227, b = v86, signed = false)
(r90c1,r90c2,r90c3,r90c4,r90c5,r90c6,r90c7,r90c8) = split_le v227,8
(r91c1,r91c2,r91c3,r91c4,r91c5,r91c6,r91c7,r91c8) = split_le v86,8
r81c75 = not r90c8
r83c11 = and r81c75,r91c8
v228 = is_equal r90c8,r91c8
r92c11 = not r90c7
r83c23 = and r92c11,r91c7
r83c27 = and r83c23,v228
r89c35 = or r83c11,r83c27
v230 = is_equal r90c7,r91c7
r83c39 = and v228,v230
r92c27 = not r90c6
r83c43 = and r92c27,r91c6
r83c47 = and r83c43,r83c39
r89c39 = or r89c35,r83c47
v232 = is_equal r90c6,r91c6
r83c59 = and r83c39,v232
r92c43 = not r90c5
r83c63 = and r92c43,r91c5
r83c67 = and r83c63,r83c59
r89c43 = or r89c39,r83c67
v234 = is_equal r90c5,r91c5
r83c79 = and r83c59,v234
r92c59 = not r90c4
r93c3 = and r92c59,r91c4
r93c7 = and r93c3,r83c79
r89c47 = or r89c43,r93c7
v236 = is_equal r90c4,r91c4
r93c19 = and r83c79,v236
r92c75 = not r90c3
r93c23 = and r92c75,r91c3
r93c27 = and r93c23,r93c19
r89c51 = or r89c47,r93c27
v238 = is_equal r90c3,r91c3
r93c39 = and r93c19,v238
r94c11 = not r90c2
r93c43 = and r94c11,r91c2
r93c47 = and r93c43,r93c39
r89c55 = or r89c51,r93c47
v240 = is_equal r90c2,r91c2
r93c59 = and r93c39,v240
r94c27 = not r90c1
r93c63 = and r94c27,r91c1
r93c67 = and r93c63,r93c59
r89c59 = or r89c55,r93c67
# lessthan end (result = r89c59)
(r95c1,r95c2,r95c3,r95c4,r95c5,r95c6,r95c7,r95c8,r95c9,r95c10,r95c11,r95c12,r95c13,r95c14,r95c15,r95c16,r95c17,r95c18,r95c19,r95c20,r95c21,r95c22,r95c23,r95c24,r95c25,r95c26,r95c27,r95c28,r95c29,r95c30,r95c31,r95c32,r95c33,r95c34,r95c35,r95c36,r95c37,r95c38,r95c39,r95c40,r95c41,r95c42,r95c43,r95c44,r95c45,r95c46,r95c47,r95c48,r95c49,r95c50,r95c51,r95c52,r95c53,r95c54,r95c55,r95c56,r95c57,r95c58,r95c59,r95c60,r95c61,r95c62,r95c63,r96c1,r96c2,r96c3,r96c4,r96c5,r96c6,r96c7,r96c8,r96c9,r96c10,r96c11,r96c12,r96c13,r96c14,r96c15,r96c16,r96c17,r96c18,r96c19,r96c20,r96c21,r96c22,r96c23,r96c24,r96c25,r96c26,r96c27,r96c28,r96c29,r96c30,r96c31,r96c32,r96c33,r96c34,r96c35,r96c36,r96c37,r96c38,r96c39,r96c40,r96c41,r96c42,r96c43,r96c44,r96c45,r96c46,r96c47,r96c48,r96c49,r96c50,r96c51,r96c52,r96c53,r96c54,r96c55,r96c56,r96c57,r96c58,r96c59,r96c60,r96c61,r96c62,r96c63,r97c1,r97c2,r97c3,r97c4,r97c5,r97c6,r97c7,r97c8,r97c9,r97c10,r97c11,r97c12,r97c13,r97c14,r97c15,r97c16,r97c17,r97c18,r97c19,r97c20,r97c21,r97c22,r97c23,r97c24,r97c25,r97c26,r97c27,r97c28,r97c29,r97c30,r97c31,r97c32,r97c33,r97c34,r97c35,r97c36,r97c37,r97c38,r97c39,r97c40,r97c41,r97c42,r97c43,r97c44,r97c45,r97c46,r97c47,r97c48,r97c49,r97c50,r97c51,r97c52,r97c53,r97c54,r97c55,r97c56,r97c57,r97c58,r97c59,r97c60,r97c61,r97c62,r97c63,r98c1,r98c2,r98c3,r98c4,r98c5,r98c6,r98c7,r98c8,r98c9,r98c10,r98c11,r98c12,r98c13,r98c14,r98c15,r98c16,r98c17,r98c18,r98c19,r98c20,r98c21,r98c22,r98c23,r98c24,r98c25,r98c26,r98c27,r98c28,r98c29,r98c30,r98c31,r98c32,r98c33,r98c34,r98c35,r98c36,r98c37,r98c38,r98c39,r98c40,r98c41,r98c42,r98c43,r98c44,r98c45,r98c46,r98c47,r98c48,r98c49,r98c50,r98c51,r98c52,r98c53,r98c54,r98c55,r98c56,r98c57,r98c58,r98c59,r98c60,r98c61,r98c62,r98c63,r99c1,r99c2) = split_le v76,254
r100c23 = le_sum (r95c1,r95c2,r95c3,r95c4,r95c5,r95c6,r95c7,r95c8)
v242 = add_virtual_target
connect r100c23,v242
v86 = constant 8
# lessthan begin (a = v242, b = v86, signed = false)
(r101c1,r101c2,r101c3,r101c4,r101c5,r101c6,r101c7,r101c8) = split_le v242,8
(r102c1,r102c2,r102c3,r102c4,r102c5,r102c6,r102c7,r102c8) = split_le v86,8
r94c31 = not r101c8
r93c71 = and r94c31,r102c8
v243 = is_equal r101c8,r102c8
r94c47 = not r101c7
r103c3 = and r94c47,r102c7
r103c7 = and r103c3,v243
r100c27 = or r93c71,r103c7
v245 = is_equal r101c7,r102c7
r103c19 = and v243,v245
r94c63 = not r101c6
r103c23 = and r94c63,r102c6
r103c27 = and r103c23,r103c19
r100c31 = or r100c27,r103c27
v247 = is_equal r101c6,r102c6
r103c39 = and r103c19,v247
r94c79 = not r101c5
r103c43 = and r94c79,r102c5
r103c47 = and r103c43,r103c39
r100c35 = or r100c31,r103c47
v249 = is_equal r101c5,r102c5
r103c59 = and r103c39,v249
r104c15 = not r101c4
r103c63 = and r104c15,r102c4
r103c67 = and r103c63,r103c59
r100c39 = or r100c35,r103c67
v251 = is_equal r101c4,r102c4
r103c79 = and r103c59,v251
r104c31 = not r101c3
r105c3 = and r104c31,r102c3
r105c7 = and r105c3,r103c79
r100c43 = or r100c39,r105c7
v253 = is_equal r101c3,r102c3
r105c19 = and r103c79,v253
r104c47 = not r101c2
r105c23 = and r104c47,r102c2
r105c27 = and r105c23,r105c19
r100c47 = or r100c43,r105c27
v255 = is_equal r101c2,r102c2
r105c39 = and r105c19,v255
r104c63 = not r101c1
r105c43 = and r104c63,r102c1
r105c47 = and r105c43,r105c39
r100c51 = or r100c47,r105c47
# lessthan end (result = r100c51)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r89c59,v87
v87 = constant_bool true
connect r100c51,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r100c55 = add v73,v84
v257 = is_equal r100c55,v75
v87 = constant 1
r100c59 = add v74,v87
v259 = is_equal r100c59,v76
r105c67 = and v257,v259
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r106c11 = sub v73,v84
v261 = is_equal r106c11,v75
r105c79 = and v261,v259
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r100c63 = or r105c67,r105c79
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r106c27 = sub v74,v87
v263 = is_equal r106c27,v76
r107c11 = and v257,v263
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r100c67 = or r100c63,r107c11
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r107c15 = and v261,v263
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r100c71 = or r100c67,r107c15
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r100c75 = add v73,v87
v265 = is_equal r100c75,v75
v84 = constant 2
r100c79 = add v74,v84
v267 = is_equal r100c79,v76
r107c35 = and v265,v267
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r109c3 = or r100c71,r107c35
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r106c67 = sub v73,v87
v269 = is_equal r106c67,v75
r107c47 = and v269,v267
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r109c7 = or r109c3,r107c47
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r110c3 = sub v74,v84
v271 = is_equal r110c3,v76
r107c59 = and v265,v271
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r109c11 = or r109c7,r107c59
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r107c63 = and v269,v271
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r109c15 = or r109c11,r107c63
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r109c15,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r111c1,r111c2,r111c3,r111c4,r111c5,r111c6,r111c7,r111c8,r111c9,r111c10,r111c11,r111c12,r111c13,r111c14,r111c15,r111c16,r111c17,r111c18,r111c19,r111c20,r111c21,r111c22,r111c23,r111c24,r111c25,r111c26,r111c27,r111c28,r111c29,r111c30,r111c31,r111c32,r111c33,r111c34,r111c35,r111c36,r111c37,r111c38,r111c39,r111c40,r111c41,r111c42,r111c43,r111c44,r111c45,r111c46,r111c47,r111c48,r111c49,r111c50,r111c51,r111c52,r111c53,r111c54,r111c55,r111c56,r111c57,r111c58,r111c59,r111c60,r111c61,r111c62,r111c63,r112c1,r112c2,r112c3,r112c4,r112c5,r112c6,r112c7,r112c8,r112c9,r112c10,r112c11,r112c12,r112c13,r112c14,r112c15,r112c16,r112c17,r112c18,r112c19,r112c20,r112c21,r112c22,r112c23,r112c24,r112c25,r112c26,r112c27,r112c28,r112c29,r112c30,r112c31,r112c32,r112c33,r112c34,r112c35,r112c36,r112c37,r112c38,r112c39,r112c40,r112c41,r112c42,r112c43,r112c44,r112c45,r112c46,r112c47,r112c48,r112c49,r112c50,r112c51,r112c52,r112c53,r112c54,r112c55,r112c56,r112c57,r112c58,r112c59,r112c60,r112c61,r112c62,r112c63,r113c1,r113c2,r113c3,r113c4,r113c5,r113c6,r113c7,r113c8,r113c9,r113c10,r113c11,r113c12,r113c13,r113c14,r113c15,r113c16,r113c17,r113c18,r113c19,r113c20,r113c21,r113c22,r113c23,r113c24,r113c25,r113c26,r113c27,r113c28,r113c29,r113c30,r113c31,r113c32,r113c33,r113c34,r113c35,r113c36,r113c37,r113c38,r113c39,r113c40,r113c41,r113c42,r113c43,r113c44,r113c45,r113c46,r113c47,r113c48,r113c49,r113c50,r113c51,r113c52,r113c53,r113c54,r113c55,r113c56,r113c57,r113c58,r113c59,r113c60,r113c61,r113c62,r113c63,r114c1,r114c2,r114c3,r114c4,r114c5,r114c6,r114c7,r114c8,r114c9,r114c10,r114c11,r114c12,r114c13,r114c14,r114c15,r114c16,r114c17,r114c18,r114c19,r114c20,r114c21,r114c22,r114c23,r114c24,r114c25,r114c26,r114c27,r114c28,r114c29,r114c30,r114c31,r114c32,r114c33,r114c34,r114c35,r114c36,r114c37,r114c38,r114c39,r114c40,r114c41,r114c42,r114c43,r114c44,r114c45,r114c46,r114c47,r114c48,r114c49,r114c50,r114c51,r114c52,r114c53,r114c54,r114c55,r114c56,r114c57,r114c58,r114c59,r114c60,r114c61,r114c62,r114c63,r115c1,r115c2) = split_le v77,254
r109c59 = le_sum (r111c1,r111c2,r111c3,r111c4,r111c5,r111c6,r111c7,r111c8)
v273 = add_virtual_target
connect r109c59,v273
v86 = constant 8
# lessthan begin (a = v273, b = v86, signed = false)
(r116c1,r116c2,r116c3,r116c4,r116c5,r116c6,r116c7,r116c8) = split_le v273,8
(r117c1,r117c2,r117c3,r117c4,r117c5,r117c6,r117c7,r117c8) = split_le v86,8
r110c19 = not r116c8
r107c67 = and r110c19,r117c8
v274 = is_equal r116c8,r117c8
r110c35 = not r116c7
r107c79 = and r110c35,r117c7
r118c3 = and r107c79,v274
r109c63 = or r107c67,r118c3
v276 = is_equal r116c7,r117c7
r118c15 = and v274,v276
r110c51 = not r116c6
r118c19 = and r110c51,r117c6
r118c23 = and r118c19,r118c15
r109c67 = or r109c63,r118c23
v278 = is_equal r116c6,r117c6
r118c35 = and r118c15,v278
r110c67 = not r116c5
r118c39 = and r110c67,r117c5
r118c43 = and r118c39,r118c35
r109c71 = or r109c67,r118c43
v280 = is_equal r116c5,r117c5
r118c55 = and r118c35,v280
r119c3 = not r116c4
r118c59 = and r119c3,r117c4
r118c63 = and r118c59,r118c55
r109c75 = or r109c71,r118c63
v282 = is_equal r116c4,r117c4
r118c75 = and r118c55,v282
r119c19 = not r116c3
r118c79 = and r119c19,r117c3
r120c3 = and r118c79,r118c75
r109c79 = or r109c75,r120c3
v284 = is_equal r116c3,r117c3
r120c15 = and r118c75,v284
r119c35 = not r116c2
r120c19 = and r119c35,r117c2
r120c23 = and r120c19,r120c15
r121c3 = or r109c79,r120c23
v286 = is_equal r116c2,r117c2
r120c35 = and r120c15,v286
r119c51 = not r116c1
r120c39 = and r119c51,r117c1
r120c43 = and r120c39,r120c35
r121c7 = or r121c3,r120c43
# lessthan end (result = r121c7)
(r122c1,r122c2,r122c3,r122c4,r122c5,r122c6,r122c7,r122c8,r122c9,r122c10,r122c11,r122c12,r122c13,r122c14,r122c15,r122c16,r122c17,r122c18,r122c19,r122c20,r122c21,r122c22,r122c23,r122c24,r122c25,r122c26,r122c27,r122c28,r122c29,r122c30,r122c31,r122c32,r122c33,r122c34,r122c35,r122c36,r122c37,r122c38,r122c39,r122c40,r122c41,r122c42,r122c43,r122c44,r122c45,r122c46,r122c47,r122c48,r122c49,r122c50,r122c51,r122c52,r122c53,r122c54,r122c55,r122c56,r122c57,r122c58,r122c59,r122c60,r122c61,r122c62,r122c63,r123c1,r123c2,r123c3,r123c4,r123c5,r123c6,r123c7,r123c8,r123c9,r123c10,r123c11,r123c12,r123c13,r123c14,r123c15,r123c16,r123c17,r123c18,r123c19,r123c20,r123c21,r123c22,r123c23,r123c24,r123c25,r123c26,r123c27,r123c28,r123c29,r123c30,r123c31,r123c32,r123c33,r123c34,r123c35,r123c36,r123c37,r123c38,r123c39,r123c40,r123c41,r123c42,r123c43,r123c44,r123c45,r123c46,r123c47,r123c48,r123c49,r123c50,r123c51,r123c52,r123c53,r123c54,r123c55,r123c56,r123c57,r123c58,r123c59,r123c60,r123c61,r123c62,r123c63,r124c1,r124c2,r124c3,r124c4,r124c5,r124c6,r124c7,r124c8,r124c9,r124c10,r124c11,r124c12,r124c13,r124c14,r124c15,r124c16,r124c17,r124c18,r124c19,r124c20,r124c21,r124c22,r124c23,r124c24,r124c25,r124c26,r124c27,r124c28,r124c29,r124c30,r124c31,r124c32,r124c33,r124c34,r124c35,r124c36,r124c37,r124c38,r124c39,r124c40,r124c41,r124c42,r124c43,r124c44,r124c45,r124c46,r124c47,r124c48,r124c49,r124c50,r124c51,r124c52,r124c53,r124c54,r124c55,r124c56,r124c57,r124c58,r124c59,r124c60,r124c61,r124c62,r124c63,r125c1,r125c2,r125c3,r125c4,r125c5,r125c6,r125c7,r125c8,r125c9,r125c10,r125c11,r125c12,r125c13,r125c14,r125c15,r125c16,r125c17,r125c18,r125c19,r125c20,r125c21,r125c22,r125c23,r125c24,r125c25,r125c26,r125c27,r125c28,r125c29,r125c30,r125c31,r125c32,r125c33,r125c34,r125c35,r125c36,r125c37,r125c38,r125c39,r125c40,r125c41,r125c42,r125c43,r125c44,r125c45,r125c46,r125c47,r125c48,r125c49,r125c50,r125c51,r125c52,r125c53,r125c54,r125c55,r125c56,r125c57,r125c58,r125c59,r125c60,r125c61,r125c62,r125c63,r126c1,r126c2) = split_le v78,254
r121c51 = le_sum (r122c1,r122c2,r122c3,r122c4,r122c5,r122c6,r122c7,r122c8)
v288 = add_virtual_target
connect r121c51,v288
v86 = constant 8
# lessthan begin (a = v288, b = v86, signed = false)
(r127c1,r127c2,r127c3,r127c4,r127c5,r127c6,r127c7,r127c8) = split_le v288,8
(r128c1,r128c2,r128c3,r128c4,r128c5,r128c6,r128c7,r128c8) = split_le v86,8
r119c55 = not r127c8
r120c47 = and r119c55,r128c8
v289 = is_equal r127c8,r128c8
r119c71 = not r127c7
r120c59 = and r119c71,r128c7
r120c63 = and r120c59,v289
r121c55 = or r120c47,r120c63
v291 = is_equal r127c7,r128c7
r120c75 = and v289,v291
r129c7 = not r127c6
r120c79 = and r129c7,r128c6
r130c3 = and r120c79,r120c75
r121c59 = or r121c55,r130c3
v293 = is_equal r127c6,r128c6
r130c15 = and r120c75,v293
r129c23 = not r127c5
r130c19 = and r129c23,r128c5
r130c23 = and r130c19,r130c15
r121c63 = or r121c59,r130c23
v295 = is_equal r127c5,r128c5
r130c35 = and r130c15,v295
r129c39 = not r127c4
r130c39 = and r129c39,r128c4
r130c43 = and r130c39,r130c35
r121c67 = or r121c63,r130c43
v297 = is_equal r127c4,r128c4
r130c55 = and r130c35,v297
r129c55 = not r127c3
r130c59 = and r129c55,r128c3
r130c63 = and r130c59,r130c55
r121c71 = or r121c67,r130c63
v299 = is_equal r127c3,r128c3
r130c75 = and r130c55,v299
r129c71 = not r127c2
r130c79 = and r129c71,r128c2
r131c3 = and r130c79,r130c75
r121c75 = or r121c71,r131c3
v301 = is_equal r127c2,r128c2
r131c15 = and r130c75,v301
r132c7 = not r127c1
r131c19 = and r132c7,r128c1
r131c23 = and r131c19,r131c15
r121c79 = or r121c75,r131c23
# lessthan end (result = r121c79)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r121c7,v87
v87 = constant_bool true
connect r121c79,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r133c3 = add v75,v84
v303 = is_equal r133c3,v77
v87 = constant 1
r133c7 = add v76,v87
v305 = is_equal r133c7,v78
r131c43 = and v303,v305
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r132c35 = sub v75,v84
v307 = is_equal r132c35,v77
r131c55 = and v307,v305
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r133c11 = or r131c43,r131c55
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r132c51 = sub v76,v87
v309 = is_equal r132c51,v78
r131c67 = and v303,v309
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r133c15 = or r133c11,r131c67
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r131c71 = and v307,v309
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r133c19 = or r133c15,r131c71
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r133c23 = add v75,v87
v311 = is_equal r133c23,v77
v84 = constant 2
r133c27 = add v76,v84
v313 = is_equal r133c27,v78
r136c11 = and v311,v313
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r133c31 = or r133c19,r136c11
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r135c11 = sub v75,v87
v315 = is_equal r135c11,v77
r136c23 = and v315,v313
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r133c35 = or r133c31,r136c23
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r135c27 = sub v76,v84
v317 = is_equal r135c27,v78
r136c35 = and v311,v317
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r133c39 = or r133c35,r136c35
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r136c39 = and v315,v317
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r133c43 = or r133c39,r136c39
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r133c43,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r137c1,r137c2,r137c3,r137c4,r137c5,r137c6,r137c7,r137c8,r137c9,r137c10,r137c11,r137c12,r137c13,r137c14,r137c15,r137c16,r137c17,r137c18,r137c19,r137c20,r137c21,r137c22,r137c23,r137c24,r137c25,r137c26,r137c27,r137c28,r137c29,r137c30,r137c31,r137c32,r137c33,r137c34,r137c35,r137c36,r137c37,r137c38,r137c39,r137c40,r137c41,r137c42,r137c43,r137c44,r137c45,r137c46,r137c47,r137c48,r137c49,r137c50,r137c51,r137c52,r137c53,r137c54,r137c55,r137c56,r137c57,r137c58,r137c59,r137c60,r137c61,r137c62,r137c63,r138c1,r138c2,r138c3,r138c4,r138c5,r138c6,r138c7,r138c8,r138c9,r138c10,r138c11,r138c12,r138c13,r138c14,r138c15,r138c16,r138c17,r138c18,r138c19,r138c20,r138c21,r138c22,r138c23,r138c24,r138c25,r138c26,r138c27,r138c28,r138c29,r138c30,r138c31,r138c32,r138c33,r138c34,r138c35,r138c36,r138c37,r138c38,r138c39,r138c40,r138c41,r138c42,r138c43,r138c44,r138c45,r138c46,r138c47,r138c48,r138c49,r138c50,r138c51,r138c52,r138c53,r138c54,r138c55,r138c56,r138c57,r138c58,r138c59,r138c60,r138c61,r138c62,r138c63,r139c1,r139c2,r139c3,r139c4,r139c5,r139c6,r139c7,r139c8,r139c9,r139c10,r139c11,r139c12,r139c13,r139c14,r139c15,r139c16,r139c17,r139c18,r139c19,r139c20,r139c21,r139c22,r139c23,r139c24,r139c25,r139c26,r139c27,r139c28,r139c29,r139c30,r139c31,r139c32,r139c33,r139c34,r139c35,r139c36,r139c37,r139c38,r139c39,r139c40,r139c41,r139c42,r139c43,r139c44,r139c45,r139c46,r139c47,r139c48,r139c49,r139c50,r139c51,r139c52,r139c53,r139c54,r139c55,r139c56,r139c57,r139c58,r139c59,r139c60,r139c61,r139c62,r139c63,r140c1,r140c2,r140c3,r140c4,r140c5,r140c6,r140c7,r140c8,r140c9,r140c10,r140c11,r140c12,r140c13,r140c14,r140c15,r140c16,r140c17,r140c18,r140c19,r140c20,r140c21,r140c22,r140c23,r140c24,r140c25,r140c26,r140c27,r140c28,r140c29,r140c30,r140c31,r140c32,r140c33,r140c34,r140c35,r140c36,r140c37,r140c38,r140c39,r140c40,r140c41,r140c42,r140c43,r140c44,r140c45,r140c46,r140c47,r140c48,r140c49,r140c50,r140c51,r140c52,r140c53,r140c54,r140c55,r140c56,r140c57,r140c58,r140c59,r140c60,r140c61,r140c62,r140c63,r141c1,r141c2) = split_le v79,254
r142c7 = le_sum (r137c1,r137c2,r137c3,r137c4,r137c5,r137c6,r137c7,r137c8)
v319 = add_virtual_target
connect r142c7,v319
v86 = constant 8
# lessthan begin (a = v319, b = v86, signed = false)
(r143c1,r143c2,r143c3,r143c4,r143c5,r143c6,r143c7,r143c8) = split_le v319,8
(r144c1,r144c2,r144c3,r144c4,r144c5,r144c6,r144c7,r144c8) = split_le v86,8
r135c43 = not r143c8
r136c43 = and r135c43,r144c8
v320 = is_equal r143c8,r144c8
r135c59 = not r143c7
r136c55 = and r135c59,r144c7
r136c59 = and r136c55,v320
r142c11 = or r136c43,r136c59
v322 = is_equal r143c7,r144c7
r136c71 = and v320,v322
r135c75 = not r143c6
r136c75 = and r135c75,r144c6
r136c79 = and r136c75,r136c71
r142c15 = or r142c11,r136c79
v324 = is_equal r143c6,r144c6
r146c11 = and r136c71,v324
r145c11 = not r143c5
r146c15 = and r145c11,r144c5
r146c19 = and r146c15,r146c11
r142c19 = or r142c15,r146c19
v326 = is_equal r143c5,r144c5
r146c31 = and r146c11,v326
r145c27 = not r143c4
r146c35 = and r145c27,r144c4
r146c39 = and r146c35,r146c31
r142c23 = or r142c19,r146c39
v328 = is_equal r143c4,r144c4
r146c51 = and r146c31,v328
r145c43 = not r143c3
r146c55 = and r145c43,r144c3
r146c59 = and r146c55,r146c51
r142c27 = or r142c23,r146c59
v330 = is_equal r143c3,r144c3
r146c71 = and r146c51,v330
r145c59 = not r143c2
r146c75 = and r145c59,r144c2
r146c79 = and r146c75,r146c71
r142c31 = or r142c27,r146c79
v332 = is_equal r143c2,r144c2
r147c11 = and r146c71,v332
r145c75 = not r143c1
r147c15 = and r145c75,r144c1
r147c19 = and r147c15,r147c11
r142c35 = or r142c31,r147c19
# lessthan end (result = r142c35)
(r148c1,r148c2,r148c3,r148c4,r148c5,r148c6,r148c7,r148c8,r148c9,r148c10,r148c11,r148c12,r148c13,r148c14,r148c15,r148c16,r148c17,r148c18,r148c19,r148c20,r148c21,r148c22,r148c23,r148c24,r148c25,r148c26,r148c27,r148c28,r148c29,r148c30,r148c31,r148c32,r148c33,r148c34,r148c35,r148c36,r148c37,r148c38,r148c39,r148c40,r148c41,r148c42,r148c43,r148c44,r148c45,r148c46,r148c47,r148c48,r148c49,r148c50,r148c51,r148c52,r148c53,r148c54,r148c55,r148c56,r148c57,r148c58,r148c59,r148c60,r148c61,r148c62,r148c63,r149c1,r149c2,r149c3,r149c4,r149c5,r149c6,r149c7,r149c8,r149c9,r149c10,r149c11,r149c12,r149c13,r149c14,r149c15,r149c16,r149c17,r149c18,r149c19,r149c20,r149c21,r149c22,r149c23,r149c24,r149c25,r149c26,r149c27,r149c28,r149c29,r149c30,r149c31,r149c32,r149c33,r149c34,r149c35,r149c36,r149c37,r149c38,r149c39,r149c40,r149c41,r149c42,r149c43,r149c44,r149c45,r149c46,r149c47,r149c48,r149c49,r149c50,r149c51,r149c52,r149c53,r149c54,r149c55,r149c56,r149c57,r149c58,r149c59,r149c60,r149c61,r149c62,r149c63,r150c1,r150c2,r150c3,r150c4,r150c5,r150c6,r150c7,r150c8,r150c9,r150c10,r150c11,r150c12,r150c13,r150c14,r150c15,r150c16,r150c17,r150c18,r150c19,r150c20,r150c21,r150c22,r150c23,r150c24,r150c25,r150c26,r150c27,r150c28,r150c29,r150c30,r150c31,r150c32,r150c33,r150c34,r150c35,r150c36,r150c37,r150c38,r150c39,r150c40,r150c41,r150c42,r150c43,r150c44,r150c45,r150c46,r150c47,r150c48,r150c49,r150c50,r150c51,r150c52,r150c53,r150c54,r150c55,r150c56,r150c57,r150c58,r150c59,r150c60,r150c61,r150c62,r150c63,r151c1,r151c2,r151c3,r151c4,r151c5,r151c6,r151c7,r151c8,r151c9,r151c10,r151c11,r151c12,r151c13,r151c14,r151c15,r151c16,r151c17,r151c18,r151c19,r151c20,r151c21,r151c22,r151c23,r151c24,r151c25,r151c26,r151c27,r151c28,r151c29,r151c30,r151c31,r151c32,r151c33,r151c34,r151c35,r151c36,r151c37,r151c38,r151c39,r151c40,r151c41,r151c42,r151c43,r151c44,r151c45,r151c46,r151c47,r151c48,r151c49,r151c50,r151c51,r151c52,r151c53,r151c54,r151c55,r151c56,r151c57,r151c58,r151c59,r151c60,r151c61,r151c62,r151c63,r152c1,r152c2) = split_le v80,254
r142c79 = le_sum (r148c1,r148c2,r148c3,r148c4,r148c5,r148c6,r148c7,r148c8)
v334 = add_virtual_target
connect r142c79,v334
v86 = constant 8
# lessthan begin (a = v334, b = v86, signed = false)
(r153c1,r153c2,r153c3,r153c4,r153c5,r153c6,r153c7,r153c8) = split_le v334,8
(r154c1,r154c2,r154c3,r154c4,r154c5,r154c6,r154c7,r154c8) = split_le v86,8
r145c79 = not r153c8
r147c23 = and r145c79,r154c8
v335 = is_equal r153c8,r154c8
r155c15 = not r153c7
r147c35 = and r155c15,r154c7
r147c39 = and r147c35,v335
r156c3 = or r147c23,r147c39
v337 = is_equal r153c7,r154c7
r147c51 = and v335,v337
r155c31 = not r153c6
r147c55 = and r155c31,r154c6
r147c59 = and r147c55,r147c51
r156c7 = or r156c3,r147c59
v339 = is_equal r153c6,r154c6
r147c71 = and r147c51,v339
r155c47 = not r153c5
r147c75 = and r155c47,r154c5
r147c79 = and r147c75,r147c71
r156c11 = or r156c7,r147c79
v341 = is_equal r153c5,r154c5
r157c11 = and r147c71,v341
r155c63 = not r153c4
r157c15 = and r155c63,r154c4
r157c19 = and r157c15,r157c11
r156c15 = or r156c11,r157c19
v343 = is_equal r153c4,r154c4
r157c31 = and r157c11,v343
r155c79 = not r153c3
r157c35 = and r155c79,r154c3
r157c39 = and r157c35,r157c31
r156c19 = or r156c15,r157c39
v345 = is_equal r153c3,r154c3
r157c51 = and r157c31,v345
r158c15 = not r153c2
r157c55 = and r158c15,r154c2
r157c59 = and r157c55,r157c51
r156c23 = or r156c19,r157c59
v347 = is_equal r153c2,r154c2
r157c71 = and r157c51,v347
r158c31 = not r153c1
r157c75 = and r158c31,r154c1
r157c79 = and r157c75,r157c71
r156c27 = or r156c23,r157c79
# lessthan end (result = r156c27)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r142c35,v87
v87 = constant_bool true
connect r156c27,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r156c31 = add v77,v84
v349 = is_equal r156c31,v79
v87 = constant 1
r156c35 = add v78,v87
v351 = is_equal r156c35,v80
r159c19 = and v349,v351
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r158c59 = sub v77,v84
v353 = is_equal r158c59,v79
r159c31 = and v353,v351
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r156c39 = or r159c19,r159c31
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r158c75 = sub v78,v87
v355 = is_equal r158c75,v80
r159c43 = and v349,v355
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r156c43 = or r156c39,r159c43
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r159c47 = and v353,v355
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r156c47 = or r156c43,r159c47
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r156c51 = add v77,v87
v357 = is_equal r156c51,v79
v84 = constant 2
r156c55 = add v78,v84
v359 = is_equal r156c55,v80
r159c67 = and v357,v359
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r156c59 = or r156c47,r159c67
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r160c35 = sub v77,v87
v361 = is_equal r160c35,v79
r159c79 = and v361,v359
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r156c63 = or r156c59,r159c79
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r160c51 = sub v78,v84
v363 = is_equal r160c51,v80
r162c11 = and v357,v363
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r156c67 = or r156c63,r162c11
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r162c15 = and v361,v363
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r156c71 = or r156c67,r162c15
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r156c71,v87
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r163c1,r163c2,r163c3,r163c4,r163c5,r163c6,r163c7,r163c8,r163c9,r163c10,r163c11,r163c12,r163c13,r163c14,r163c15,r163c16,r163c17,r163c18,r163c19,r163c20,r163c21,r163c22,r163c23,r163c24,r163c25,r163c26,r163c27,r163c28,r163c29,r163c30,r163c31,r163c32,r163c33,r163c34,r163c35,r163c36,r163c37,r163c38,r163c39,r163c40,r163c41,r163c42,r163c43,r163c44,r163c45,r163c46,r163c47,r163c48,r163c49,r163c50,r163c51,r163c52,r163c53,r163c54,r163c55,r163c56,r163c57,r163c58,r163c59,r163c60,r163c61,r163c62,r163c63,r164c1,r164c2,r164c3,r164c4,r164c5,r164c6,r164c7,r164c8,r164c9,r164c10,r164c11,r164c12,r164c13,r164c14,r164c15,r164c16,r164c17,r164c18,r164c19,r164c20,r164c21,r164c22,r164c23,r164c24,r164c25,r164c26,r164c27,r164c28,r164c29,r164c30,r164c31,r164c32,r164c33,r164c34,r164c35,r164c36,r164c37,r164c38,r164c39,r164c40,r164c41,r164c42,r164c43,r164c44,r164c45,r164c46,r164c47,r164c48,r164c49,r164c50,r164c51,r164c52,r164c53,r164c54,r164c55,r164c56,r164c57,r164c58,r164c59,r164c60,r164c61,r164c62,r164c63,r165c1,r165c2,r165c3,r165c4,r165c5,r165c6,r165c7,r165c8,r165c9,r165c10,r165c11,r165c12,r165c13,r165c14,r165c15,r165c16,r165c17,r165c18,r165c19,r165c20,r165c21,r165c22,r165c23,r165c24,r165c25,r165c26,r165c27,r165c28,r165c29,r165c30,r165c31,r165c32,r165c33,r165c34,r165c35,r165c36,r165c37,r165c38,r165c39,r165c40,r165c41,r165c42,r165c43,r165c44,r165c45,r165c46,r165c47,r165c48,r165c49,r165c50,r165c51,r165c52,r165c53,r165c54,r165c55,r165c56,r165c57,r165c58,r165c59,r165c60,r165c61,r165c62,r165c63,r166c1,r166c2,r166c3,r166c4,r166c5,r166c6,r166c7,r166c8,r166c9,r166c10,r166c11,r166c12,r166c13,r166c14,r166c15,r166c16,r166c17,r166c18,r166c19,r166c20,r166c21,r166c22,r166c23,r166c24,r166c25,r166c26,r166c27,r166c28,r166c29,r166c30,r166c31,r166c32,r166c33,r166c34,r166c35,r166c36,r166c37,r166c38,r166c39,r166c40,r166c41,r166c42,r166c43,r166c44,r166c45,r166c46,r166c47,r166c48,r166c49,r166c50,r166c51,r166c52,r166c53,r166c54,r166c55,r166c56,r166c57,r166c58,r166c59,r166c60,r166c61,r166c62,r166c63,r167c1,r167c2) = split_le v65,254
r168c35 = le_sum (r163c1,r163c2,r163c3,r163c4,r163c5,r163c6,r163c7,r163c8)
v365 = add_virtual_target
connect r168c35,v365
v86 = constant 8
# lessthan begin (a = v365, b = v86, signed = false)
(r169c1,r169c2,r169c3,r169c4,r169c5,r169c6,r169c7,r169c8) = split_le v365,8
(r170c1,r170c2,r170c3,r170c4,r170c5,r170c6,r170c7,r170c8) = split_le v86,8
r160c67 = not r169c8
r162c19 = and r160c67,r170c8
v366 = is_equal r169c8,r170c8
r171c3 = not r169c7
r162c31 = and r171c3,r170c7
r162c35 = and r162c31,v366
r168c39 = or r162c19,r162c35
v368 = is_equal r169c7,r170c7
r162c47 = and v366,v368
r171c19 = not r169c6
r162c51 = and r171c19,r170c6
r162c55 = and r162c51,r162c47
r168c43 = or r168c39,r162c55
v370 = is_equal r169c6,r170c6
r162c67 = and r162c47,v370
r171c35 = not r169c5
r162c71 = and r171c35,r170c5
r162c75 = and r162c71,r162c67
r168c47 = or r168c43,r162c75
v372 = is_equal r169c5,r170c5
r172c7 = and r162c67,v372
r171c51 = not r169c4
r172c11 = and r171c51,r170c4
r172c15 = and r172c11,r172c7
r168c51 = or r168c47,r172c15
v374 = is_equal r169c4,r170c4
r172c27 = and r172c7,v374
r171c67 = not r169c3
r172c31 = and r171c67,r170c3
r172c35 = and r172c31,r172c27
r168c55 = or r168c51,r172c35
v376 = is_equal r169c3,r170c3
r172c47 = and r172c27,v376
r173c3 = not r169c2
r172c51 = and r173c3,r170c2
r172c55 = and r172c51,r172c47
r168c59 = or r168c55,r172c55
v378 = is_equal r169c2,r170c2
r172c67 = and r172c47,v378
r173c19 = not r169c1
r172c71 = and r173c19,r170c1
r172c75 = and r172c71,r172c67
r168c63 = or r168c59,r172c75
# lessthan end (result = r168c63)
(r174c1,r174c2,r174c3,r174c4,r174c5,r174c6,r174c7,r174c8,r174c9,r174c10,r174c11,r174c12,r174c13,r174c14,r174c15,r174c16,r174c17,r174c18,r174c19,r174c20,r174c21,r174c22,r174c23,r174c24,r174c25,r174c26,r174c27,r174c28,r174c29,r174c30,r174c31,r174c32,r174c33,r174c34,r174c35,r174c36,r174c37,r174c38,r174c39,r174c40,r174c41,r174c42,r174c43,r174c44,r174c45,r174c46,r174c47,r174c48,r174c49,r174c50,r174c51,r174c52,r174c53,r174c54,r174c55,r174c56,r174c57,r174c58,r174c59,r174c60,r174c61,r174c62,r174c63,r175c1,r175c2,r175c3,r175c4,r175c5,r175c6,r175c7,r175c8,r175c9,r175c10,r175c11,r175c12,r175c13,r175c14,r175c15,r175c16,r175c17,r175c18,r175c19,r175c20,r175c21,r175c22,r175c23,r175c24,r175c25,r175c26,r175c27,r175c28,r175c29,r175c30,r175c31,r175c32,r175c33,r175c34,r175c35,r175c36,r175c37,r175c38,r175c39,r175c40,r175c41,r175c42,r175c43,r175c44,r175c45,r175c46,r175c47,r175c48,r175c49,r175c50,r175c51,r175c52,r175c53,r175c54,r175c55,r175c56,r175c57,r175c58,r175c59,r175c60,r175c61,r175c62,r175c63,r176c1,r176c2,r176c3,r176c4,r176c5,r176c6,r176c7,r176c8,r176c9,r176c10,r176c11,r176c12,r176c13,r176c14,r176c15,r176c16,r176c17,r176c18,r176c19,r176c20,r176c21,r176c22,r176c23,r176c24,r176c25,r176c26,r176c27,r176c28,r176c29,r176c30,r176c31,r176c32,r176c33,r176c34,r176c35,r176c36,r176c37,r176c38,r176c39,r176c40,r176c41,r176c42,r176c43,r176c44,r176c45,r176c46,r176c47,r176c48,r176c49,r176c50,r176c51,r176c52,r176c53,r176c54,r176c55,r176c56,r176c57,r176c58,r176c59,r176c60,r176c61,r176c62,r176c63,r177c1,r177c2,r177c3,r177c4,r177c5,r177c6,r177c7,r177c8,r177c9,r177c10,r177c11,r177c12,r177c13,r177c14,r177c15,r177c16,r177c17,r177c18,r177c19,r177c20,r177c21,r177c22,r177c23,r177c24,r177c25,r177c26,r177c27,r177c28,r177c29,r177c30,r177c31,r177c32,r177c33,r177c34,r177c35,r177c36,r177c37,r177c38,r177c39,r177c40,r177c41,r177c42,r177c43,r177c44,r177c45,r177c46,r177c47,r177c48,r177c49,r177c50,r177c51,r177c52,r177c53,r177c54,r177c55,r177c56,r177c57,r177c58,r177c59,r177c60,r177c61,r177c62,r177c63,r178c1,r178c2) = split_le v66,254
r179c27 = le_sum (r174c1,r174c2,r174c3,r174c4,r174c5,r174c6,r174c7,r174c8)
v380 = add_virtual_target
connect r179c27,v380
v86 = constant 8
# lessthan begin (a = v380, b = v86, signed = false)
(r180c1,r180c2,r180c3,r180c4,r180c5,r180c6,r180c7,r180c8) = split_le v380,8
(r181c1,r181c2,r181c3,r181c4,r181c5,r181c6,r181c7,r181c8) = split_le v86,8
r173c23 = not r180c8
r172c79 = and r173c23,r181c8
v381 = is_equal r180c8,r181c8
r173c39 = not r180c7
r182c11 = and r173c39,r181c7
r182c15 = and r182c11,v381
r179c31 = or r172c79,r182c15
v383 = is_equal r180c7,r181c7
r182c27 = and v381,v383
r173c55 = not r180c6
r182c31 = and r173c55,r181c6
r182c35 = and r182c31,r182c27
r179c35 = or r179c31,r182c35
v385 = is_equal r180c6,r181c6
r182c47 = and r182c27,v385
r173c71 = not r180c5
r182c51 = and r173c71,r181c5
r182c55 = and r182c51,r182c47
r179c39 = or r179c35,r182c55
v387 = is_equal r180c5,r181c5
r182c67 = and r182c47,v387
r183c7 = not r180c4
r182c71 = and r183c7,r181c4
r182c75 = and r182c71,r182c67
r179c43 = or r179c39,r182c75
v389 = is_equal r180c4,r181c4
r184c7 = and r182c67,v389
r183c23 = not r180c3
r184c11 = and r183c23,r181c3
r184c15 = and r184c11,r184c7
r179c47 = or r179c43,r184c15
v391 = is_equal r180c3,r181c3
r184c27 = and r184c7,v391
r183c39 = not r180c2
r184c31 = and r183c39,r181c2
r184c35 = and r184c31,r184c27
r179c51 = or r179c47,r184c35
v393 = is_equal r180c2,r181c2
r184c47 = and r184c27,v393
r183c55 = not r180c1
r184c51 = and r183c55,r181c1
r184c55 = and r184c51,r184c47
r179c55 = or r179c51,r184c55
# lessthan end (result = r179c55)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r168c63,v87
v87 = constant_bool true
connect r179c55,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r179c59 = add v79,v84
v395 = is_equal r179c59,v65
v87 = constant 1
r179c63 = add v80,v87
v397 = is_equal r179c63,v66
r184c75 = and v395,v397
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r185c3 = sub v79,v84
v399 = is_equal r185c3,v65
r186c7 = and v399,v397
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r179c67 = or r184c75,r186c7
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r185c19 = sub v80,v87
v401 = is_equal r185c19,v66
r186c19 = and v395,v401
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r179c71 = or r179c67,r186c19
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r186c23 = and v399,v401
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r179c75 = or r179c71,r186c23
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r179c79 = add v79,v87
v403 = is_equal r179c79,v65
v84 = constant 2
r188c3 = add v80,v84
v405 = is_equal r188c3,v66
r186c43 = and v403,v405
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r188c7 = or r179c75,r186c43
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r185c59 = sub v79,v87
v407 = is_equal r185c59,v65
r186c55 = and v407,v405
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r188c11 = or r188c7,r186c55
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r185c75 = sub v80,v84
v409 = is_equal r185c75,v66
r186c67 = and v403,v409
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r188c15 = or r188c11,r186c67
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r186c71 = and v407,v409
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r188c19 = or r188c15,r186c71
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r188c19,v87
# [36] if watcher_map[x][y] {
r189c11 = not v0
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r186c75 = and v2,r189c11
# [36] if watcher_map[x][y] {
r189c15 = not v2
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r186c79 = and v2,r186c75
r190c3 = and r189c15,r189c11
r188c23 = or r186c79,r190c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c7 = and v3,r188c23
# [36] if watcher_map[x][y] {
r189c19 = not v3
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c11 = and v3,r190c7
r190c15 = and r189c19,r188c23
r188c27 = or r190c11,r190c15
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c19 = and v4,r188c27
# [36] if watcher_map[x][y] {
r189c23 = not v4
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c23 = and v4,r190c19
r190c27 = and r189c23,r188c27
r188c31 = or r190c23,r190c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c31 = and v5,r188c31
# [36] if watcher_map[x][y] {
r189c27 = not v5
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c35 = and v5,r190c31
r190c39 = and r189c27,r188c31
r188c35 = or r190c35,r190c39
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c43 = and v6,r188c35
# [36] if watcher_map[x][y] {
r189c31 = not v6
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c47 = and v6,r190c43
r190c51 = and r189c31,r188c35
r188c39 = or r190c47,r190c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c55 = and v7,r188c39
# [36] if watcher_map[x][y] {
r189c35 = not v7
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c59 = and v7,r190c55
r190c63 = and r189c35,r188c39
r188c43 = or r190c59,r190c63
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c67 = and v8,r188c43
# [36] if watcher_map[x][y] {
r189c39 = not v8
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c71 = and v8,r190c67
r190c75 = and r189c39,r188c43
r188c47 = or r190c71,r190c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c79 = and v9,r188c47
# [36] if watcher_map[x][y] {
r189c43 = not v9
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c3 = and v9,r190c79
r191c7 = and r189c43,r188c47
r188c51 = or r191c3,r191c7
# [36] if watcher_map[x][y] {
r189c47 = not v10
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c11 = and r189c47,r188c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c15 = and v11,r191c11
# [36] if watcher_map[x][y] {
r189c51 = not v11
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c19 = and v11,r191c15
r191c23 = and r189c51,r191c11
r188c55 = or r191c19,r191c23
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c27 = and v12,r188c55
# [36] if watcher_map[x][y] {
r189c55 = not v12
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c31 = and v12,r191c27
r191c35 = and r189c55,r188c55
r188c59 = or r191c31,r191c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c39 = and v13,r188c59
# [36] if watcher_map[x][y] {
r189c59 = not v13
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c43 = and v13,r191c39
r191c47 = and r189c59,r188c59
r188c63 = or r191c43,r191c47
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c51 = and v14,r188c63
# [36] if watcher_map[x][y] {
r189c63 = not v14
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c55 = and v14,r191c51
r191c59 = and r189c63,r188c63
r188c67 = or r191c55,r191c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c63 = and v15,r188c67
# [36] if watcher_map[x][y] {
r189c67 = not v15
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c67 = and v15,r191c63
r191c71 = and r189c67,r188c67
r188c71 = or r191c67,r191c71
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c75 = and v16,r188c71
# [36] if watcher_map[x][y] {
r189c71 = not v16
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r191c79 = and v16,r191c75
r192c3 = and r189c71,r188c71
r188c75 = or r191c79,r192c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c7 = and v17,r188c75
# [36] if watcher_map[x][y] {
r189c75 = not v17
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c11 = and v17,r192c7
r192c15 = and r189c75,r188c75
r188c79 = or r192c11,r192c15
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c19 = and v18,r188c79
# [36] if watcher_map[x][y] {
r189c79 = not v18
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c23 = and v18,r192c19
r192c27 = and r189c79,r188c79
r194c3 = or r192c23,r192c27
# [36] if watcher_map[x][y] {
r195c3 = not v19
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c31 = and r195c3,r194c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c35 = and v20,r192c31
# [36] if watcher_map[x][y] {
r195c7 = not v20
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c39 = and v20,r192c35
r192c43 = and r195c7,r192c31
r194c7 = or r192c39,r192c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c47 = and v21,r194c7
# [36] if watcher_map[x][y] {
r195c11 = not v21
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c51 = and v21,r192c47
r192c55 = and r195c11,r194c7
r194c11 = or r192c51,r192c55
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c59 = and v22,r194c11
# [36] if watcher_map[x][y] {
r195c15 = not v22
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c63 = and v22,r192c59
r192c67 = and r195c15,r194c11
r194c15 = or r192c63,r192c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c71 = and v23,r194c15
# [36] if watcher_map[x][y] {
r195c19 = not v23
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r192c75 = and v23,r192c71
r192c79 = and r195c19,r194c15
r194c19 = or r192c75,r192c79
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c3 = and v24,r194c19
# [36] if watcher_map[x][y] {
r195c23 = not v24
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c7 = and v24,r196c3
r196c11 = and r195c23,r194c19
r194c23 = or r196c7,r196c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c15 = and v25,r194c23
# [36] if watcher_map[x][y] {
r195c27 = not v25
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c19 = and v25,r196c15
r196c23 = and r195c27,r194c23
r194c27 = or r196c19,r196c23
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c27 = and v26,r194c27
# [36] if watcher_map[x][y] {
r195c31 = not v26
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c31 = and v26,r196c27
r196c35 = and r195c31,r194c27
r194c31 = or r196c31,r196c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c39 = and v27,r194c31
# [36] if watcher_map[x][y] {
r195c35 = not v27
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c43 = and v27,r196c39
r196c47 = and r195c35,r194c31
r194c35 = or r196c43,r196c47
# [36] if watcher_map[x][y] {
r195c39 = not v28
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c51 = and r195c39,r194c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c55 = and v29,r196c51
# [36] if watcher_map[x][y] {
r195c43 = not v29
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c59 = and v29,r196c55
r196c63 = and r195c43,r196c51
r194c39 = or r196c59,r196c63
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c67 = and v30,r194c39
# [36] if watcher_map[x][y] {
r195c47 = not v30
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c71 = and v30,r196c67
r196c75 = and r195c47,r194c39
r194c43 = or r196c71,r196c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r196c79 = and v31,r194c43
# [36] if watcher_map[x][y] {
r195c51 = not v31
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c3 = and v31,r196c79
r197c7 = and r195c51,r194c43
r194c47 = or r197c3,r197c7
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c11 = and v32,r194c47
# [36] if watcher_map[x][y] {
r195c55 = not v32
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c15 = and v32,r197c11
r197c19 = and r195c55,r194c47
r194c51 = or r197c15,r197c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c23 = and v33,r194c51
# [36] if watcher_map[x][y] {
r195c59 = not v33
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c27 = and v33,r197c23
r197c31 = and r195c59,r194c51
r194c55 = or r197c27,r197c31
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c35 = and v34,r194c55
# [36] if watcher_map[x][y] {
r195c63 = not v34
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c39 = and v34,r197c35
r197c43 = and r195c63,r194c55
r194c59 = or r197c39,r197c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c47 = and v35,r194c59
# [36] if watcher_map[x][y] {
r195c67 = not v35
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c51 = and v35,r197c47
r197c55 = and r195c67,r194c59
r194c63 = or r197c51,r197c55
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c59 = and v36,r194c63
# [36] if watcher_map[x][y] {
r195c71 = not v36
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c63 = and v36,r197c59
r197c67 = and r195c71,r194c63
r194c67 = or r197c63,r197c67
# [36] if watcher_map[x][y] {
r195c75 = not v37
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c71 = and r195c75,r194c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c75 = and v38,r197c71
# [36] if watcher_map[x][y] {
r195c79 = not v38
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r197c79 = and v38,r197c75
r198c3 = and r195c79,r197c71
r194c71 = or r197c79,r198c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c7 = and v39,r194c71
# [36] if watcher_map[x][y] {
r199c3 = not v39
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c11 = and v39,r198c7
r198c15 = and r199c3,r194c71
r194c75 = or r198c11,r198c15
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c19 = and v40,r194c75
# [36] if watcher_map[x][y] {
r199c7 = not v40
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c23 = and v40,r198c19
r198c27 = and r199c7,r194c75
r194c79 = or r198c23,r198c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c31 = and v41,r194c79
# [36] if watcher_map[x][y] {
r199c11 = not v41
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c35 = and v41,r198c31
r198c39 = and r199c11,r194c79
r201c3 = or r198c35,r198c39
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c43 = and v42,r201c3
# [36] if watcher_map[x][y] {
r199c15 = not v42
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c47 = and v42,r198c43
r198c51 = and r199c15,r201c3
r201c7 = or r198c47,r198c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c55 = and v43,r201c7
# [36] if watcher_map[x][y] {
r199c19 = not v43
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c59 = and v43,r198c55
r198c63 = and r199c19,r201c7
r201c11 = or r198c59,r198c63
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c67 = and v44,r201c11
# [36] if watcher_map[x][y] {
r199c23 = not v44
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c71 = and v44,r198c67
r198c75 = and r199c23,r201c11
r201c15 = or r198c71,r198c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r198c79 = and v45,r201c15
# [36] if watcher_map[x][y] {
r199c27 = not v45
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c3 = and v45,r198c79
r202c7 = and r199c27,r201c15
r201c19 = or r202c3,r202c7
# [36] if watcher_map[x][y] {
r199c31 = not v46
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c11 = and r199c31,r201c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c15 = and v47,r202c11
# [36] if watcher_map[x][y] {
r199c35 = not v47
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c19 = and v47,r202c15
r202c23 = and r199c35,r202c11
r201c23 = or r202c19,r202c23
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c27 = and v48,r201c23
# [36] if watcher_map[x][y] {
r199c39 = not v48
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c31 = and v48,r202c27
r202c35 = and r199c39,r201c23
r201c27 = or r202c31,r202c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c39 = and v49,r201c27
# [36] if watcher_map[x][y] {
r199c43 = not v49
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c43 = and v49,r202c39
r202c47 = and r199c43,r201c27
r201c31 = or r202c43,r202c47
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c51 = and v50,r201c31
# [36] if watcher_map[x][y] {
r199c47 = not v50
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c55 = and v50,r202c51
r202c59 = and r199c47,r201c31
r201c35 = or r202c55,r202c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c63 = and v51,r201c35
# [36] if watcher_map[x][y] {
r199c51 = not v51
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c67 = and v51,r202c63
r202c71 = and r199c51,r201c35
r201c39 = or r202c67,r202c71
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c75 = and v52,r201c39
# [36] if watcher_map[x][y] {
r199c55 = not v52
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r202c79 = and v52,r202c75
r203c3 = and r199c55,r201c39
r201c43 = or r202c79,r203c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c7 = and v53,r201c43
# [36] if watcher_map[x][y] {
r199c59 = not v53
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c11 = and v53,r203c7
r203c15 = and r199c59,r201c43
r201c47 = or r203c11,r203c15
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c19 = and v54,r201c47
# [36] if watcher_map[x][y] {
r199c63 = not v54
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c23 = and v54,r203c19
r203c27 = and r199c63,r201c47
r201c51 = or r203c23,r203c27
# [36] if watcher_map[x][y] {
r199c67 = not v55
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c31 = and r199c67,r201c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c35 = and v56,r203c31
# [36] if watcher_map[x][y] {
r199c71 = not v56
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c39 = and v56,r203c35
r203c43 = and r199c71,r203c31
r201c55 = or r203c39,r203c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c47 = and v57,r201c55
# [36] if watcher_map[x][y] {
r199c75 = not v57
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c51 = and v57,r203c47
r203c55 = and r199c75,r201c55
r201c59 = or r203c51,r203c55
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c59 = and v58,r201c59
# [36] if watcher_map[x][y] {
r199c79 = not v58
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c63 = and v58,r203c59
r203c67 = and r199c79,r201c59
r201c63 = or r203c63,r203c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c71 = and v59,r201c63
# [36] if watcher_map[x][y] {
r204c3 = not v59
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r203c75 = and v59,r203c71
r203c79 = and r204c3,r201c63
r201c67 = or r203c75,r203c79
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c3 = and v60,r201c67
# [36] if watcher_map[x][y] {
r204c7 = not v60
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c7 = and v60,r205c3
r205c11 = and r204c7,r201c67
r201c71 = or r205c7,r205c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c15 = and v61,r201c71
# [36] if watcher_map[x][y] {
r204c11 = not v61
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c19 = and v61,r205c15
r205c23 = and r204c11,r201c71
r201c75 = or r205c19,r205c23
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c27 = and v62,r201c75
# [36] if watcher_map[x][y] {
r204c15 = not v62
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c31 = and v62,r205c27
r205c35 = and r204c15,r201c75
r201c79 = or r205c31,r205c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c39 = and v63,r201c79
# [36] if watcher_map[x][y] {
r204c19 = not v63
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c43 = and v63,r205c39
r205c47 = and r204c19,r201c79
r207c3 = or r205c43,r205c47
# [36] if watcher_map[x][y] {
r204c23 = not v64
# [50] assert(is_safe_step(path[i], watcher_map));
v1 = constant_bool false
connect v64,v1
v87 = constant_bool true
connect r207c3,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v411 = is_equal v69,v70
v1 = constant 0
r204c39 = sub v1,v70
v413 = is_equal v69,r204c39
r207c7 = or v411,v413
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r205c67 = and v0,r207c7
r204c55 = not r207c7
r205c71 = and v0,r204c55
r205c75 = and v0,r205c71
r207c11 = or r205c75,r189c11
v415 = is_equal v69,r52c59
v87 = constant 1
r27c27 = sub v87,v70
v417 = is_equal v69,r27c27
r207c15 = or v415,v417
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r208c15 = and v2,r207c15
r209c3 = not r207c15
r208c19 = and v2,r209c3
r208c23 = and r208c19,r207c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r208c27 = and v2,r208c23
r208c31 = and r189c15,r207c11
r207c19 = or r208c27,r208c31
v419 = is_equal v69,r55c35
v84 = constant 2
r27c75 = sub v84,v70
v421 = is_equal v69,r27c75
r207c23 = or v419,v421
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r208c51 = and v3,r207c23
r209c31 = not r207c23
r208c55 = and v3,r209c31
r208c59 = and r208c55,r207c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r208c63 = and v3,r208c59
r208c67 = and r189c19,r207c19
r207c27 = or r208c63,r208c67
v423 = constant 3
r209c35 = sub v70,v423
v424 = is_equal v69,r209c35
v423 = constant 3
r209c51 = sub v423,v70
v426 = is_equal v69,r209c51
r207c31 = or v424,v426
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r210c7 = and v4,r207c31
r209c67 = not r207c31
r210c11 = and v4,r209c67
r210c15 = and r210c11,r207c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r210c19 = and v4,r210c15
r210c23 = and r189c23,r207c27
r207c35 = or r210c19,r210c23
v428 = constant 4
r209c71 = sub v70,v428
v429 = is_equal v69,r209c71
v428 = constant 4
r211c7 = sub v428,v70
v431 = is_equal v69,r211c7
r207c39 = or v429,v431
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r210c43 = and v5,r207c39
r211c23 = not r207c39
r210c47 = and v5,r211c23
r210c51 = and r210c47,r207c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r210c55 = and v5,r210c51
r210c59 = and r189c27,r207c35
r207c43 = or r210c55,r210c59
v433 = constant 5
r211c27 = sub v70,v433
v434 = is_equal v69,r211c27
v433 = constant 5
r211c43 = sub v433,v70
v436 = is_equal v69,r211c43
r207c47 = or v434,v436
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r210c79 = and v6,r207c47
r211c59 = not r207c47
r212c3 = and v6,r211c59
r212c7 = and r212c3,r207c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r212c11 = and v6,r212c7
r212c15 = and r189c31,r207c43
r207c51 = or r212c11,r212c15
v438 = constant 6
r211c63 = sub v70,v438
v439 = is_equal v69,r211c63
v438 = constant 6
r211c79 = sub v438,v70
v441 = is_equal v69,r211c79
r207c55 = or v439,v441
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r212c35 = and v7,r207c55
r213c15 = not r207c55
r212c39 = and v7,r213c15
r212c43 = and r212c39,r207c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r212c47 = and v7,r212c43
r212c51 = and r189c35,r207c51
r207c59 = or r212c47,r212c51
v443 = constant 7
r213c19 = sub v70,v443
v444 = is_equal v69,r213c19
v443 = constant 7
r213c35 = sub v443,v70
v446 = is_equal v69,r213c35
r207c63 = or v444,v446
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r212c71 = and v8,r207c63
r213c51 = not r207c63
r212c75 = and v8,r213c51
r212c79 = and r212c75,r207c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r214c3 = and v8,r212c79
r214c7 = and r189c39,r207c59
r207c67 = or r214c3,r214c7
v448 = is_equal r55c19,v70
v450 = is_equal r55c19,r204c39
r207c71 = or v448,v450
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r214c27 = and v9,r207c71
r213c79 = not r207c71
r214c31 = and v9,r213c79
r214c35 = and r214c31,r207c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r214c39 = and v9,r214c35
r214c43 = and r189c43,r207c67
r207c75 = or r214c39,r214c43
v452 = is_equal r55c19,r52c59
v454 = is_equal r55c19,r27c27
r207c79 = or v452,v454
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r214c63 = and v10,r207c79
r216c27 = not r207c79
r214c67 = and v10,r216c27
r214c71 = and r214c67,r207c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r214c75 = and v10,r214c71
r214c79 = and r189c47,r207c75
r217c3 = or r214c75,r214c79
v456 = is_equal r55c19,r55c35
v458 = is_equal r55c19,r27c75
r217c7 = or v456,v458
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r218c19 = and v11,r217c7
r216c55 = not r217c7
r218c23 = and v11,r216c55
r218c27 = and r218c23,r217c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r218c31 = and v11,r218c27
r218c35 = and r189c51,r217c3
r217c11 = or r218c31,r218c35
v460 = is_equal r55c19,r209c35
v462 = is_equal r55c19,r209c51
r217c15 = or v460,v462
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r218c55 = and v12,r217c15
r219c3 = not r217c15
r218c59 = and v12,r219c3
r218c63 = and r218c59,r217c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r218c67 = and v12,r218c63
r218c71 = and r189c55,r217c11
r217c19 = or r218c67,r218c71
v464 = is_equal r55c19,r209c71
v466 = is_equal r55c19,r211c7
r217c23 = or v464,v466
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r220c11 = and v13,r217c23
r219c31 = not r217c23
r220c15 = and v13,r219c31
r220c19 = and r220c15,r217c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r220c23 = and v13,r220c19
r220c27 = and r189c59,r217c19
r217c27 = or r220c23,r220c27
v468 = is_equal r55c19,r211c27
v470 = is_equal r55c19,r211c43
r217c31 = or v468,v470
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r220c47 = and v14,r217c31
r219c59 = not r217c31
r220c51 = and v14,r219c59
r220c55 = and r220c51,r217c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r220c59 = and v14,r220c55
r220c63 = and r189c63,r217c27
r217c35 = or r220c59,r220c63
v472 = is_equal r55c19,r211c63
v474 = is_equal r55c19,r211c79
r217c39 = or v472,v474
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r222c3 = and v15,r217c39
r221c7 = not r217c39
r222c7 = and v15,r221c7
r222c11 = and r222c7,r217c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r222c15 = and v15,r222c11
r222c19 = and r189c67,r217c35
r217c43 = or r222c15,r222c19
v476 = is_equal r55c19,r213c19
v478 = is_equal r55c19,r213c35
r217c47 = or v476,v478
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r222c39 = and v16,r217c47
r221c35 = not r217c47
r222c43 = and v16,r221c35
r222c47 = and r222c43,r217c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r222c51 = and v16,r222c47
r222c55 = and r189c71,r217c43
r217c51 = or r222c51,r222c55
v480 = is_equal r52c43,v70
v482 = is_equal r52c43,r204c39
r217c55 = or v480,v482
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r222c75 = and v17,r217c55
r221c63 = not r217c55
r222c79 = and v17,r221c63
r223c3 = and r222c79,r217c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r223c7 = and v17,r223c3
r223c11 = and r189c75,r217c51
r217c59 = or r223c7,r223c11
v484 = is_equal r52c43,r52c59
v486 = is_equal r52c43,r27c27
r217c63 = or v484,v486
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r223c31 = and v18,r217c63
r224c11 = not r217c63
r223c35 = and v18,r224c11
r223c39 = and r223c35,r217c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r223c43 = and v18,r223c39
r223c47 = and r189c79,r217c59
r217c67 = or r223c43,r223c47
v488 = is_equal r52c43,r55c35
v490 = is_equal r52c43,r27c75
r217c71 = or v488,v490
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r223c67 = and v19,r217c71
r224c39 = not r217c71
r223c71 = and v19,r224c39
r223c75 = and r223c71,r217c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r223c79 = and v19,r223c75
r225c3 = and r195c3,r217c67
r217c75 = or r223c79,r225c3
v492 = is_equal r52c43,r209c35
v494 = is_equal r52c43,r209c51
r217c79 = or v492,v494
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r225c23 = and v20,r217c79
r224c67 = not r217c79
r225c27 = and v20,r224c67
r225c31 = and r225c27,r217c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r225c35 = and v20,r225c31
r225c39 = and r195c7,r217c75
r227c3 = or r225c35,r225c39
v496 = is_equal r52c43,r209c71
v498 = is_equal r52c43,r211c7
r227c7 = or v496,v498
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r225c59 = and v21,r227c7
r228c15 = not r227c7
r225c63 = and v21,r228c15
r225c67 = and r225c63,r227c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r225c71 = and v21,r225c67
r225c75 = and r195c11,r227c3
r227c11 = or r225c71,r225c75
v500 = is_equal r52c43,r211c27
v502 = is_equal r52c43,r211c43
r227c15 = or v500,v502
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r229c15 = and v22,r227c15
r228c43 = not r227c15
r229c19 = and v22,r228c43
r229c23 = and r229c19,r227c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r229c27 = and v22,r229c23
r229c31 = and r195c15,r227c11
r227c19 = or r229c27,r229c31
v504 = is_equal r52c43,r211c63
v506 = is_equal r52c43,r211c79
r227c23 = or v504,v506
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r229c51 = and v23,r227c23
r228c71 = not r227c23
r229c55 = and v23,r228c71
r229c59 = and r229c55,r227c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r229c63 = and v23,r229c59
r229c67 = and r195c19,r227c19
r227c27 = or r229c63,r229c67
v508 = is_equal r52c43,r213c19
v510 = is_equal r52c43,r213c35
r227c31 = or v508,v510
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r231c7 = and v24,r227c31
r230c19 = not r227c31
r231c11 = and v24,r230c19
r231c15 = and r231c11,r227c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r231c19 = and v24,r231c15
r231c23 = and r195c23,r227c27
r227c35 = or r231c19,r231c23
v423 = constant 3
r230c23 = sub v69,v423
v512 = is_equal r230c23,v70
v514 = is_equal r230c23,r204c39
r227c39 = or v512,v514
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r231c43 = and v25,r227c39
r230c51 = not r227c39
r231c47 = and v25,r230c51
r231c51 = and r231c47,r227c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r231c55 = and v25,r231c51
r231c59 = and r195c27,r227c35
r227c43 = or r231c55,r231c59
v516 = is_equal r230c23,r52c59
v518 = is_equal r230c23,r27c27
r227c47 = or v516,v518
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r231c79 = and v26,r227c47
r230c79 = not r227c47
r232c3 = and v26,r230c79
r232c7 = and r232c3,r227c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r232c11 = and v26,r232c7
r232c15 = and r195c31,r227c43
r227c51 = or r232c11,r232c15
v520 = is_equal r230c23,r55c35
v522 = is_equal r230c23,r27c75
r227c55 = or v520,v522
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r232c35 = and v27,r227c55
r233c27 = not r227c55
r232c39 = and v27,r233c27
r232c43 = and r232c39,r227c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r232c47 = and v27,r232c43
r232c51 = and r195c35,r227c51
r227c59 = or r232c47,r232c51
v524 = is_equal r230c23,r209c35
v526 = is_equal r230c23,r209c51
r227c63 = or v524,v526
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r232c71 = and v28,r227c63
r233c55 = not r227c63
r232c75 = and v28,r233c55
r232c79 = and r232c75,r227c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r234c3 = and v28,r232c79
r234c7 = and r195c39,r227c59
r227c67 = or r234c3,r234c7
v528 = is_equal r230c23,r209c71
v530 = is_equal r230c23,r211c7
r227c71 = or v528,v530
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r234c27 = and v29,r227c71
r235c3 = not r227c71
r234c31 = and v29,r235c3
r234c35 = and r234c31,r227c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r234c39 = and v29,r234c35
r234c43 = and r195c43,r227c67
r227c75 = or r234c39,r234c43
v532 = is_equal r230c23,r211c27
v534 = is_equal r230c23,r211c43
r227c79 = or v532,v534
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r234c63 = and v30,r227c79
r235c31 = not r227c79
r234c67 = and v30,r235c31
r234c71 = and r234c67,r227c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r234c75 = and v30,r234c71
r234c79 = and r195c47,r227c75
r237c3 = or r234c75,r234c79
v536 = is_equal r230c23,r211c63
v538 = is_equal r230c23,r211c79
r237c7 = or v536,v538
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r238c19 = and v31,r237c7
r235c59 = not r237c7
r238c23 = and v31,r235c59
r238c27 = and r238c23,r237c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r238c31 = and v31,r238c27
r238c35 = and r195c51,r237c3
r237c11 = or r238c31,r238c35
v540 = is_equal r230c23,r213c19
v542 = is_equal r230c23,r213c35
r237c15 = or v540,v542
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r238c55 = and v32,r237c15
r239c7 = not r237c15
r238c59 = and v32,r239c7
r238c63 = and r238c59,r237c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r238c67 = and v32,r238c63
r238c71 = and r195c55,r237c11
r237c19 = or r238c67,r238c71
v428 = constant 4
r239c11 = sub v69,v428
v544 = is_equal r239c11,v70
v546 = is_equal r239c11,r204c39
r237c23 = or v544,v546
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r240c11 = and v33,r237c23
r239c39 = not r237c23
r240c15 = and v33,r239c39
r240c19 = and r240c15,r237c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r240c23 = and v33,r240c19
r240c27 = and r195c59,r237c19
r237c27 = or r240c23,r240c27
v548 = is_equal r239c11,r52c59
v550 = is_equal r239c11,r27c27
r237c31 = or v548,v550
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r240c47 = and v34,r237c31
r239c67 = not r237c31
r240c51 = and v34,r239c67
r240c55 = and r240c51,r237c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r240c59 = and v34,r240c55
r240c63 = and r195c63,r237c27
r237c35 = or r240c59,r240c63
v552 = is_equal r239c11,r55c35
v554 = is_equal r239c11,r27c75
r237c39 = or v552,v554
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r242c3 = and v35,r237c39
r241c15 = not r237c39
r242c7 = and v35,r241c15
r242c11 = and r242c7,r237c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r242c15 = and v35,r242c11
r242c19 = and r195c67,r237c35
r237c43 = or r242c15,r242c19
v556 = is_equal r239c11,r209c35
v558 = is_equal r239c11,r209c51
r237c47 = or v556,v558
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r242c39 = and v36,r237c47
r241c43 = not r237c47
r242c43 = and v36,r241c43
r242c47 = and r242c43,r237c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r242c51 = and v36,r242c47
r242c55 = and r195c71,r237c43
r237c51 = or r242c51,r242c55
v560 = is_equal r239c11,r209c71
v562 = is_equal r239c11,r211c7
r237c55 = or v560,v562
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r242c75 = and v37,r237c55
r241c71 = not r237c55
r242c79 = and v37,r241c71
r243c3 = and r242c79,r237c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r243c7 = and v37,r243c3
r243c11 = and r195c75,r237c51
r237c59 = or r243c7,r243c11
v564 = is_equal r239c11,r211c27
v566 = is_equal r239c11,r211c43
r237c63 = or v564,v566
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r243c31 = and v38,r237c63
r244c19 = not r237c63
r243c35 = and v38,r244c19
r243c39 = and r243c35,r237c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r243c43 = and v38,r243c39
r243c47 = and r195c79,r237c59
r237c67 = or r243c43,r243c47
v568 = is_equal r239c11,r211c63
v570 = is_equal r239c11,r211c79
r237c71 = or v568,v570
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r243c67 = and v39,r237c71
r244c47 = not r237c71
r243c71 = and v39,r244c47
r243c75 = and r243c71,r237c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r243c79 = and v39,r243c75
r245c3 = and r199c3,r237c67
r237c75 = or r243c79,r245c3
v572 = is_equal r239c11,r213c19
v574 = is_equal r239c11,r213c35
r237c79 = or v572,v574
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r245c23 = and v40,r237c79
r244c75 = not r237c79
r245c27 = and v40,r244c75
r245c31 = and r245c27,r237c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r245c35 = and v40,r245c31
r245c39 = and r199c7,r237c75
r247c3 = or r245c35,r245c39
v433 = constant 5
r244c79 = sub v69,v433
v576 = is_equal r244c79,v70
v578 = is_equal r244c79,r204c39
r247c7 = or v576,v578
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r245c59 = and v41,r247c7
r248c27 = not r247c7
r245c63 = and v41,r248c27
r245c67 = and r245c63,r247c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r245c71 = and v41,r245c67
r245c75 = and r199c11,r247c3
r247c11 = or r245c71,r245c75
v580 = is_equal r244c79,r52c59
v582 = is_equal r244c79,r27c27
r247c15 = or v580,v582
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r249c15 = and v42,r247c15
r248c55 = not r247c15
r249c19 = and v42,r248c55
r249c23 = and r249c19,r247c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r249c27 = and v42,r249c23
r249c31 = and r199c15,r247c11
r247c19 = or r249c27,r249c31
v584 = is_equal r244c79,r55c35
v586 = is_equal r244c79,r27c75
r247c23 = or v584,v586
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r249c51 = and v43,r247c23
r250c3 = not r247c23
r249c55 = and v43,r250c3
r249c59 = and r249c55,r247c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r249c63 = and v43,r249c59
r249c67 = and r199c19,r247c19
r247c27 = or r249c63,r249c67
v588 = is_equal r244c79,r209c35
v590 = is_equal r244c79,r209c51
r247c31 = or v588,v590
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r251c7 = and v44,r247c31
r250c31 = not r247c31
r251c11 = and v44,r250c31
r251c15 = and r251c11,r247c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r251c19 = and v44,r251c15
r251c23 = and r199c23,r247c27
r247c35 = or r251c19,r251c23
v592 = is_equal r244c79,r209c71
v594 = is_equal r244c79,r211c7
r247c39 = or v592,v594
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r251c43 = and v45,r247c39
r250c59 = not r247c39
r251c47 = and v45,r250c59
r251c51 = and r251c47,r247c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r251c55 = and v45,r251c51
r251c59 = and r199c27,r247c35
r247c43 = or r251c55,r251c59
v596 = is_equal r244c79,r211c27
v598 = is_equal r244c79,r211c43
r247c47 = or v596,v598
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r251c79 = and v46,r247c47
r252c7 = not r247c47
r253c3 = and v46,r252c7
r253c7 = and r253c3,r247c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r253c11 = and v46,r253c7
r253c15 = and r199c31,r247c43
r247c51 = or r253c11,r253c15
v600 = is_equal r244c79,r211c63
v602 = is_equal r244c79,r211c79
r247c55 = or v600,v602
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r253c35 = and v47,r247c55
r252c35 = not r247c55
r253c39 = and v47,r252c35
r253c43 = and r253c39,r247c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r253c47 = and v47,r253c43
r253c51 = and r199c35,r247c51
r247c59 = or r253c47,r253c51
v604 = is_equal r244c79,r213c19
v606 = is_equal r244c79,r213c35
r247c63 = or v604,v606
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r253c71 = and v48,r247c63
r252c63 = not r247c63
r253c75 = and v48,r252c63
r253c79 = and r253c75,r247c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r254c3 = and v48,r253c79
r254c7 = and r199c39,r247c59
r247c67 = or r254c3,r254c7
v438 = constant 6
r252c67 = sub v69,v438
v608 = is_equal r252c67,v70
v610 = is_equal r252c67,r204c39
r247c71 = or v608,v610
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r254c27 = and v49,r247c71
r255c15 = not r247c71
r254c31 = and v49,r255c15
r254c35 = and r254c31,r247c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r254c39 = and v49,r254c35
r254c43 = and r199c43,r247c67
r247c75 = or r254c39,r254c43
v612 = is_equal r252c67,r52c59
v614 = is_equal r252c67,r27c27
r247c79 = or v612,v614
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r254c63 = and v50,r247c79
r255c43 = not r247c79
r254c67 = and v50,r255c43
r254c71 = and r254c67,r247c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r254c75 = and v50,r254c71
r254c79 = and r199c47,r247c75
r257c3 = or r254c75,r254c79
v616 = is_equal r252c67,r55c35
v618 = is_equal r252c67,r27c75
r257c7 = or v616,v618
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r258c19 = and v51,r257c7
r255c71 = not r257c7
r258c23 = and v51,r255c71
r258c27 = and r258c23,r257c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r258c31 = and v51,r258c27
r258c35 = and r199c51,r257c3
r257c11 = or r258c31,r258c35
v620 = is_equal r252c67,r209c35
v622 = is_equal r252c67,r209c51
r257c15 = or v620,v622
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r258c55 = and v52,r257c15
r259c19 = not r257c15
r258c59 = and v52,r259c19
r258c63 = and r258c59,r257c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r258c67 = and v52,r258c63
r258c71 = and r199c55,r257c11
r257c19 = or r258c67,r258c71
v624 = is_equal r252c67,r209c71
v626 = is_equal r252c67,r211c7
r257c23 = or v624,v626
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r260c11 = and v53,r257c23
r259c47 = not r257c23
r260c15 = and v53,r259c47
r260c19 = and r260c15,r257c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r260c23 = and v53,r260c19
r260c27 = and r199c59,r257c19
r257c27 = or r260c23,r260c27
v628 = is_equal r252c67,r211c27
v630 = is_equal r252c67,r211c43
r257c31 = or v628,v630
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r260c47 = and v54,r257c31
r259c75 = not r257c31
r260c51 = and v54,r259c75
r260c55 = and r260c51,r257c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r260c59 = and v54,r260c55
r260c63 = and r199c63,r257c27
r257c35 = or r260c59,r260c63
v632 = is_equal r252c67,r211c63
v634 = is_equal r252c67,r211c79
r257c39 = or v632,v634
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r262c3 = and v55,r257c39
r261c23 = not r257c39
r262c7 = and v55,r261c23
r262c11 = and r262c7,r257c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r262c15 = and v55,r262c11
r262c19 = and r199c67,r257c35
r257c43 = or r262c15,r262c19
v636 = is_equal r252c67,r213c19
v638 = is_equal r252c67,r213c35
r257c47 = or v636,v638
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r262c39 = and v56,r257c47
r261c51 = not r257c47
r262c43 = and v56,r261c51
r262c47 = and r262c43,r257c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r262c51 = and v56,r262c47
r262c55 = and r199c71,r257c43
r257c51 = or r262c51,r262c55
v443 = constant 7
r261c55 = sub v69,v443
v640 = is_equal r261c55,v70
v642 = is_equal r261c55,r204c39
r257c55 = or v640,v642
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r262c75 = and v57,r257c55
r263c3 = not r257c55
r262c79 = and v57,r263c3
r264c3 = and r262c79,r257c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r264c7 = and v57,r264c3
r264c11 = and r199c75,r257c51
r257c59 = or r264c7,r264c11
v644 = is_equal r261c55,r52c59
v646 = is_equal r261c55,r27c27
r257c63 = or v644,v646
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r264c31 = and v58,r257c63
r263c31 = not r257c63
r264c35 = and v58,r263c31
r264c39 = and r264c35,r257c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r264c43 = and v58,r264c39
r264c47 = and r199c79,r257c59
r257c67 = or r264c43,r264c47
v648 = is_equal r261c55,r55c35
v650 = is_equal r261c55,r27c75
r257c71 = or v648,v650
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r264c67 = and v59,r257c71
r263c59 = not r257c71
r264c71 = and v59,r263c59
r264c75 = and r264c71,r257c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r264c79 = and v59,r264c75
r265c3 = and r204c3,r257c67
r257c75 = or r264c79,r265c3
v652 = is_equal r261c55,r209c35
v654 = is_equal r261c55,r209c51
r257c79 = or v652,v654
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r265c23 = and v60,r257c79
r267c7 = not r257c79
r265c27 = and v60,r267c7
r265c31 = and r265c27,r257c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r265c35 = and v60,r265c31
r265c39 = and r204c7,r257c75
r268c3 = or r265c35,r265c39
v656 = is_equal r261c55,r209c71
v658 = is_equal r261c55,r211c7
r268c7 = or v656,v658
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r265c59 = and v61,r268c7
r267c35 = not r268c7
r265c63 = and v61,r267c35
r265c67 = and r265c63,r268c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r265c71 = and v61,r265c67
r265c75 = and r204c11,r268c3
r268c11 = or r265c71,r265c75
v660 = is_equal r261c55,r211c27
v662 = is_equal r261c55,r211c43
r268c15 = or v660,v662
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r269c15 = and v62,r268c15
r267c63 = not r268c15
r269c19 = and v62,r267c63
r269c23 = and r269c19,r268c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r269c27 = and v62,r269c23
r269c31 = and r204c15,r268c11
r268c19 = or r269c27,r269c31
v664 = is_equal r261c55,r211c63
v666 = is_equal r261c55,r211c79
r268c23 = or v664,v666
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r269c51 = and v63,r268c23
r270c11 = not r268c23
r269c55 = and v63,r270c11
r269c59 = and r269c55,r268c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r269c63 = and v63,r269c59
r269c67 = and r204c19,r268c19
r268c27 = or r269c63,r269c67
v668 = is_equal r261c55,r213c19
v670 = is_equal r261c55,r213c35
r268c31 = or v668,v670
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r271c7 = and v64,r268c31
r270c39 = not r268c31
r271c11 = and v64,r270c39
r271c15 = and r271c11,r268c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r271c19 = and v64,r271c15
r271c23 = and r204c23,r268c27
r268c35 = or r271c19,r271c23
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r268c35,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v672 = is_equal v71,v72
v1 = constant 0
r270c55 = sub v1,v72
v674 = is_equal v71,r270c55
r268c39 = or v672,v674
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r271c43 = and v0,r268c39
r270c71 = not r268c39
r271c47 = and v0,r270c71
r271c51 = and v0,r271c47
r268c43 = or r271c51,r189c11
v676 = is_equal v71,r81c3
v87 = constant 1
r272c7 = sub v87,v72
v678 = is_equal v71,r272c7
r268c47 = or v676,v678
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r271c71 = and v2,r268c47
r272c23 = not r268c47
r271c75 = and v2,r272c23
r271c79 = and r271c75,r268c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r273c3 = and v2,r271c79
r273c7 = and r189c15,r268c43
r268c51 = or r273c3,r273c7
v680 = is_equal v71,r81c59
v84 = constant 2
r272c39 = sub v84,v72
v682 = is_equal v71,r272c39
r268c55 = or v680,v682
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r273c27 = and v3,r268c55
r272c55 = not r268c55
r273c31 = and v3,r272c55
r273c35 = and r273c31,r268c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r273c39 = and v3,r273c35
r273c43 = and r189c19,r268c51
r268c59 = or r273c39,r273c43
v423 = constant 3
r272c59 = sub v72,v423
v684 = is_equal v71,r272c59
v423 = constant 3
r272c75 = sub v423,v72
v686 = is_equal v71,r272c75
r268c63 = or v684,v686
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r273c63 = and v4,r268c63
r274c11 = not r268c63
r273c67 = and v4,r274c11
r273c71 = and r273c67,r268c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r273c75 = and v4,r273c71
r273c79 = and r189c23,r268c59
r268c67 = or r273c75,r273c79
v428 = constant 4
r274c15 = sub v72,v428
v688 = is_equal v71,r274c15
v428 = constant 4
r274c31 = sub v428,v72
v690 = is_equal v71,r274c31
r268c71 = or v688,v690
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r275c19 = and v5,r268c71
r274c47 = not r268c71
r275c23 = and v5,r274c47
r275c27 = and r275c23,r268c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r275c31 = and v5,r275c27
r275c35 = and r189c27,r268c67
r268c75 = or r275c31,r275c35
v433 = constant 5
r274c51 = sub v72,v433
v692 = is_equal v71,r274c51
v433 = constant 5
r274c67 = sub v433,v72
v694 = is_equal v71,r274c67
r268c79 = or v692,v694
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r275c55 = and v6,r268c79
r277c3 = not r268c79
r275c59 = and v6,r277c3
r275c63 = and r275c59,r268c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r275c67 = and v6,r275c63
r275c71 = and r189c31,r268c75
r278c3 = or r275c67,r275c71
v438 = constant 6
r277c7 = sub v72,v438
v696 = is_equal v71,r277c7
v438 = constant 6
r277c23 = sub v438,v72
v698 = is_equal v71,r277c23
r278c7 = or v696,v698
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r279c11 = and v7,r278c7
r277c39 = not r278c7
r279c15 = and v7,r277c39
r279c19 = and r279c15,r278c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r279c23 = and v7,r279c19
r279c27 = and r189c35,r278c3
r278c11 = or r279c23,r279c27
v443 = constant 7
r277c43 = sub v72,v443
v700 = is_equal v71,r277c43
v443 = constant 7
r277c59 = sub v443,v72
v702 = is_equal v71,r277c59
r278c15 = or v700,v702
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r279c47 = and v8,r278c15
r277c75 = not r278c15
r279c51 = and v8,r277c75
r279c55 = and r279c51,r278c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r279c59 = and v8,r279c55
r279c63 = and r189c39,r278c11
r278c19 = or r279c59,r279c63
v704 = is_equal r81c43,v72
v706 = is_equal r81c43,r270c55
r278c23 = or v704,v706
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r281c3 = and v9,r278c23
r280c23 = not r278c23
r281c7 = and v9,r280c23
r281c11 = and r281c7,r278c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r281c15 = and v9,r281c11
r281c19 = and r189c43,r278c19
r278c27 = or r281c15,r281c19
v708 = is_equal r81c43,r81c3
v710 = is_equal r81c43,r272c7
r278c31 = or v708,v710
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r281c39 = and v10,r278c31
r280c51 = not r278c31
r281c43 = and v10,r280c51
r281c47 = and r281c43,r278c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r281c51 = and v10,r281c47
r281c55 = and r189c47,r278c27
r278c35 = or r281c51,r281c55
v712 = is_equal r81c43,r81c59
v714 = is_equal r81c43,r272c39
r278c39 = or v712,v714
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r281c75 = and v11,r278c39
r280c79 = not r278c39
r281c79 = and v11,r280c79
r282c3 = and r281c79,r278c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r282c7 = and v11,r282c3
r282c11 = and r189c51,r278c35
r278c43 = or r282c7,r282c11
v716 = is_equal r81c43,r272c59
v718 = is_equal r81c43,r272c75
r278c47 = or v716,v718
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r282c31 = and v12,r278c47
r283c27 = not r278c47
r282c35 = and v12,r283c27
r282c39 = and r282c35,r278c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r282c43 = and v12,r282c39
r282c47 = and r189c55,r278c43
r278c51 = or r282c43,r282c47
v720 = is_equal r81c43,r274c15
v722 = is_equal r81c43,r274c31
r278c55 = or v720,v722
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r282c67 = and v13,r278c55
r283c55 = not r278c55
r282c71 = and v13,r283c55
r282c75 = and r282c71,r278c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r282c79 = and v13,r282c75
r284c3 = and r189c59,r278c51
r278c59 = or r282c79,r284c3
v724 = is_equal r81c43,r274c51
v726 = is_equal r81c43,r274c67
r278c63 = or v724,v726
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r284c23 = and v14,r278c63
r285c3 = not r278c63
r284c27 = and v14,r285c3
r284c31 = and r284c27,r278c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r284c35 = and v14,r284c31
r284c39 = and r189c63,r278c59
r278c67 = or r284c35,r284c39
v728 = is_equal r81c43,r277c7
v730 = is_equal r81c43,r277c23
r278c71 = or v728,v730
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r284c59 = and v15,r278c71
r285c31 = not r278c71
r284c63 = and v15,r285c31
r284c67 = and r284c63,r278c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r284c71 = and v15,r284c67
r284c75 = and r189c67,r278c67
r278c75 = or r284c71,r284c75
v732 = is_equal r81c43,r277c43
v734 = is_equal r81c43,r277c59
r278c79 = or v732,v734
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r287c15 = and v16,r278c79
r285c59 = not r278c79
r287c19 = and v16,r285c59
r287c23 = and r287c19,r278c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r287c27 = and v16,r287c23
r287c31 = and r189c71,r278c75
r288c3 = or r287c27,r287c31
v736 = is_equal r79c67,v72
v738 = is_equal r79c67,r270c55
r288c7 = or v736,v738
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r287c51 = and v17,r288c7
r289c7 = not r288c7
r287c55 = and v17,r289c7
r287c59 = and r287c55,r288c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r287c63 = and v17,r287c59
r287c67 = and r189c75,r288c3
r288c11 = or r287c63,r287c67
v740 = is_equal r79c67,r81c3
v742 = is_equal r79c67,r272c7
r288c15 = or v740,v742
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r290c7 = and v18,r288c15
r289c35 = not r288c15
r290c11 = and v18,r289c35
r290c15 = and r290c11,r288c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r290c19 = and v18,r290c15
r290c23 = and r189c79,r288c11
r288c19 = or r290c19,r290c23
v744 = is_equal r79c67,r81c59
v746 = is_equal r79c67,r272c39
r288c23 = or v744,v746
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r290c43 = and v19,r288c23
r289c63 = not r288c23
r290c47 = and v19,r289c63
r290c51 = and r290c47,r288c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r290c55 = and v19,r290c51
r290c59 = and r195c3,r288c19
r288c27 = or r290c55,r290c59
v748 = is_equal r79c67,r272c59
v750 = is_equal r79c67,r272c75
r288c31 = or v748,v750
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r290c79 = and v20,r288c31
r291c11 = not r288c31
r292c3 = and v20,r291c11
r292c7 = and r292c3,r288c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r292c11 = and v20,r292c7
r292c15 = and r195c7,r288c27
r288c35 = or r292c11,r292c15
v752 = is_equal r79c67,r274c15
v754 = is_equal r79c67,r274c31
r288c39 = or v752,v754
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r292c35 = and v21,r288c39
r291c39 = not r288c39
r292c39 = and v21,r291c39
r292c43 = and r292c39,r288c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r292c47 = and v21,r292c43
r292c51 = and r195c11,r288c35
r288c43 = or r292c47,r292c51
v756 = is_equal r79c67,r274c51
v758 = is_equal r79c67,r274c67
r288c47 = or v756,v758
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r292c71 = and v22,r288c47
r291c67 = not r288c47
r292c75 = and v22,r291c67
r292c79 = and r292c75,r288c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c3 = and v22,r292c79
r293c7 = and r195c15,r288c43
r288c51 = or r293c3,r293c7
v760 = is_equal r79c67,r277c7
v762 = is_equal r79c67,r277c23
r288c55 = or v760,v762
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c27 = and v23,r288c55
r294c15 = not r288c55
r293c31 = and v23,r294c15
r293c35 = and r293c31,r288c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c39 = and v23,r293c35
r293c43 = and r195c19,r288c51
r288c59 = or r293c39,r293c43
v764 = is_equal r79c67,r277c43
v766 = is_equal r79c67,r277c59
r288c63 = or v764,v766
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c63 = and v24,r288c63
r294c43 = not r288c63
r293c67 = and v24,r294c43
r293c71 = and r293c67,r288c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c75 = and v24,r293c71
r293c79 = and r195c23,r288c59
r288c67 = or r293c75,r293c79
v423 = constant 3
r294c47 = sub v71,v423
v768 = is_equal r294c47,v72
v770 = is_equal r294c47,r270c55
r288c71 = or v768,v770
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r295c19 = and v25,r288c71
r294c75 = not r288c71
r295c23 = and v25,r294c75
r295c27 = and r295c23,r288c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r295c31 = and v25,r295c27
r295c35 = and r195c27,r288c67
r288c75 = or r295c31,r295c35
v772 = is_equal r294c47,r81c3
v774 = is_equal r294c47,r272c7
r288c79 = or v772,v774
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r295c55 = and v26,r288c79
r297c23 = not r288c79
r295c59 = and v26,r297c23
r295c63 = and r295c59,r288c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r295c67 = and v26,r295c63
r295c71 = and r195c31,r288c75
r298c3 = or r295c67,r295c71
v776 = is_equal r294c47,r81c59
v778 = is_equal r294c47,r272c39
r298c7 = or v776,v778
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r299c11 = and v27,r298c7
r297c51 = not r298c7
r299c15 = and v27,r297c51
r299c19 = and r299c15,r298c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r299c23 = and v27,r299c19
r299c27 = and r195c35,r298c3
r298c11 = or r299c23,r299c27
v780 = is_equal r294c47,r272c59
v782 = is_equal r294c47,r272c75
r298c15 = or v780,v782
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r299c47 = and v28,r298c15
r297c79 = not r298c15
r299c51 = and v28,r297c79
r299c55 = and r299c51,r298c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r299c59 = and v28,r299c55
r299c63 = and r195c39,r298c11
r298c19 = or r299c59,r299c63
v784 = is_equal r294c47,r274c15
v786 = is_equal r294c47,r274c31
r298c23 = or v784,v786
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r301c3 = and v29,r298c23
r300c27 = not r298c23
r301c7 = and v29,r300c27
r301c11 = and r301c7,r298c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r301c15 = and v29,r301c11
r301c19 = and r195c43,r298c19
r298c27 = or r301c15,r301c19
v788 = is_equal r294c47,r274c51
v790 = is_equal r294c47,r274c67
r298c31 = or v788,v790
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r301c39 = and v30,r298c31
r300c55 = not r298c31
r301c43 = and v30,r300c55
r301c47 = and r301c43,r298c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r301c51 = and v30,r301c47
r301c55 = and r195c47,r298c27
r298c35 = or r301c51,r301c55
v792 = is_equal r294c47,r277c7
v794 = is_equal r294c47,r277c23
r298c39 = or v792,v794
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r301c75 = and v31,r298c39
r302c3 = not r298c39
r301c79 = and v31,r302c3
r303c3 = and r301c79,r298c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r303c7 = and v31,r303c3
r303c11 = and r195c51,r298c35
r298c43 = or r303c7,r303c11
v796 = is_equal r294c47,r277c43
v798 = is_equal r294c47,r277c59
r298c47 = or v796,v798
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r303c31 = and v32,r298c47
r302c31 = not r298c47
r303c35 = and v32,r302c31
r303c39 = and r303c35,r298c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r303c43 = and v32,r303c39
r303c47 = and r195c55,r298c43
r298c51 = or r303c43,r303c47
v428 = constant 4
r302c35 = sub v71,v428
v800 = is_equal r302c35,v72
v802 = is_equal r302c35,r270c55
r298c55 = or v800,v802
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r303c67 = and v33,r298c55
r302c63 = not r298c55
r303c71 = and v33,r302c63
r303c75 = and r303c71,r298c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r303c79 = and v33,r303c75
r304c3 = and r195c59,r298c51
r298c59 = or r303c79,r304c3
v804 = is_equal r302c35,r81c3
v806 = is_equal r302c35,r272c7
r298c63 = or v804,v806
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r304c23 = and v34,r298c63
r305c11 = not r298c63
r304c27 = and v34,r305c11
r304c31 = and r304c27,r298c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r304c35 = and v34,r304c31
r304c39 = and r195c63,r298c59
r298c67 = or r304c35,r304c39
v808 = is_equal r302c35,r81c59
v810 = is_equal r302c35,r272c39
r298c71 = or v808,v810
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r304c59 = and v35,r298c71
r305c39 = not r298c71
r304c63 = and v35,r305c39
r304c67 = and r304c63,r298c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r304c71 = and v35,r304c67
r304c75 = and r195c67,r298c67
r298c75 = or r304c71,r304c75
v812 = is_equal r302c35,r272c59
v814 = is_equal r302c35,r272c75
r298c79 = or v812,v814
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r307c15 = and v36,r298c79
r305c67 = not r298c79
r307c19 = and v36,r305c67
r307c23 = and r307c19,r298c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r307c27 = and v36,r307c23
r307c31 = and r195c71,r298c75
r308c3 = or r307c27,r307c31
v816 = is_equal r302c35,r274c15
v818 = is_equal r302c35,r274c31
r308c7 = or v816,v818
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r307c51 = and v37,r308c7
r309c15 = not r308c7
r307c55 = and v37,r309c15
r307c59 = and r307c55,r308c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r307c63 = and v37,r307c59
r307c67 = and r195c75,r308c3
r308c11 = or r307c63,r307c67
v820 = is_equal r302c35,r274c51
v822 = is_equal r302c35,r274c67
r308c15 = or v820,v822
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r310c7 = and v38,r308c15
r309c43 = not r308c15
r310c11 = and v38,r309c43
r310c15 = and r310c11,r308c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r310c19 = and v38,r310c15
r310c23 = and r195c79,r308c11
r308c19 = or r310c19,r310c23
v824 = is_equal r302c35,r277c7
v826 = is_equal r302c35,r277c23
r308c23 = or v824,v826
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r310c43 = and v39,r308c23
r309c71 = not r308c23
r310c47 = and v39,r309c71
r310c51 = and r310c47,r308c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r310c55 = and v39,r310c51
r310c59 = and r199c3,r308c19
r308c27 = or r310c55,r310c59
v828 = is_equal r302c35,r277c43
v830 = is_equal r302c35,r277c59
r308c31 = or v828,v830
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r310c79 = and v40,r308c31
r311c19 = not r308c31
r312c3 = and v40,r311c19
r312c7 = and r312c3,r308c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r312c11 = and v40,r312c7
r312c15 = and r199c7,r308c27
r308c35 = or r312c11,r312c15
v433 = constant 5
r311c23 = sub v71,v433
v832 = is_equal r311c23,v72
v834 = is_equal r311c23,r270c55
r308c39 = or v832,v834
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r312c35 = and v41,r308c39
r311c51 = not r308c39
r312c39 = and v41,r311c51
r312c43 = and r312c39,r308c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r312c47 = and v41,r312c43
r312c51 = and r199c11,r308c35
r308c43 = or r312c47,r312c51
v836 = is_equal r311c23,r81c3
v838 = is_equal r311c23,r272c7
r308c47 = or v836,v838
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r312c71 = and v42,r308c47
r311c79 = not r308c47
r312c75 = and v42,r311c79
r312c79 = and r312c75,r308c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r313c3 = and v42,r312c79
r313c7 = and r199c15,r308c43
r308c51 = or r313c3,r313c7
v840 = is_equal r311c23,r81c59
v842 = is_equal r311c23,r272c39
r308c55 = or v840,v842
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r313c27 = and v43,r308c55
r314c27 = not r308c55
r313c31 = and v43,r314c27
r313c35 = and r313c31,r308c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r313c39 = and v43,r313c35
r313c43 = and r199c19,r308c51
r308c59 = or r313c39,r313c43
v844 = is_equal r311c23,r272c59
v846 = is_equal r311c23,r272c75
r308c63 = or v844,v846
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r313c63 = and v44,r308c63
r314c55 = not r308c63
r313c67 = and v44,r314c55
r313c71 = and r313c67,r308c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r313c75 = and v44,r313c71
r313c79 = and r199c23,r308c59
r308c67 = or r313c75,r313c79
v848 = is_equal r311c23,r274c15
v850 = is_equal r311c23,r274c31
r308c71 = or v848,v850
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r315c19 = and v45,r308c71
r316c3 = not r308c71
r315c23 = and v45,r316c3
r315c27 = and r315c23,r308c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r315c31 = and v45,r315c27
r315c35 = and r199c27,r308c67
r308c75 = or r315c31,r315c35
v852 = is_equal r311c23,r274c51
v854 = is_equal r311c23,r274c67
r308c79 = or v852,v854
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r315c55 = and v46,r308c79
r316c31 = not r308c79
r315c59 = and v46,r316c31
r315c63 = and r315c59,r308c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r315c67 = and v46,r315c63
r315c71 = and r199c31,r308c75
r318c3 = or r315c67,r315c71
v856 = is_equal r311c23,r277c7
v858 = is_equal r311c23,r277c23
r318c7 = or v856,v858
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r319c11 = and v47,r318c7
r316c59 = not r318c7
r319c15 = and v47,r316c59
r319c19 = and r319c15,r318c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r319c23 = and v47,r319c19
r319c27 = and r199c35,r318c3
r318c11 = or r319c23,r319c27
v860 = is_equal r311c23,r277c43
v862 = is_equal r311c23,r277c59
r318c15 = or v860,v862
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r319c47 = and v48,r318c15
r320c7 = not r318c15
r319c51 = and v48,r320c7
r319c55 = and r319c51,r318c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r319c59 = and v48,r319c55
r319c63 = and r199c39,r318c11
r318c19 = or r319c59,r319c63
v438 = constant 6
r320c11 = sub v71,v438
v864 = is_equal r320c11,v72
v866 = is_equal r320c11,r270c55
r318c23 = or v864,v866
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r321c3 = and v49,r318c23
r320c39 = not r318c23
r321c7 = and v49,r320c39
r321c11 = and r321c7,r318c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r321c15 = and v49,r321c11
r321c19 = and r199c43,r318c19
r318c27 = or r321c15,r321c19
v868 = is_equal r320c11,r81c3
v870 = is_equal r320c11,r272c7
r318c31 = or v868,v870
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r321c39 = and v50,r318c31
r320c67 = not r318c31
r321c43 = and v50,r320c67
r321c47 = and r321c43,r318c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r321c51 = and v50,r321c47
r321c55 = and r199c47,r318c27
r318c35 = or r321c51,r321c55
v872 = is_equal r320c11,r81c59
v874 = is_equal r320c11,r272c39
r318c39 = or v872,v874
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r321c75 = and v51,r318c39
r322c15 = not r318c39
r321c79 = and v51,r322c15
r323c3 = and r321c79,r318c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r323c7 = and v51,r323c3
r323c11 = and r199c51,r318c35
r318c43 = or r323c7,r323c11
v876 = is_equal r320c11,r272c59
v878 = is_equal r320c11,r272c75
r318c47 = or v876,v878
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r323c31 = and v52,r318c47
r322c43 = not r318c47
r323c35 = and v52,r322c43
r323c39 = and r323c35,r318c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r323c43 = and v52,r323c39
r323c47 = and r199c55,r318c43
r318c51 = or r323c43,r323c47
v880 = is_equal r320c11,r274c15
v882 = is_equal r320c11,r274c31
r318c55 = or v880,v882
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r323c67 = and v53,r318c55
r322c71 = not r318c55
r323c71 = and v53,r322c71
r323c75 = and r323c71,r318c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r323c79 = and v53,r323c75
r324c3 = and r199c59,r318c51
r318c59 = or r323c79,r324c3
v884 = is_equal r320c11,r274c51
v886 = is_equal r320c11,r274c67
r318c63 = or v884,v886
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r324c23 = and v54,r318c63
r325c19 = not r318c63
r324c27 = and v54,r325c19
r324c31 = and r324c27,r318c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r324c35 = and v54,r324c31
r324c39 = and r199c63,r318c59
r318c67 = or r324c35,r324c39
v888 = is_equal r320c11,r277c7
v890 = is_equal r320c11,r277c23
r318c71 = or v888,v890
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r324c59 = and v55,r318c71
r325c47 = not r318c71
r324c63 = and v55,r325c47
r324c67 = and r324c63,r318c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r324c71 = and v55,r324c67
r324c75 = and r199c67,r318c67
r318c75 = or r324c71,r324c75
v892 = is_equal r320c11,r277c43
v894 = is_equal r320c11,r277c59
r318c79 = or v892,v894
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r327c15 = and v56,r318c79
r325c75 = not r318c79
r327c19 = and v56,r325c75
r327c23 = and r327c19,r318c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r327c27 = and v56,r327c23
r327c31 = and r199c71,r318c75
r328c3 = or r327c27,r327c31
v443 = constant 7
r325c79 = sub v71,v443
v896 = is_equal r325c79,v72
v898 = is_equal r325c79,r270c55
r328c7 = or v896,v898
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r327c51 = and v57,r328c7
r329c27 = not r328c7
r327c55 = and v57,r329c27
r327c59 = and r327c55,r328c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r327c63 = and v57,r327c59
r327c67 = and r199c75,r328c3
r328c11 = or r327c63,r327c67
v900 = is_equal r325c79,r81c3
v902 = is_equal r325c79,r272c7
r328c15 = or v900,v902
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r330c7 = and v58,r328c15
r329c55 = not r328c15
r330c11 = and v58,r329c55
r330c15 = and r330c11,r328c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r330c19 = and v58,r330c15
r330c23 = and r199c79,r328c11
r328c19 = or r330c19,r330c23
v904 = is_equal r325c79,r81c59
v906 = is_equal r325c79,r272c39
r328c23 = or v904,v906
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r330c43 = and v59,r328c23
r331c3 = not r328c23
r330c47 = and v59,r331c3
r330c51 = and r330c47,r328c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r330c55 = and v59,r330c51
r330c59 = and r204c3,r328c19
r328c27 = or r330c55,r330c59
v908 = is_equal r325c79,r272c59
v910 = is_equal r325c79,r272c75
r328c31 = or v908,v910
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r330c79 = and v60,r328c31
r331c31 = not r328c31
r332c3 = and v60,r331c31
r332c7 = and r332c3,r328c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r332c11 = and v60,r332c7
r332c15 = and r204c7,r328c27
r328c35 = or r332c11,r332c15
v912 = is_equal r325c79,r274c15
v914 = is_equal r325c79,r274c31
r328c39 = or v912,v914
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r332c35 = and v61,r328c39
r331c59 = not r328c39
r332c39 = and v61,r331c59
r332c43 = and r332c39,r328c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r332c47 = and v61,r332c43
r332c51 = and r204c11,r328c35
r328c43 = or r332c47,r332c51
v916 = is_equal r325c79,r274c51
v918 = is_equal r325c79,r274c67
r328c47 = or v916,v918
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r332c71 = and v62,r328c47
r333c7 = not r328c47
r332c75 = and v62,r333c7
r332c79 = and r332c75,r328c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r334c3 = and v62,r332c79
r334c7 = and r204c15,r328c43
r328c51 = or r334c3,r334c7
v920 = is_equal r325c79,r277c7
v922 = is_equal r325c79,r277c23
r328c55 = or v920,v922
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r334c27 = and v63,r328c55
r333c35 = not r328c55
r334c31 = and v63,r333c35
r334c35 = and r334c31,r328c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r334c39 = and v63,r334c35
r334c43 = and r204c19,r328c51
r328c59 = or r334c39,r334c43
v924 = is_equal r325c79,r277c43
v926 = is_equal r325c79,r277c59
r328c63 = or v924,v926
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r334c63 = and v64,r328c63
r333c63 = not r328c63
r334c67 = and v64,r333c63
r334c71 = and r334c67,r328c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r334c75 = and v64,r334c71
r334c79 = and r204c23,r328c59
r328c67 = or r334c75,r334c79
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r328c67,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v928 = is_equal v73,v74
v1 = constant 0
r333c79 = sub v1,v74
v930 = is_equal v73,r333c79
r328c71 = or v928,v930
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r335c19 = and v0,r328c71
r336c15 = not r328c71
r335c23 = and v0,r336c15
r335c27 = and v0,r335c23
r328c75 = or r335c27,r189c11
v932 = is_equal v73,r106c27
v87 = constant 1
r336c31 = sub v87,v74
v934 = is_equal v73,r336c31
r328c79 = or v932,v934
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r335c47 = and v2,r328c79
r336c47 = not r328c79
r335c51 = and v2,r336c47
r335c55 = and r335c51,r328c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r335c59 = and v2,r335c55
r335c63 = and r189c15,r328c75
r338c3 = or r335c59,r335c63
v936 = is_equal v73,r110c3
v84 = constant 2
r336c63 = sub v84,v74
v938 = is_equal v73,r336c63
r338c7 = or v936,v938
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r339c3 = and v3,r338c7
r336c79 = not r338c7
r339c7 = and v3,r336c79
r339c11 = and r339c7,r338c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r339c15 = and v3,r339c11
r339c19 = and r189c19,r338c3
r338c11 = or r339c15,r339c19
v423 = constant 3
r340c3 = sub v74,v423
v940 = is_equal v73,r340c3
v423 = constant 3
r340c19 = sub v423,v74
v942 = is_equal v73,r340c19
r338c15 = or v940,v942
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r339c39 = and v4,r338c15
r340c35 = not r338c15
r339c43 = and v4,r340c35
r339c47 = and r339c43,r338c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r339c51 = and v4,r339c47
r339c55 = and r189c23,r338c11
r338c19 = or r339c51,r339c55
v428 = constant 4
r340c39 = sub v74,v428
v944 = is_equal v73,r340c39
v428 = constant 4
r340c55 = sub v428,v74
v946 = is_equal v73,r340c55
r338c23 = or v944,v946
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r339c75 = and v5,r338c23
r340c71 = not r338c23
r339c79 = and v5,r340c71
r341c3 = and r339c79,r338c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r341c7 = and v5,r341c3
r341c11 = and r189c27,r338c19
r338c27 = or r341c7,r341c11
v433 = constant 5
r340c75 = sub v74,v433
v948 = is_equal v73,r340c75
v433 = constant 5
r342c11 = sub v433,v74
v950 = is_equal v73,r342c11
r338c31 = or v948,v950
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r341c31 = and v6,r338c31
r342c27 = not r338c31
r341c35 = and v6,r342c27
r341c39 = and r341c35,r338c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r341c43 = and v6,r341c39
r341c47 = and r189c31,r338c27
r338c35 = or r341c43,r341c47
v438 = constant 6
r342c31 = sub v74,v438
v952 = is_equal v73,r342c31
v438 = constant 6
r342c47 = sub v438,v74
v954 = is_equal v73,r342c47
r338c39 = or v952,v954
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r341c67 = and v7,r338c39
r342c63 = not r338c39
r341c71 = and v7,r342c63
r341c75 = and r341c71,r338c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r341c79 = and v7,r341c75
r343c3 = and r189c35,r338c35
r338c43 = or r341c79,r343c3
v443 = constant 7
r342c67 = sub v74,v443
v956 = is_equal v73,r342c67
v443 = constant 7
r344c3 = sub v443,v74
v958 = is_equal v73,r344c3
r338c47 = or v956,v958
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r343c23 = and v8,r338c47
r344c19 = not r338c47
r343c27 = and v8,r344c19
r343c31 = and r343c27,r338c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r343c35 = and v8,r343c31
r343c39 = and r189c39,r338c43
r338c51 = or r343c35,r343c39
v960 = is_equal r106c67,v74
v962 = is_equal r106c67,r333c79
r338c55 = or v960,v962
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r343c59 = and v9,r338c55
r344c47 = not r338c55
r343c63 = and v9,r344c47
r343c67 = and r343c63,r338c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r343c71 = and v9,r343c67
r343c75 = and r189c43,r338c51
r338c59 = or r343c71,r343c75
v964 = is_equal r106c67,r106c27
v966 = is_equal r106c67,r336c31
r338c63 = or v964,v966
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r345c15 = and v10,r338c63
r344c75 = not r338c63
r345c19 = and v10,r344c75
r345c23 = and r345c19,r338c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r345c27 = and v10,r345c23
r345c31 = and r189c47,r338c59
r338c67 = or r345c27,r345c31
v968 = is_equal r106c67,r110c3
v970 = is_equal r106c67,r336c63
r338c71 = or v968,v970
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r345c51 = and v11,r338c71
r346c23 = not r338c71
r345c55 = and v11,r346c23
r345c59 = and r345c55,r338c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r345c63 = and v11,r345c59
r345c67 = and r189c51,r338c67
r338c75 = or r345c63,r345c67
v972 = is_equal r106c67,r340c3
v974 = is_equal r106c67,r340c19
r338c79 = or v972,v974
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r348c7 = and v12,r338c79
r346c51 = not r338c79
r348c11 = and v12,r346c51
r348c15 = and r348c11,r338c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r348c19 = and v12,r348c15
r348c23 = and r189c55,r338c75
r349c3 = or r348c19,r348c23
v976 = is_equal r106c67,r340c39
v978 = is_equal r106c67,r340c55
r349c7 = or v976,v978
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r348c43 = and v13,r349c7
r346c79 = not r349c7
r348c47 = and v13,r346c79
r348c51 = and r348c47,r349c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r348c55 = and v13,r348c51
r348c59 = and r189c59,r349c3
r349c11 = or r348c55,r348c59
v980 = is_equal r106c67,r340c75
v982 = is_equal r106c67,r342c11
r349c15 = or v980,v982
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r348c79 = and v14,r349c15
r350c27 = not r349c15
r351c3 = and v14,r350c27
r351c7 = and r351c3,r349c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r351c11 = and v14,r351c7
r351c15 = and r189c63,r349c11
r349c19 = or r351c11,r351c15
v984 = is_equal r106c67,r342c31
v986 = is_equal r106c67,r342c47
r349c23 = or v984,v986
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r351c35 = and v15,r349c23
r350c55 = not r349c23
r351c39 = and v15,r350c55
r351c43 = and r351c39,r349c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r351c47 = and v15,r351c43
r351c51 = and r189c67,r349c19
r349c27 = or r351c47,r351c51
v988 = is_equal r106c67,r342c67
v990 = is_equal r106c67,r344c3
r349c31 = or v988,v990
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r351c71 = and v16,r349c31
r352c3 = not r349c31
r351c75 = and v16,r352c3
r351c79 = and r351c75,r349c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r353c3 = and v16,r351c79
r353c7 = and r189c71,r349c27
r349c35 = or r353c3,r353c7
v992 = is_equal r106c11,v74
v994 = is_equal r106c11,r333c79
r349c39 = or v992,v994
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r353c27 = and v17,r349c39
r352c31 = not r349c39
r353c31 = and v17,r352c31
r353c35 = and r353c31,r349c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r353c39 = and v17,r353c35
r353c43 = and r189c75,r349c35
r349c43 = or r353c39,r353c43
v996 = is_equal r106c11,r106c27
v998 = is_equal r106c11,r336c31
r349c47 = or v996,v998
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r353c63 = and v18,r349c47
r352c59 = not r349c47
r353c67 = and v18,r352c59
r353c71 = and r353c67,r349c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r353c75 = and v18,r353c71
r353c79 = and r189c79,r349c43
r349c51 = or r353c75,r353c79
v1000 = is_equal r106c11,r110c3
v1002 = is_equal r106c11,r336c63
r349c55 = or v1000,v1002
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r354c19 = and v19,r349c55
r355c7 = not r349c55
r354c23 = and v19,r355c7
r354c27 = and r354c23,r349c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r354c31 = and v19,r354c27
r354c35 = and r195c3,r349c51
r349c59 = or r354c31,r354c35
v1004 = is_equal r106c11,r340c3
v1006 = is_equal r106c11,r340c19
r349c63 = or v1004,v1006
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r354c55 = and v20,r349c63
r355c35 = not r349c63
r354c59 = and v20,r355c35
r354c63 = and r354c59,r349c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r354c67 = and v20,r354c63
r354c71 = and r195c7,r349c59
r349c67 = or r354c67,r354c71
v1008 = is_equal r106c11,r340c39
v1010 = is_equal r106c11,r340c55
r349c71 = or v1008,v1010
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r356c11 = and v21,r349c71
r355c63 = not r349c71
r356c15 = and v21,r355c63
r356c19 = and r356c15,r349c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r356c23 = and v21,r356c19
r356c27 = and r195c11,r349c67
r349c75 = or r356c23,r356c27
v1012 = is_equal r106c11,r340c75
v1014 = is_equal r106c11,r342c11
r349c79 = or v1012,v1014
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r356c47 = and v22,r349c79
r358c11 = not r349c79
r356c51 = and v22,r358c11
r356c55 = and r356c51,r349c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r356c59 = and v22,r356c55
r356c63 = and r195c15,r349c75
r359c3 = or r356c59,r356c63
v1016 = is_equal r106c11,r342c31
v1018 = is_equal r106c11,r342c47
r359c7 = or v1016,v1018
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r360c3 = and v23,r359c7
r358c39 = not r359c7
r360c7 = and v23,r358c39
r360c11 = and r360c7,r359c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r360c15 = and v23,r360c11
r360c19 = and r195c19,r359c3
r359c11 = or r360c15,r360c19
v1020 = is_equal r106c11,r342c67
v1022 = is_equal r106c11,r344c3
r359c15 = or v1020,v1022
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r360c39 = and v24,r359c15
r358c67 = not r359c15
r360c43 = and v24,r358c67
r360c47 = and r360c43,r359c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r360c51 = and v24,r360c47
r360c55 = and r195c23,r359c11
r359c19 = or r360c51,r360c55
v423 = constant 3
r358c71 = sub v73,v423
v1024 = is_equal r358c71,v74
v1026 = is_equal r358c71,r333c79
r359c23 = or v1024,v1026
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r360c75 = and v25,r359c23
r361c19 = not r359c23
r360c79 = and v25,r361c19
r362c3 = and r360c79,r359c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r362c7 = and v25,r362c3
r362c11 = and r195c27,r359c19
r359c27 = or r362c7,r362c11
v1028 = is_equal r358c71,r106c27
v1030 = is_equal r358c71,r336c31
r359c31 = or v1028,v1030
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r362c31 = and v26,r359c31
r361c47 = not r359c31
r362c35 = and v26,r361c47
r362c39 = and r362c35,r359c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r362c43 = and v26,r362c39
r362c47 = and r195c31,r359c27
r359c35 = or r362c43,r362c47
v1032 = is_equal r358c71,r110c3
v1034 = is_equal r358c71,r336c63
r359c39 = or v1032,v1034
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r362c67 = and v27,r359c39
r361c75 = not r359c39
r362c71 = and v27,r361c75
r362c75 = and r362c71,r359c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r362c79 = and v27,r362c75
r363c3 = and r195c35,r359c35
r359c43 = or r362c79,r363c3
v1036 = is_equal r358c71,r340c3
v1038 = is_equal r358c71,r340c19
r359c47 = or v1036,v1038
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r363c23 = and v28,r359c47
r364c23 = not r359c47
r363c27 = and v28,r364c23
r363c31 = and r363c27,r359c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r363c35 = and v28,r363c31
r363c39 = and r195c39,r359c43
r359c51 = or r363c35,r363c39
v1040 = is_equal r358c71,r340c39
v1042 = is_equal r358c71,r340c55
r359c55 = or v1040,v1042
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r363c59 = and v29,r359c55
r364c51 = not r359c55
r363c63 = and v29,r364c51
r363c67 = and r363c63,r359c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r363c71 = and v29,r363c67
r363c75 = and r195c43,r359c51
r359c59 = or r363c71,r363c75
v1044 = is_equal r358c71,r340c75
v1046 = is_equal r358c71,r342c11
r359c63 = or v1044,v1046
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r365c15 = and v30,r359c63
r364c79 = not r359c63
r365c19 = and v30,r364c79
r365c23 = and r365c19,r359c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r365c27 = and v30,r365c23
r365c31 = and r195c47,r359c59
r359c67 = or r365c27,r365c31
v1048 = is_equal r358c71,r342c31
v1050 = is_equal r358c71,r342c47
r359c71 = or v1048,v1050
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r365c51 = and v31,r359c71
r366c27 = not r359c71
r365c55 = and v31,r366c27
r365c59 = and r365c55,r359c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r365c63 = and v31,r365c59
r365c67 = and r195c51,r359c67
r359c75 = or r365c63,r365c67
v1052 = is_equal r358c71,r342c67
v1054 = is_equal r358c71,r344c3
r359c79 = or v1052,v1054
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r368c7 = and v32,r359c79
r366c55 = not r359c79
r368c11 = and v32,r366c55
r368c15 = and r368c11,r359c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r368c19 = and v32,r368c15
r368c23 = and r195c55,r359c75
r369c3 = or r368c19,r368c23
v428 = constant 4
r366c59 = sub v73,v428
v1056 = is_equal r366c59,v74
v1058 = is_equal r366c59,r333c79
r369c7 = or v1056,v1058
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r368c43 = and v33,r369c7
r370c7 = not r369c7
r368c47 = and v33,r370c7
r368c51 = and r368c47,r369c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r368c55 = and v33,r368c51
r368c59 = and r195c59,r369c3
r369c11 = or r368c55,r368c59
v1060 = is_equal r366c59,r106c27
v1062 = is_equal r366c59,r336c31
r369c15 = or v1060,v1062
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r368c79 = and v34,r369c15
r370c35 = not r369c15
r371c3 = and v34,r370c35
r371c7 = and r371c3,r369c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r371c11 = and v34,r371c7
r371c15 = and r195c63,r369c11
r369c19 = or r371c11,r371c15
v1064 = is_equal r366c59,r110c3
v1066 = is_equal r366c59,r336c63
r369c23 = or v1064,v1066
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r371c35 = and v35,r369c23
r370c63 = not r369c23
r371c39 = and v35,r370c63
r371c43 = and r371c39,r369c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r371c47 = and v35,r371c43
r371c51 = and r195c67,r369c19
r369c27 = or r371c47,r371c51
v1068 = is_equal r366c59,r340c3
v1070 = is_equal r366c59,r340c19
r369c31 = or v1068,v1070
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r371c71 = and v36,r369c31
r372c11 = not r369c31
r371c75 = and v36,r372c11
r371c79 = and r371c75,r369c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r373c3 = and v36,r371c79
r373c7 = and r195c71,r369c27
r369c35 = or r373c3,r373c7
v1072 = is_equal r366c59,r340c39
v1074 = is_equal r366c59,r340c55
r369c39 = or v1072,v1074
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r373c27 = and v37,r369c39
r372c39 = not r369c39
r373c31 = and v37,r372c39
r373c35 = and r373c31,r369c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r373c39 = and v37,r373c35
r373c43 = and r195c75,r369c35
r369c43 = or r373c39,r373c43
v1076 = is_equal r366c59,r340c75
v1078 = is_equal r366c59,r342c11
r369c47 = or v1076,v1078
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r373c63 = and v38,r369c47
r372c67 = not r369c47
r373c67 = and v38,r372c67
r373c71 = and r373c67,r369c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r373c75 = and v38,r373c71
r373c79 = and r195c79,r369c43
r369c51 = or r373c75,r373c79
v1080 = is_equal r366c59,r342c31
v1082 = is_equal r366c59,r342c47
r369c55 = or v1080,v1082
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r374c19 = and v39,r369c55
r375c15 = not r369c55
r374c23 = and v39,r375c15
r374c27 = and r374c23,r369c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r374c31 = and v39,r374c27
r374c35 = and r199c3,r369c51
r369c59 = or r374c31,r374c35
v1084 = is_equal r366c59,r342c67
v1086 = is_equal r366c59,r344c3
r369c63 = or v1084,v1086
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r374c55 = and v40,r369c63
r375c43 = not r369c63
r374c59 = and v40,r375c43
r374c63 = and r374c59,r369c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r374c67 = and v40,r374c63
r374c71 = and r199c7,r369c59
r369c67 = or r374c67,r374c71
v433 = constant 5
r375c47 = sub v73,v433
v1088 = is_equal r375c47,v74
v1090 = is_equal r375c47,r333c79
r369c71 = or v1088,v1090
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r376c11 = and v41,r369c71
r375c75 = not r369c71
r376c15 = and v41,r375c75
r376c19 = and r376c15,r369c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r376c23 = and v41,r376c19
r376c27 = and r199c11,r369c67
r369c75 = or r376c23,r376c27
v1092 = is_equal r375c47,r106c27
v1094 = is_equal r375c47,r336c31
r369c79 = or v1092,v1094
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r376c47 = and v42,r369c79
r378c23 = not r369c79
r376c51 = and v42,r378c23
r376c55 = and r376c51,r369c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r376c59 = and v42,r376c55
r376c63 = and r199c15,r369c75
r379c3 = or r376c59,r376c63
v1096 = is_equal r375c47,r110c3
v1098 = is_equal r375c47,r336c63
r379c7 = or v1096,v1098
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r380c3 = and v43,r379c7
r378c51 = not r379c7
r380c7 = and v43,r378c51
r380c11 = and r380c7,r379c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r380c15 = and v43,r380c11
r380c19 = and r199c19,r379c3
r379c11 = or r380c15,r380c19
v1100 = is_equal r375c47,r340c3
v1102 = is_equal r375c47,r340c19
r379c15 = or v1100,v1102
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r380c39 = and v44,r379c15
r378c79 = not r379c15
r380c43 = and v44,r378c79
r380c47 = and r380c43,r379c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r380c51 = and v44,r380c47
r380c55 = and r199c23,r379c11
r379c19 = or r380c51,r380c55
v1104 = is_equal r375c47,r340c39
v1106 = is_equal r375c47,r340c55
r379c23 = or v1104,v1106
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r380c75 = and v45,r379c23
r381c27 = not r379c23
r380c79 = and v45,r381c27
r382c3 = and r380c79,r379c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r382c7 = and v45,r382c3
r382c11 = and r199c27,r379c19
r379c27 = or r382c7,r382c11
v1108 = is_equal r375c47,r340c75
v1110 = is_equal r375c47,r342c11
r379c31 = or v1108,v1110
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r382c31 = and v46,r379c31
r381c55 = not r379c31
r382c35 = and v46,r381c55
r382c39 = and r382c35,r379c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r382c43 = and v46,r382c39
r382c47 = and r199c31,r379c27
r379c35 = or r382c43,r382c47
v1112 = is_equal r375c47,r342c31
v1114 = is_equal r375c47,r342c47
r379c39 = or v1112,v1114
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r382c67 = and v47,r379c39
r383c3 = not r379c39
r382c71 = and v47,r383c3
r382c75 = and r382c71,r379c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r382c79 = and v47,r382c75
r384c3 = and r199c35,r379c35
r379c43 = or r382c79,r384c3
v1116 = is_equal r375c47,r342c67
v1118 = is_equal r375c47,r344c3
r379c47 = or v1116,v1118
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r384c23 = and v48,r379c47
r383c31 = not r379c47
r384c27 = and v48,r383c31
r384c31 = and r384c27,r379c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r384c35 = and v48,r384c31
r384c39 = and r199c39,r379c43
r379c51 = or r384c35,r384c39
v438 = constant 6
r383c35 = sub v73,v438
v1120 = is_equal r383c35,v74
v1122 = is_equal r383c35,r333c79
r379c55 = or v1120,v1122
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r384c59 = and v49,r379c55
r383c63 = not r379c55
r384c63 = and v49,r383c63
r384c67 = and r384c63,r379c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r384c71 = and v49,r384c67
r384c75 = and r199c43,r379c51
r379c59 = or r384c71,r384c75
v1124 = is_equal r383c35,r106c27
v1126 = is_equal r383c35,r336c31
r379c63 = or v1124,v1126
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r385c15 = and v50,r379c63
r386c11 = not r379c63
r385c19 = and v50,r386c11
r385c23 = and r385c19,r379c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r385c27 = and v50,r385c23
r385c31 = and r199c47,r379c59
r379c67 = or r385c27,r385c31
v1128 = is_equal r383c35,r110c3
v1130 = is_equal r383c35,r336c63
r379c71 = or v1128,v1130
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r385c51 = and v51,r379c71
r386c39 = not r379c71
r385c55 = and v51,r386c39
r385c59 = and r385c55,r379c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r385c63 = and v51,r385c59
r385c67 = and r199c51,r379c67
r379c75 = or r385c63,r385c67
v1132 = is_equal r383c35,r340c3
v1134 = is_equal r383c35,r340c19
r379c79 = or v1132,v1134
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r388c7 = and v52,r379c79
r386c67 = not r379c79
r388c11 = and v52,r386c67
r388c15 = and r388c11,r379c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r388c19 = and v52,r388c15
r388c23 = and r199c55,r379c75
r389c3 = or r388c19,r388c23
v1136 = is_equal r383c35,r340c39
v1138 = is_equal r383c35,r340c55
r389c7 = or v1136,v1138
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r388c43 = and v53,r389c7
r390c15 = not r389c7
r388c47 = and v53,r390c15
r388c51 = and r388c47,r389c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r388c55 = and v53,r388c51
r388c59 = and r199c59,r389c3
r389c11 = or r388c55,r388c59
v1140 = is_equal r383c35,r340c75
v1142 = is_equal r383c35,r342c11
r389c15 = or v1140,v1142
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r388c79 = and v54,r389c15
r390c43 = not r389c15
r391c3 = and v54,r390c43
r391c7 = and r391c3,r389c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r391c11 = and v54,r391c7
r391c15 = and r199c63,r389c11
r389c19 = or r391c11,r391c15
v1144 = is_equal r383c35,r342c31
v1146 = is_equal r383c35,r342c47
r389c23 = or v1144,v1146
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r391c35 = and v55,r389c23
r390c71 = not r389c23
r391c39 = and v55,r390c71
r391c43 = and r391c39,r389c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r391c47 = and v55,r391c43
r391c51 = and r199c67,r389c19
r389c27 = or r391c47,r391c51
v1148 = is_equal r383c35,r342c67
v1150 = is_equal r383c35,r344c3
r389c31 = or v1148,v1150
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r391c71 = and v56,r389c31
r392c19 = not r389c31
r391c75 = and v56,r392c19
r391c79 = and r391c75,r389c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r393c3 = and v56,r391c79
r393c7 = and r199c71,r389c27
r389c35 = or r393c3,r393c7
v443 = constant 7
r392c23 = sub v73,v443
v1152 = is_equal r392c23,v74
v1154 = is_equal r392c23,r333c79
r389c39 = or v1152,v1154
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r393c27 = and v57,r389c39
r392c51 = not r389c39
r393c31 = and v57,r392c51
r393c35 = and r393c31,r389c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r393c39 = and v57,r393c35
r393c43 = and r199c75,r389c35
r389c43 = or r393c39,r393c43
v1156 = is_equal r392c23,r106c27
v1158 = is_equal r392c23,r336c31
r389c47 = or v1156,v1158
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r393c63 = and v58,r389c47
r392c79 = not r389c47
r393c67 = and v58,r392c79
r393c71 = and r393c67,r389c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r393c75 = and v58,r393c71
r393c79 = and r199c79,r389c43
r389c51 = or r393c75,r393c79
v1160 = is_equal r392c23,r110c3
v1162 = is_equal r392c23,r336c63
r389c55 = or v1160,v1162
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r395c19 = and v59,r389c55
r394c27 = not r389c55
r395c23 = and v59,r394c27
r395c27 = and r395c23,r389c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r395c31 = and v59,r395c27
r395c35 = and r204c3,r389c51
r389c59 = or r395c31,r395c35
v1164 = is_equal r392c23,r340c3
v1166 = is_equal r392c23,r340c19
r389c63 = or v1164,v1166
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r395c55 = and v60,r389c63
r394c55 = not r389c63
r395c59 = and v60,r394c55
r395c63 = and r395c59,r389c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r395c67 = and v60,r395c63
r395c71 = and r204c7,r389c59
r389c67 = or r395c67,r395c71
v1168 = is_equal r392c23,r340c39
v1170 = is_equal r392c23,r340c55
r389c71 = or v1168,v1170
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r396c11 = and v61,r389c71
r397c3 = not r389c71
r396c15 = and v61,r397c3
r396c19 = and r396c15,r389c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r396c23 = and v61,r396c19
r396c27 = and r204c11,r389c67
r389c75 = or r396c23,r396c27
v1172 = is_equal r392c23,r340c75
v1174 = is_equal r392c23,r342c11
r389c79 = or v1172,v1174
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r396c47 = and v62,r389c79
r397c31 = not r389c79
r396c51 = and v62,r397c31
r396c55 = and r396c51,r389c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r396c59 = and v62,r396c55
r396c63 = and r204c15,r389c75
r399c3 = or r396c59,r396c63
v1176 = is_equal r392c23,r342c31
v1178 = is_equal r392c23,r342c47
r399c7 = or v1176,v1178
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r400c3 = and v63,r399c7
r397c59 = not r399c7
r400c7 = and v63,r397c59
r400c11 = and r400c7,r399c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r400c15 = and v63,r400c11
r400c19 = and r204c19,r399c3
r399c11 = or r400c15,r400c19
v1180 = is_equal r392c23,r342c67
v1182 = is_equal r392c23,r344c3
r399c15 = or v1180,v1182
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r400c39 = and v64,r399c15
r401c7 = not r399c15
r400c43 = and v64,r401c7
r400c47 = and r400c43,r399c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r400c51 = and v64,r400c47
r400c55 = and r204c23,r399c11
r399c19 = or r400c51,r400c55
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r399c19,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1184 = is_equal v75,v76
v1 = constant 0
r401c23 = sub v1,v76
v1186 = is_equal v75,r401c23
r399c23 = or v1184,v1186
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r400c75 = and v0,r399c23
r401c39 = not r399c23
r400c79 = and v0,r401c39
r402c3 = and v0,r400c79
r399c27 = or r402c3,r189c11
v1188 = is_equal v75,r132c51
v87 = constant 1
r401c55 = sub v87,v76
v1190 = is_equal v75,r401c55
r399c31 = or v1188,v1190
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r402c23 = and v2,r399c31
r401c71 = not r399c31
r402c27 = and v2,r401c71
r402c31 = and r402c27,r399c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r402c35 = and v2,r402c31
r402c39 = and r189c15,r399c27
r399c35 = or r402c35,r402c39
v1192 = is_equal v75,r135c27
v84 = constant 2
r403c7 = sub v84,v76
v1194 = is_equal v75,r403c7
r399c39 = or v1192,v1194
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r402c59 = and v3,r399c39
r403c23 = not r399c39
r402c63 = and v3,r403c23
r402c67 = and r402c63,r399c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r402c71 = and v3,r402c67
r402c75 = and r189c19,r399c35
r399c43 = or r402c71,r402c75
v423 = constant 3
r403c27 = sub v76,v423
v1196 = is_equal v75,r403c27
v423 = constant 3
r403c43 = sub v423,v76
v1198 = is_equal v75,r403c43
r399c47 = or v1196,v1198
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r404c15 = and v4,r399c47
r403c59 = not r399c47
r404c19 = and v4,r403c59
r404c23 = and r404c19,r399c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r404c27 = and v4,r404c23
r404c31 = and r189c23,r399c43
r399c51 = or r404c27,r404c31
v428 = constant 4
r403c63 = sub v76,v428
v1200 = is_equal v75,r403c63
v428 = constant 4
r403c79 = sub v428,v76
v1202 = is_equal v75,r403c79
r399c55 = or v1200,v1202
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r404c51 = and v5,r399c55
r405c15 = not r399c55
r404c55 = and v5,r405c15
r404c59 = and r404c55,r399c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r404c63 = and v5,r404c59
r404c67 = and r189c27,r399c51
r399c59 = or r404c63,r404c67
v433 = constant 5
r405c19 = sub v76,v433
v1204 = is_equal v75,r405c19
v433 = constant 5
r405c35 = sub v433,v76
v1206 = is_equal v75,r405c35
r399c63 = or v1204,v1206
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r406c7 = and v6,r399c63
r405c51 = not r399c63
r406c11 = and v6,r405c51
r406c15 = and r406c11,r399c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r406c19 = and v6,r406c15
r406c23 = and r189c31,r399c59
r399c67 = or r406c19,r406c23
v438 = constant 6
r405c55 = sub v76,v438
v1208 = is_equal v75,r405c55
v438 = constant 6
r405c71 = sub v438,v76
v1210 = is_equal v75,r405c71
r399c71 = or v1208,v1210
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r406c43 = and v7,r399c71
r407c7 = not r399c71
r406c47 = and v7,r407c7
r406c51 = and r406c47,r399c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r406c55 = and v7,r406c51
r406c59 = and r189c35,r399c67
r399c75 = or r406c55,r406c59
v443 = constant 7
r407c11 = sub v76,v443
v1212 = is_equal v75,r407c11
v443 = constant 7
r407c27 = sub v443,v76
v1214 = is_equal v75,r407c27
r399c79 = or v1212,v1214
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r406c79 = and v8,r399c79
r407c43 = not r399c79
r409c3 = and v8,r407c43
r409c7 = and r409c3,r399c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r409c11 = and v8,r409c7
r409c15 = and r189c39,r399c75
r410c3 = or r409c11,r409c15
v1216 = is_equal r135c11,v76
v1218 = is_equal r135c11,r401c23
r410c7 = or v1216,v1218
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r409c35 = and v9,r410c7
r407c71 = not r410c7
r409c39 = and v9,r407c71
r409c43 = and r409c39,r410c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r409c47 = and v9,r409c43
r409c51 = and r189c43,r410c3
r410c11 = or r409c47,r409c51
v1220 = is_equal r135c11,r132c51
v1222 = is_equal r135c11,r401c55
r410c15 = or v1220,v1222
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r409c71 = and v10,r410c15
r411c19 = not r410c15
r409c75 = and v10,r411c19
r409c79 = and r409c75,r410c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r412c3 = and v10,r409c79
r412c7 = and r189c47,r410c11
r410c19 = or r412c3,r412c7
v1224 = is_equal r135c11,r135c27
v1226 = is_equal r135c11,r403c7
r410c23 = or v1224,v1226
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r412c27 = and v11,r410c23
r411c47 = not r410c23
r412c31 = and v11,r411c47
r412c35 = and r412c31,r410c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r412c39 = and v11,r412c35
r412c43 = and r189c51,r410c19
r410c27 = or r412c39,r412c43
v1228 = is_equal r135c11,r403c27
v1230 = is_equal r135c11,r403c43
r410c31 = or v1228,v1230
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r412c63 = and v12,r410c31
r411c75 = not r410c31
r412c67 = and v12,r411c75
r412c71 = and r412c67,r410c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r412c75 = and v12,r412c71
r412c79 = and r189c55,r410c27
r410c35 = or r412c75,r412c79
v1232 = is_equal r135c11,r403c63
v1234 = is_equal r135c11,r403c79
r410c39 = or v1232,v1234
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r414c19 = and v13,r410c39
r413c23 = not r410c39
r414c23 = and v13,r413c23
r414c27 = and r414c23,r410c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r414c31 = and v13,r414c27
r414c35 = and r189c59,r410c35
r410c43 = or r414c31,r414c35
v1236 = is_equal r135c11,r405c19
v1238 = is_equal r135c11,r405c35
r410c47 = or v1236,v1238
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r414c55 = and v14,r410c47
r413c51 = not r410c47
r414c59 = and v14,r413c51
r414c63 = and r414c59,r410c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r414c67 = and v14,r414c63
r414c71 = and r189c63,r410c43
r410c51 = or r414c67,r414c71
v1240 = is_equal r135c11,r405c55
v1242 = is_equal r135c11,r405c71
r410c55 = or v1240,v1242
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r415c11 = and v15,r410c55
r413c79 = not r410c55
r415c15 = and v15,r413c79
r415c19 = and r415c15,r410c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r415c23 = and v15,r415c19
r415c27 = and r189c67,r410c51
r410c59 = or r415c23,r415c27
v1244 = is_equal r135c11,r407c11
v1246 = is_equal r135c11,r407c27
r410c63 = or v1244,v1246
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r415c47 = and v16,r410c63
r416c27 = not r410c63
r415c51 = and v16,r416c27
r415c55 = and r415c51,r410c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r415c59 = and v16,r415c55
r415c63 = and r189c71,r410c59
r410c67 = or r415c59,r415c63
v1248 = is_equal r132c35,v76
v1250 = is_equal r132c35,r401c23
r410c71 = or v1248,v1250
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r417c3 = and v17,r410c71
r416c55 = not r410c71
r417c7 = and v17,r416c55
r417c11 = and r417c7,r410c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r417c15 = and v17,r417c11
r417c19 = and r189c75,r410c67
r410c75 = or r417c15,r417c19
v1252 = is_equal r132c35,r132c51
v1254 = is_equal r132c35,r401c55
r410c79 = or v1252,v1254
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r417c39 = and v18,r410c79
r419c3 = not r410c79
r417c43 = and v18,r419c3
r417c47 = and r417c43,r410c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r417c51 = and v18,r417c47
r417c55 = and r189c79,r410c75
r420c3 = or r417c51,r417c55
v1256 = is_equal r132c35,r135c27
v1258 = is_equal r132c35,r403c7
r420c7 = or v1256,v1258
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r417c75 = and v19,r420c7
r419c31 = not r420c7
r417c79 = and v19,r419c31
r421c3 = and r417c79,r420c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r421c7 = and v19,r421c3
r421c11 = and r195c3,r420c3
r420c11 = or r421c7,r421c11
v1260 = is_equal r132c35,r403c27
v1262 = is_equal r132c35,r403c43
r420c15 = or v1260,v1262
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r421c31 = and v20,r420c15
r419c59 = not r420c15
r421c35 = and v20,r419c59
r421c39 = and r421c35,r420c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r421c43 = and v20,r421c39
r421c47 = and r195c7,r420c11
r420c19 = or r421c43,r421c47
v1264 = is_equal r132c35,r403c63
v1266 = is_equal r132c35,r403c79
r420c23 = or v1264,v1266
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r421c67 = and v21,r420c23
r422c7 = not r420c23
r421c71 = and v21,r422c7
r421c75 = and r421c71,r420c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r421c79 = and v21,r421c75
r423c3 = and r195c11,r420c19
r420c27 = or r421c79,r423c3
v1268 = is_equal r132c35,r405c19
v1270 = is_equal r132c35,r405c35
r420c31 = or v1268,v1270
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r423c23 = and v22,r420c31
r422c35 = not r420c31
r423c27 = and v22,r422c35
r423c31 = and r423c27,r420c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r423c35 = and v22,r423c31
r423c39 = and r195c15,r420c27
r420c35 = or r423c35,r423c39
v1272 = is_equal r132c35,r405c55
v1274 = is_equal r132c35,r405c71
r420c39 = or v1272,v1274
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r423c59 = and v23,r420c39
r422c63 = not r420c39
r423c63 = and v23,r422c63
r423c67 = and r423c63,r420c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r423c71 = and v23,r423c67
r423c75 = and r195c19,r420c35
r420c43 = or r423c71,r423c75
v1276 = is_equal r132c35,r407c11
v1278 = is_equal r132c35,r407c27
r420c47 = or v1276,v1278
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r424c15 = and v24,r420c47
r425c11 = not r420c47
r424c19 = and v24,r425c11
r424c23 = and r424c19,r420c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r424c27 = and v24,r424c23
r424c31 = and r195c23,r420c43
r420c51 = or r424c27,r424c31
v423 = constant 3
r425c15 = sub v75,v423
v1280 = is_equal r425c15,v76
v1282 = is_equal r425c15,r401c23
r420c55 = or v1280,v1282
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r424c51 = and v25,r420c55
r425c43 = not r420c55
r424c55 = and v25,r425c43
r424c59 = and r424c55,r420c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r424c63 = and v25,r424c59
r424c67 = and r195c27,r420c51
r420c59 = or r424c63,r424c67
v1284 = is_equal r425c15,r132c51
v1286 = is_equal r425c15,r401c55
r420c63 = or v1284,v1286
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r426c7 = and v26,r420c63
r425c71 = not r420c63
r426c11 = and v26,r425c71
r426c15 = and r426c11,r420c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r426c19 = and v26,r426c15
r426c23 = and r195c31,r420c59
r420c67 = or r426c19,r426c23
v1288 = is_equal r425c15,r135c27
v1290 = is_equal r425c15,r403c7
r420c71 = or v1288,v1290
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r426c43 = and v27,r420c71
r427c19 = not r420c71
r426c47 = and v27,r427c19
r426c51 = and r426c47,r420c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r426c55 = and v27,r426c51
r426c59 = and r195c35,r420c67
r420c75 = or r426c55,r426c59
v1292 = is_equal r425c15,r403c27
v1294 = is_equal r425c15,r403c43
r420c79 = or v1292,v1294
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r426c79 = and v28,r420c79
r427c47 = not r420c79
r429c3 = and v28,r427c47
r429c7 = and r429c3,r420c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r429c11 = and v28,r429c7
r429c15 = and r195c39,r420c75
r430c3 = or r429c11,r429c15
v1296 = is_equal r425c15,r403c63
v1298 = is_equal r425c15,r403c79
r430c7 = or v1296,v1298
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r429c35 = and v29,r430c7
r427c75 = not r430c7
r429c39 = and v29,r427c75
r429c43 = and r429c39,r430c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r429c47 = and v29,r429c43
r429c51 = and r195c43,r430c3
r430c11 = or r429c47,r429c51
v1300 = is_equal r425c15,r405c19
v1302 = is_equal r425c15,r405c35
r430c15 = or v1300,v1302
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r429c71 = and v30,r430c15
r431c23 = not r430c15
r429c75 = and v30,r431c23
r429c79 = and r429c75,r430c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r432c3 = and v30,r429c79
r432c7 = and r195c47,r430c11
r430c19 = or r432c3,r432c7
v1304 = is_equal r425c15,r405c55
v1306 = is_equal r425c15,r405c71
r430c23 = or v1304,v1306
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r432c27 = and v31,r430c23
r431c51 = not r430c23
r432c31 = and v31,r431c51
r432c35 = and r432c31,r430c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r432c39 = and v31,r432c35
r432c43 = and r195c51,r430c19
r430c27 = or r432c39,r432c43
v1308 = is_equal r425c15,r407c11
v1310 = is_equal r425c15,r407c27
r430c31 = or v1308,v1310
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r432c63 = and v32,r430c31
r431c79 = not r430c31
r432c67 = and v32,r431c79
r432c71 = and r432c67,r430c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r432c75 = and v32,r432c71
r432c79 = and r195c55,r430c27
r430c35 = or r432c75,r432c79
v428 = constant 4
r433c3 = sub v75,v428
v1312 = is_equal r433c3,v76
v1314 = is_equal r433c3,r401c23
r430c39 = or v1312,v1314
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r434c19 = and v33,r430c39
r433c31 = not r430c39
r434c23 = and v33,r433c31
r434c27 = and r434c23,r430c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r434c31 = and v33,r434c27
r434c35 = and r195c59,r430c35
r430c43 = or r434c31,r434c35
v1316 = is_equal r433c3,r132c51
v1318 = is_equal r433c3,r401c55
r430c47 = or v1316,v1318
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r434c55 = and v34,r430c47
r433c59 = not r430c47
r434c59 = and v34,r433c59
r434c63 = and r434c59,r430c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r434c67 = and v34,r434c63
r434c71 = and r195c63,r430c43
r430c51 = or r434c67,r434c71
v1320 = is_equal r433c3,r135c27
v1322 = is_equal r433c3,r403c7
r430c55 = or v1320,v1322
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r435c11 = and v35,r430c55
r436c7 = not r430c55
r435c15 = and v35,r436c7
r435c19 = and r435c15,r430c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r435c23 = and v35,r435c19
r435c27 = and r195c67,r430c51
r430c59 = or r435c23,r435c27
v1324 = is_equal r433c3,r403c27
v1326 = is_equal r433c3,r403c43
r430c63 = or v1324,v1326
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r435c47 = and v36,r430c63
r436c35 = not r430c63
r435c51 = and v36,r436c35
r435c55 = and r435c51,r430c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r435c59 = and v36,r435c55
r435c63 = and r195c71,r430c59
r430c67 = or r435c59,r435c63
v1328 = is_equal r433c3,r403c63
v1330 = is_equal r433c3,r403c79
r430c71 = or v1328,v1330
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r437c3 = and v37,r430c71
r436c63 = not r430c71
r437c7 = and v37,r436c63
r437c11 = and r437c7,r430c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r437c15 = and v37,r437c11
r437c19 = and r195c75,r430c67
r430c75 = or r437c15,r437c19
v1332 = is_equal r433c3,r405c19
v1334 = is_equal r433c3,r405c35
r430c79 = or v1332,v1334
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r437c39 = and v38,r430c79
r439c11 = not r430c79
r437c43 = and v38,r439c11
r437c47 = and r437c43,r430c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r437c51 = and v38,r437c47
r437c55 = and r195c79,r430c75
r440c3 = or r437c51,r437c55
v1336 = is_equal r433c3,r405c55
v1338 = is_equal r433c3,r405c71
r440c7 = or v1336,v1338
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r437c75 = and v39,r440c7
r439c39 = not r440c7
r437c79 = and v39,r439c39
r441c3 = and r437c79,r440c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r441c7 = and v39,r441c3
r441c11 = and r199c3,r440c3
r440c11 = or r441c7,r441c11
v1340 = is_equal r433c3,r407c11
v1342 = is_equal r433c3,r407c27
r440c15 = or v1340,v1342
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r441c31 = and v40,r440c15
r439c67 = not r440c15
r441c35 = and v40,r439c67
r441c39 = and r441c35,r440c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r441c43 = and v40,r441c39
r441c47 = and r199c7,r440c11
r440c19 = or r441c43,r441c47
v433 = constant 5
r439c71 = sub v75,v433
v1344 = is_equal r439c71,v76
v1346 = is_equal r439c71,r401c23
r440c23 = or v1344,v1346
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r441c67 = and v41,r440c23
r442c19 = not r440c23
r441c71 = and v41,r442c19
r441c75 = and r441c71,r440c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r441c79 = and v41,r441c75
r443c3 = and r199c11,r440c19
r440c27 = or r441c79,r443c3
v1348 = is_equal r439c71,r132c51
v1350 = is_equal r439c71,r401c55
r440c31 = or v1348,v1350
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r443c23 = and v42,r440c31
r442c47 = not r440c31
r443c27 = and v42,r442c47
r443c31 = and r443c27,r440c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r443c35 = and v42,r443c31
r443c39 = and r199c15,r440c27
r440c35 = or r443c35,r443c39
v1352 = is_equal r439c71,r135c27
v1354 = is_equal r439c71,r403c7
r440c39 = or v1352,v1354
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r443c59 = and v43,r440c39
r442c75 = not r440c39
r443c63 = and v43,r442c75
r443c67 = and r443c63,r440c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r443c71 = and v43,r443c67
r443c75 = and r199c19,r440c35
r440c43 = or r443c71,r443c75
v1356 = is_equal r439c71,r403c27
v1358 = is_equal r439c71,r403c43
r440c47 = or v1356,v1358
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r445c15 = and v44,r440c47
r444c23 = not r440c47
r445c19 = and v44,r444c23
r445c23 = and r445c19,r440c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r445c27 = and v44,r445c23
r445c31 = and r199c23,r440c43
r440c51 = or r445c27,r445c31
v1360 = is_equal r439c71,r403c63
v1362 = is_equal r439c71,r403c79
r440c55 = or v1360,v1362
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r445c51 = and v45,r440c55
r444c51 = not r440c55
r445c55 = and v45,r444c51
r445c59 = and r445c55,r440c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r445c63 = and v45,r445c59
r445c67 = and r199c27,r440c51
r440c59 = or r445c63,r445c67
v1364 = is_equal r439c71,r405c19
v1366 = is_equal r439c71,r405c35
r440c63 = or v1364,v1366
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r446c7 = and v46,r440c63
r444c79 = not r440c63
r446c11 = and v46,r444c79
r446c15 = and r446c11,r440c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r446c19 = and v46,r446c15
r446c23 = and r199c31,r440c59
r440c67 = or r446c19,r446c23
v1368 = is_equal r439c71,r405c55
v1370 = is_equal r439c71,r405c71
r440c71 = or v1368,v1370
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r446c43 = and v47,r440c71
r447c27 = not r440c71
r446c47 = and v47,r447c27
r446c51 = and r446c47,r440c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r446c55 = and v47,r446c51
r446c59 = and r199c35,r440c67
r440c75 = or r446c55,r446c59
v1372 = is_equal r439c71,r407c11
v1374 = is_equal r439c71,r407c27
r440c79 = or v1372,v1374
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r446c79 = and v48,r440c79
r447c55 = not r440c79
r449c3 = and v48,r447c55
r449c7 = and r449c3,r440c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r449c11 = and v48,r449c7
r449c15 = and r199c39,r440c75
r450c3 = or r449c11,r449c15
v438 = constant 6
r447c59 = sub v75,v438
v1376 = is_equal r447c59,v76
v1378 = is_equal r447c59,r401c23
r450c7 = or v1376,v1378
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r449c35 = and v49,r450c7
r451c7 = not r450c7
r449c39 = and v49,r451c7
r449c43 = and r449c39,r450c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r449c47 = and v49,r449c43
r449c51 = and r199c43,r450c3
r450c11 = or r449c47,r449c51
v1380 = is_equal r447c59,r132c51
v1382 = is_equal r447c59,r401c55
r450c15 = or v1380,v1382
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r449c71 = and v50,r450c15
r451c35 = not r450c15
r449c75 = and v50,r451c35
r449c79 = and r449c75,r450c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r452c3 = and v50,r449c79
r452c7 = and r199c47,r450c11
r450c19 = or r452c3,r452c7
v1384 = is_equal r447c59,r135c27
v1386 = is_equal r447c59,r403c7
r450c23 = or v1384,v1386
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r452c27 = and v51,r450c23
r451c63 = not r450c23
r452c31 = and v51,r451c63
r452c35 = and r452c31,r450c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r452c39 = and v51,r452c35
r452c43 = and r199c51,r450c19
r450c27 = or r452c39,r452c43
v1388 = is_equal r447c59,r403c27
v1390 = is_equal r447c59,r403c43
r450c31 = or v1388,v1390
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r452c63 = and v52,r450c31
r453c11 = not r450c31
r452c67 = and v52,r453c11
r452c71 = and r452c67,r450c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r452c75 = and v52,r452c71
r452c79 = and r199c55,r450c27
r450c35 = or r452c75,r452c79
v1392 = is_equal r447c59,r403c63
v1394 = is_equal r447c59,r403c79
r450c39 = or v1392,v1394
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r454c19 = and v53,r450c39
r453c39 = not r450c39
r454c23 = and v53,r453c39
r454c27 = and r454c23,r450c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r454c31 = and v53,r454c27
r454c35 = and r199c59,r450c35
r450c43 = or r454c31,r454c35
v1396 = is_equal r447c59,r405c19
v1398 = is_equal r447c59,r405c35
r450c47 = or v1396,v1398
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r454c55 = and v54,r450c47
r453c67 = not r450c47
r454c59 = and v54,r453c67
r454c63 = and r454c59,r450c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r454c67 = and v54,r454c63
r454c71 = and r199c63,r450c43
r450c51 = or r454c67,r454c71
v1400 = is_equal r447c59,r405c55
v1402 = is_equal r447c59,r405c71
r450c55 = or v1400,v1402
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r456c11 = and v55,r450c55
r455c15 = not r450c55
r456c15 = and v55,r455c15
r456c19 = and r456c15,r450c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r456c23 = and v55,r456c19
r456c27 = and r199c67,r450c51
r450c59 = or r456c23,r456c27
v1404 = is_equal r447c59,r407c11
v1406 = is_equal r447c59,r407c27
r450c63 = or v1404,v1406
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r456c47 = and v56,r450c63
r455c43 = not r450c63
r456c51 = and v56,r455c43
r456c55 = and r456c51,r450c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r456c59 = and v56,r456c55
r456c63 = and r199c71,r450c59
r450c67 = or r456c59,r456c63
v443 = constant 7
r455c47 = sub v75,v443
v1408 = is_equal r455c47,v76
v1410 = is_equal r455c47,r401c23
r450c71 = or v1408,v1410
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r457c3 = and v57,r450c71
r455c75 = not r450c71
r457c7 = and v57,r455c75
r457c11 = and r457c7,r450c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r457c15 = and v57,r457c11
r457c19 = and r199c75,r450c67
r450c75 = or r457c15,r457c19
v1412 = is_equal r455c47,r132c51
v1414 = is_equal r455c47,r401c55
r450c79 = or v1412,v1414
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r457c39 = and v58,r450c79
r459c23 = not r450c79
r457c43 = and v58,r459c23
r457c47 = and r457c43,r450c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r457c51 = and v58,r457c47
r457c55 = and r199c79,r450c75
r460c3 = or r457c51,r457c55
v1416 = is_equal r455c47,r135c27
v1418 = is_equal r455c47,r403c7
r460c7 = or v1416,v1418
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r457c75 = and v59,r460c7
r459c51 = not r460c7
r457c79 = and v59,r459c51
r461c3 = and r457c79,r460c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r461c7 = and v59,r461c3
r461c11 = and r204c3,r460c3
r460c11 = or r461c7,r461c11
v1420 = is_equal r455c47,r403c27
v1422 = is_equal r455c47,r403c43
r460c15 = or v1420,v1422
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r461c31 = and v60,r460c15
r459c79 = not r460c15
r461c35 = and v60,r459c79
r461c39 = and r461c35,r460c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r461c43 = and v60,r461c39
r461c47 = and r204c7,r460c11
r460c19 = or r461c43,r461c47
v1424 = is_equal r455c47,r403c63
v1426 = is_equal r455c47,r403c79
r460c23 = or v1424,v1426
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r461c67 = and v61,r460c23
r462c27 = not r460c23
r461c71 = and v61,r462c27
r461c75 = and r461c71,r460c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r461c79 = and v61,r461c75
r463c3 = and r204c11,r460c19
r460c27 = or r461c79,r463c3
v1428 = is_equal r455c47,r405c19
v1430 = is_equal r455c47,r405c35
r460c31 = or v1428,v1430
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r463c23 = and v62,r460c31
r462c55 = not r460c31
r463c27 = and v62,r462c55
r463c31 = and r463c27,r460c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r463c35 = and v62,r463c31
r463c39 = and r204c15,r460c27
r460c35 = or r463c35,r463c39
v1432 = is_equal r455c47,r405c55
v1434 = is_equal r455c47,r405c71
r460c39 = or v1432,v1434
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r463c59 = and v63,r460c39
r464c3 = not r460c39
r463c63 = and v63,r464c3
r463c67 = and r463c63,r460c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r463c71 = and v63,r463c67
r463c75 = and r204c19,r460c35
r460c43 = or r463c71,r463c75
v1436 = is_equal r455c47,r407c11
v1438 = is_equal r455c47,r407c27
r460c47 = or v1436,v1438
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r465c15 = and v64,r460c47
r464c31 = not r460c47
r465c19 = and v64,r464c31
r465c23 = and r465c19,r460c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r465c27 = and v64,r465c23
r465c31 = and r204c23,r460c43
r460c51 = or r465c27,r465c31
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r460c51,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1440 = is_equal v77,v78
v1 = constant 0
r464c47 = sub v1,v78
v1442 = is_equal v77,r464c47
r460c55 = or v1440,v1442
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r465c51 = and v0,r460c55
r464c63 = not r460c55
r465c55 = and v0,r464c63
r465c59 = and v0,r465c55
r460c59 = or r465c59,r189c11
v1444 = is_equal v77,r158c75
v87 = constant 1
r464c79 = sub v87,v78
v1446 = is_equal v77,r464c79
r460c63 = or v1444,v1446
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r465c79 = and v2,r460c63
r466c15 = not r460c63
r467c3 = and v2,r466c15
r467c7 = and r467c3,r460c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r467c11 = and v2,r467c7
r467c15 = and r189c15,r460c59
r460c67 = or r467c11,r467c15
v1448 = is_equal v77,r160c51
v84 = constant 2
r466c31 = sub v84,v78
v1450 = is_equal v77,r466c31
r460c71 = or v1448,v1450
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r467c35 = and v3,r460c71
r466c47 = not r460c71
r467c39 = and v3,r466c47
r467c43 = and r467c39,r460c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r467c47 = and v3,r467c43
r467c51 = and r189c19,r460c67
r460c75 = or r467c47,r467c51
v423 = constant 3
r466c51 = sub v78,v423
v1452 = is_equal v77,r466c51
v423 = constant 3
r466c67 = sub v423,v78
v1454 = is_equal v77,r466c67
r460c79 = or v1452,v1454
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r467c71 = and v4,r460c79
r469c3 = not r460c79
r467c75 = and v4,r469c3
r467c79 = and r467c75,r460c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r470c3 = and v4,r467c79
r470c7 = and r189c23,r460c75
r471c3 = or r470c3,r470c7
v428 = constant 4
r469c7 = sub v78,v428
v1456 = is_equal v77,r469c7
v428 = constant 4
r469c23 = sub v428,v78
v1458 = is_equal v77,r469c23
r471c7 = or v1456,v1458
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r470c27 = and v5,r471c7
r469c39 = not r471c7
r470c31 = and v5,r469c39
r470c35 = and r470c31,r471c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r470c39 = and v5,r470c35
r470c43 = and r189c27,r471c3
r471c11 = or r470c39,r470c43
v433 = constant 5
r469c43 = sub v78,v433
v1460 = is_equal v77,r469c43
v433 = constant 5
r469c59 = sub v433,v78
v1462 = is_equal v77,r469c59
r471c15 = or v1460,v1462
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r470c63 = and v6,r471c15
r469c75 = not r471c15
r470c67 = and v6,r469c75
r470c71 = and r470c67,r471c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r470c75 = and v6,r470c71
r470c79 = and r189c31,r471c11
r471c19 = or r470c75,r470c79
v438 = constant 6
r469c79 = sub v78,v438
v1464 = is_equal v77,r469c79
v438 = constant 6
r472c15 = sub v438,v78
v1466 = is_equal v77,r472c15
r471c23 = or v1464,v1466
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r473c19 = and v7,r471c23
r472c31 = not r471c23
r473c23 = and v7,r472c31
r473c27 = and r473c23,r471c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r473c31 = and v7,r473c27
r473c35 = and r189c35,r471c19
r471c27 = or r473c31,r473c35
v443 = constant 7
r472c35 = sub v78,v443
v1468 = is_equal v77,r472c35
v443 = constant 7
r472c51 = sub v443,v78
v1470 = is_equal v77,r472c51
r471c31 = or v1468,v1470
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r473c55 = and v8,r471c31
r472c67 = not r471c31
r473c59 = and v8,r472c67
r473c63 = and r473c59,r471c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r473c67 = and v8,r473c63
r473c71 = and r189c39,r471c27
r471c35 = or r473c67,r473c71
v1472 = is_equal r160c35,v78
v1474 = is_equal r160c35,r464c47
r471c39 = or v1472,v1474
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r475c11 = and v9,r471c39
r474c15 = not r471c39
r475c15 = and v9,r474c15
r475c19 = and r475c15,r471c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r475c23 = and v9,r475c19
r475c27 = and r189c43,r471c35
r471c43 = or r475c23,r475c27
v1476 = is_equal r160c35,r158c75
v1478 = is_equal r160c35,r464c79
r471c47 = or v1476,v1478
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r475c47 = and v10,r471c47
r474c43 = not r471c47
r475c51 = and v10,r474c43
r475c55 = and r475c51,r471c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r475c59 = and v10,r475c55
r475c63 = and r189c47,r471c43
r471c51 = or r475c59,r475c63
v1480 = is_equal r160c35,r160c51
v1482 = is_equal r160c35,r466c31
r471c55 = or v1480,v1482
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r476c3 = and v11,r471c55
r474c71 = not r471c55
r476c7 = and v11,r474c71
r476c11 = and r476c7,r471c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r476c15 = and v11,r476c11
r476c19 = and r189c51,r471c51
r471c59 = or r476c15,r476c19
v1484 = is_equal r160c35,r466c51
v1486 = is_equal r160c35,r466c67
r471c63 = or v1484,v1486
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r476c39 = and v12,r471c63
r477c19 = not r471c63
r476c43 = and v12,r477c19
r476c47 = and r476c43,r471c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r476c51 = and v12,r476c47
r476c55 = and r189c55,r471c59
r471c67 = or r476c51,r476c55
v1488 = is_equal r160c35,r469c7
v1490 = is_equal r160c35,r469c23
r471c71 = or v1488,v1490
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r476c75 = and v13,r471c71
r477c47 = not r471c71
r476c79 = and v13,r477c47
r478c3 = and r476c79,r471c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r478c7 = and v13,r478c3
r478c11 = and r189c59,r471c67
r471c75 = or r478c7,r478c11
v1492 = is_equal r160c35,r469c43
v1494 = is_equal r160c35,r469c59
r471c79 = or v1492,v1494
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r478c31 = and v14,r471c79
r477c75 = not r471c79
r478c35 = and v14,r477c75
r478c39 = and r478c35,r471c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r478c43 = and v14,r478c39
r478c47 = and r189c63,r471c75
r480c3 = or r478c43,r478c47
v1496 = is_equal r160c35,r469c79
v1498 = is_equal r160c35,r472c15
r480c7 = or v1496,v1498
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r478c67 = and v15,r480c7
r481c23 = not r480c7
r478c71 = and v15,r481c23
r478c75 = and r478c71,r480c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r478c79 = and v15,r478c75
r482c3 = and r189c67,r480c3
r480c11 = or r478c79,r482c3
v1500 = is_equal r160c35,r472c35
v1502 = is_equal r160c35,r472c51
r480c15 = or v1500,v1502
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r482c23 = and v16,r480c15
r481c51 = not r480c15
r482c27 = and v16,r481c51
r482c31 = and r482c27,r480c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r482c35 = and v16,r482c31
r482c39 = and r189c71,r480c11
r480c19 = or r482c35,r482c39
v1504 = is_equal r158c59,v78
v1506 = is_equal r158c59,r464c47
r480c23 = or v1504,v1506
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r482c59 = and v17,r480c23
r481c79 = not r480c23
r482c63 = and v17,r481c79
r482c67 = and r482c63,r480c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r482c71 = and v17,r482c67
r482c75 = and r189c75,r480c19
r480c27 = or r482c71,r482c75
v1508 = is_equal r158c59,r158c75
v1510 = is_equal r158c59,r464c79
r480c31 = or v1508,v1510
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r484c15 = and v18,r480c31
r483c27 = not r480c31
r484c19 = and v18,r483c27
r484c23 = and r484c19,r480c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r484c27 = and v18,r484c23
r484c31 = and r189c79,r480c27
r480c35 = or r484c27,r484c31
v1512 = is_equal r158c59,r160c51
v1514 = is_equal r158c59,r466c31
r480c39 = or v1512,v1514
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r484c51 = and v19,r480c39
r483c55 = not r480c39
r484c55 = and v19,r483c55
r484c59 = and r484c55,r480c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r484c63 = and v19,r484c59
r484c67 = and r195c3,r480c35
r480c43 = or r484c63,r484c67
v1516 = is_equal r158c59,r466c51
v1518 = is_equal r158c59,r466c67
r480c47 = or v1516,v1518
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r485c7 = and v20,r480c47
r486c3 = not r480c47
r485c11 = and v20,r486c3
r485c15 = and r485c11,r480c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r485c19 = and v20,r485c15
r485c23 = and r195c7,r480c43
r480c51 = or r485c19,r485c23
v1520 = is_equal r158c59,r469c7
v1522 = is_equal r158c59,r469c23
r480c55 = or v1520,v1522
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r485c43 = and v21,r480c55
r486c31 = not r480c55
r485c47 = and v21,r486c31
r485c51 = and r485c47,r480c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r485c55 = and v21,r485c51
r485c59 = and r195c11,r480c51
r480c59 = or r485c55,r485c59
v1524 = is_equal r158c59,r469c43
v1526 = is_equal r158c59,r469c59
r480c63 = or v1524,v1526
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r485c79 = and v22,r480c63
r486c59 = not r480c63
r487c3 = and v22,r486c59
r487c7 = and r487c3,r480c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r487c11 = and v22,r487c7
r487c15 = and r195c15,r480c59
r480c67 = or r487c11,r487c15
v1528 = is_equal r158c59,r469c79
v1530 = is_equal r158c59,r472c15
r480c71 = or v1528,v1530
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r487c35 = and v23,r480c71
r488c7 = not r480c71
r487c39 = and v23,r488c7
r487c43 = and r487c39,r480c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r487c47 = and v23,r487c43
r487c51 = and r195c19,r480c67
r480c75 = or r487c47,r487c51
v1532 = is_equal r158c59,r472c35
v1534 = is_equal r158c59,r472c51
r480c79 = or v1532,v1534
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r487c71 = and v24,r480c79
r488c35 = not r480c79
r487c75 = and v24,r488c35
r487c79 = and r487c75,r480c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r490c3 = and v24,r487c79
r490c7 = and r195c23,r480c75
r491c3 = or r490c3,r490c7
v423 = constant 3
r488c39 = sub v77,v423
v1536 = is_equal r488c39,v78
v1538 = is_equal r488c39,r464c47
r491c7 = or v1536,v1538
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r490c27 = and v25,r491c7
r488c67 = not r491c7
r490c31 = and v25,r488c67
r490c35 = and r490c31,r491c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r490c39 = and v25,r490c35
r490c43 = and r195c27,r491c3
r491c11 = or r490c39,r490c43
v1540 = is_equal r488c39,r158c75
v1542 = is_equal r488c39,r464c79
r491c15 = or v1540,v1542
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r490c63 = and v26,r491c15
r492c15 = not r491c15
r490c67 = and v26,r492c15
r490c71 = and r490c67,r491c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r490c75 = and v26,r490c71
r490c79 = and r195c31,r491c11
r491c19 = or r490c75,r490c79
v1544 = is_equal r488c39,r160c51
v1546 = is_equal r488c39,r466c31
r491c23 = or v1544,v1546
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r493c19 = and v27,r491c23
r492c43 = not r491c23
r493c23 = and v27,r492c43
r493c27 = and r493c23,r491c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r493c31 = and v27,r493c27
r493c35 = and r195c35,r491c19
r491c27 = or r493c31,r493c35
v1548 = is_equal r488c39,r466c51
v1550 = is_equal r488c39,r466c67
r491c31 = or v1548,v1550
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r493c55 = and v28,r491c31
r492c71 = not r491c31
r493c59 = and v28,r492c71
r493c63 = and r493c59,r491c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r493c67 = and v28,r493c63
r493c71 = and r195c39,r491c27
r491c35 = or r493c67,r493c71
v1552 = is_equal r488c39,r469c7
v1554 = is_equal r488c39,r469c23
r491c39 = or v1552,v1554
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r495c11 = and v29,r491c39
r494c19 = not r491c39
r495c15 = and v29,r494c19
r495c19 = and r495c15,r491c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r495c23 = and v29,r495c19
r495c27 = and r195c43,r491c35
r491c43 = or r495c23,r495c27
v1556 = is_equal r488c39,r469c43
v1558 = is_equal r488c39,r469c59
r491c47 = or v1556,v1558
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r495c47 = and v30,r491c47
r494c47 = not r491c47
r495c51 = and v30,r494c47
r495c55 = and r495c51,r491c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r495c59 = and v30,r495c55
r495c63 = and r195c47,r491c43
r491c51 = or r495c59,r495c63
v1560 = is_equal r488c39,r469c79
v1562 = is_equal r488c39,r472c15
r491c55 = or v1560,v1562
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r496c3 = and v31,r491c55
r494c75 = not r491c55
r496c7 = and v31,r494c75
r496c11 = and r496c7,r491c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r496c15 = and v31,r496c11
r496c19 = and r195c51,r491c51
r491c59 = or r496c15,r496c19
v1564 = is_equal r488c39,r472c35
v1566 = is_equal r488c39,r472c51
r491c63 = or v1564,v1566
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r496c39 = and v32,r491c63
r497c23 = not r491c63
r496c43 = and v32,r497c23
r496c47 = and r496c43,r491c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r496c51 = and v32,r496c47
r496c55 = and r195c55,r491c59
r491c67 = or r496c51,r496c55
v428 = constant 4
r497c27 = sub v77,v428
v1568 = is_equal r497c27,v78
v1570 = is_equal r497c27,r464c47
r491c71 = or v1568,v1570
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r496c75 = and v33,r491c71
r497c55 = not r491c71
r496c79 = and v33,r497c55
r498c3 = and r496c79,r491c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r498c7 = and v33,r498c3
r498c11 = and r195c59,r491c67
r491c75 = or r498c7,r498c11
v1572 = is_equal r497c27,r158c75
v1574 = is_equal r497c27,r464c79
r491c79 = or v1572,v1574
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r498c31 = and v34,r491c79
r500c3 = not r491c79
r498c35 = and v34,r500c3
r498c39 = and r498c35,r491c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r498c43 = and v34,r498c39
r498c47 = and r195c63,r491c75
r501c3 = or r498c43,r498c47
v1576 = is_equal r497c27,r160c51
v1578 = is_equal r497c27,r466c31
r501c7 = or v1576,v1578
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r498c67 = and v35,r501c7
r500c31 = not r501c7
r498c71 = and v35,r500c31
r498c75 = and r498c71,r501c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r498c79 = and v35,r498c75
r502c3 = and r195c67,r501c3
r501c11 = or r498c79,r502c3
v1580 = is_equal r497c27,r466c51
v1582 = is_equal r497c27,r466c67
r501c15 = or v1580,v1582
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r502c23 = and v36,r501c15
r500c59 = not r501c15
r502c27 = and v36,r500c59
r502c31 = and r502c27,r501c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r502c35 = and v36,r502c31
r502c39 = and r195c71,r501c11
r501c19 = or r502c35,r502c39
v1584 = is_equal r497c27,r469c7
v1586 = is_equal r497c27,r469c23
r501c23 = or v1584,v1586
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r502c59 = and v37,r501c23
r503c7 = not r501c23
r502c63 = and v37,r503c7
r502c67 = and r502c63,r501c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r502c71 = and v37,r502c67
r502c75 = and r195c75,r501c19
r501c27 = or r502c71,r502c75
v1588 = is_equal r497c27,r469c43
v1590 = is_equal r497c27,r469c59
r501c31 = or v1588,v1590
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r504c15 = and v38,r501c31
r503c35 = not r501c31
r504c19 = and v38,r503c35
r504c23 = and r504c19,r501c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r504c27 = and v38,r504c23
r504c31 = and r195c79,r501c27
r501c35 = or r504c27,r504c31
v1592 = is_equal r497c27,r469c79
v1594 = is_equal r497c27,r472c15
r501c39 = or v1592,v1594
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r504c51 = and v39,r501c39
r503c63 = not r501c39
r504c55 = and v39,r503c63
r504c59 = and r504c55,r501c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r504c63 = and v39,r504c59
r504c67 = and r199c3,r501c35
r501c43 = or r504c63,r504c67
v1596 = is_equal r497c27,r472c35
v1598 = is_equal r497c27,r472c51
r501c47 = or v1596,v1598
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r506c7 = and v40,r501c47
r505c11 = not r501c47
r506c11 = and v40,r505c11
r506c15 = and r506c11,r501c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r506c19 = and v40,r506c15
r506c23 = and r199c7,r501c43
r501c51 = or r506c19,r506c23
v433 = constant 5
r505c15 = sub v77,v433
v1600 = is_equal r505c15,v78
v1602 = is_equal r505c15,r464c47
r501c55 = or v1600,v1602
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r506c43 = and v41,r501c55
r505c43 = not r501c55
r506c47 = and v41,r505c43
r506c51 = and r506c47,r501c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r506c55 = and v41,r506c51
r506c59 = and r199c11,r501c51
r501c59 = or r506c55,r506c59
v1604 = is_equal r505c15,r158c75
v1606 = is_equal r505c15,r464c79
r501c63 = or v1604,v1606
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r506c79 = and v42,r501c63
r505c71 = not r501c63
r507c3 = and v42,r505c71
r507c7 = and r507c3,r501c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r507c11 = and v42,r507c7
r507c15 = and r199c15,r501c59
r501c67 = or r507c11,r507c15
v1608 = is_equal r505c15,r160c51
v1610 = is_equal r505c15,r466c31
r501c71 = or v1608,v1610
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r507c35 = and v43,r501c71
r508c19 = not r501c71
r507c39 = and v43,r508c19
r507c43 = and r507c39,r501c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r507c47 = and v43,r507c43
r507c51 = and r199c19,r501c67
r501c75 = or r507c47,r507c51
v1612 = is_equal r505c15,r466c51
v1614 = is_equal r505c15,r466c67
r501c79 = or v1612,v1614
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r507c71 = and v44,r501c79
r508c47 = not r501c79
r507c75 = and v44,r508c47
r507c79 = and r507c75,r501c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r510c3 = and v44,r507c79
r510c7 = and r199c23,r501c75
r511c3 = or r510c3,r510c7
v1616 = is_equal r505c15,r469c7
v1618 = is_equal r505c15,r469c23
r511c7 = or v1616,v1618
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r510c27 = and v45,r511c7
r508c75 = not r511c7
r510c31 = and v45,r508c75
r510c35 = and r510c31,r511c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r510c39 = and v45,r510c35
r510c43 = and r199c27,r511c3
r511c11 = or r510c39,r510c43
v1620 = is_equal r505c15,r469c43
v1622 = is_equal r505c15,r469c59
r511c15 = or v1620,v1622
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r510c63 = and v46,r511c15
r512c23 = not r511c15
r510c67 = and v46,r512c23
r510c71 = and r510c67,r511c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r510c75 = and v46,r510c71
r510c79 = and r199c31,r511c11
r511c19 = or r510c75,r510c79
v1624 = is_equal r505c15,r469c79
v1626 = is_equal r505c15,r472c15
r511c23 = or v1624,v1626
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r513c19 = and v47,r511c23
r512c51 = not r511c23
r513c23 = and v47,r512c51
r513c27 = and r513c23,r511c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r513c31 = and v47,r513c27
r513c35 = and r199c35,r511c19
r511c27 = or r513c31,r513c35
v1628 = is_equal r505c15,r472c35
v1630 = is_equal r505c15,r472c51
r511c31 = or v1628,v1630
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r513c55 = and v48,r511c31
r512c79 = not r511c31
r513c59 = and v48,r512c79
r513c63 = and r513c59,r511c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r513c67 = and v48,r513c63
r513c71 = and r199c39,r511c27
r511c35 = or r513c67,r513c71
v438 = constant 6
r514c3 = sub v77,v438
v1632 = is_equal r514c3,v78
v1634 = is_equal r514c3,r464c47
r511c39 = or v1632,v1634
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r515c11 = and v49,r511c39
r514c31 = not r511c39
r515c15 = and v49,r514c31
r515c19 = and r515c15,r511c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r515c23 = and v49,r515c19
r515c27 = and r199c43,r511c35
r511c43 = or r515c23,r515c27
v1636 = is_equal r514c3,r158c75
v1638 = is_equal r514c3,r464c79
r511c47 = or v1636,v1638
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r515c47 = and v50,r511c47
r514c59 = not r511c47
r515c51 = and v50,r514c59
r515c55 = and r515c51,r511c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r515c59 = and v50,r515c55
r515c63 = and r199c47,r511c43
r511c51 = or r515c59,r515c63
v1640 = is_equal r514c3,r160c51
v1642 = is_equal r514c3,r466c31
r511c55 = or v1640,v1642
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r517c3 = and v51,r511c55
r516c7 = not r511c55
r517c7 = and v51,r516c7
r517c11 = and r517c7,r511c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r517c15 = and v51,r517c11
r517c19 = and r199c51,r511c51
r511c59 = or r517c15,r517c19
v1644 = is_equal r514c3,r466c51
v1646 = is_equal r514c3,r466c67
r511c63 = or v1644,v1646
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r517c39 = and v52,r511c63
r516c35 = not r511c63
r517c43 = and v52,r516c35
r517c47 = and r517c43,r511c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r517c51 = and v52,r517c47
r517c55 = and r199c55,r511c59
r511c67 = or r517c51,r517c55
v1648 = is_equal r514c3,r469c7
v1650 = is_equal r514c3,r469c23
r511c71 = or v1648,v1650
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r517c75 = and v53,r511c71
r516c63 = not r511c71
r517c79 = and v53,r516c63
r518c3 = and r517c79,r511c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r518c7 = and v53,r518c3
r518c11 = and r199c59,r511c67
r511c75 = or r518c7,r518c11
v1652 = is_equal r514c3,r469c43
v1654 = is_equal r514c3,r469c59
r511c79 = or v1652,v1654
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r518c31 = and v54,r511c79
r520c11 = not r511c79
r518c35 = and v54,r520c11
r518c39 = and r518c35,r511c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r518c43 = and v54,r518c39
r518c47 = and r199c63,r511c75
r521c3 = or r518c43,r518c47
v1656 = is_equal r514c3,r469c79
v1658 = is_equal r514c3,r472c15
r521c7 = or v1656,v1658
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r518c67 = and v55,r521c7
r520c39 = not r521c7
r518c71 = and v55,r520c39
r518c75 = and r518c71,r521c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r518c79 = and v55,r518c75
r522c3 = and r199c67,r521c3
r521c11 = or r518c79,r522c3
v1660 = is_equal r514c3,r472c35
v1662 = is_equal r514c3,r472c51
r521c15 = or v1660,v1662
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r522c23 = and v56,r521c15
r520c67 = not r521c15
r522c27 = and v56,r520c67
r522c31 = and r522c27,r521c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r522c35 = and v56,r522c31
r522c39 = and r199c71,r521c11
r521c19 = or r522c35,r522c39
v443 = constant 7
r520c71 = sub v77,v443
v1664 = is_equal r520c71,v78
v1666 = is_equal r520c71,r464c47
r521c23 = or v1664,v1666
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r522c59 = and v57,r521c23
r523c19 = not r521c23
r522c63 = and v57,r523c19
r522c67 = and r522c63,r521c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r522c71 = and v57,r522c67
r522c75 = and r199c75,r521c19
r521c27 = or r522c71,r522c75
v1668 = is_equal r520c71,r158c75
v1670 = is_equal r520c71,r464c79
r521c31 = or v1668,v1670
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r524c15 = and v58,r521c31
r523c47 = not r521c31
r524c19 = and v58,r523c47
r524c23 = and r524c19,r521c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r524c27 = and v58,r524c23
r524c31 = and r199c79,r521c27
r521c35 = or r524c27,r524c31
v1672 = is_equal r520c71,r160c51
v1674 = is_equal r520c71,r466c31
r521c39 = or v1672,v1674
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r524c51 = and v59,r521c39
r523c75 = not r521c39
r524c55 = and v59,r523c75
r524c59 = and r524c55,r521c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r524c63 = and v59,r524c59
r524c67 = and r204c3,r521c35
r521c43 = or r524c63,r524c67
v1676 = is_equal r520c71,r466c51
v1678 = is_equal r520c71,r466c67
r521c47 = or v1676,v1678
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r526c7 = and v60,r521c47
r525c23 = not r521c47
r526c11 = and v60,r525c23
r526c15 = and r526c11,r521c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r526c19 = and v60,r526c15
r526c23 = and r204c7,r521c43
r521c51 = or r526c19,r526c23
v1680 = is_equal r520c71,r469c7
v1682 = is_equal r520c71,r469c23
r521c55 = or v1680,v1682
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r526c43 = and v61,r521c55
r525c51 = not r521c55
r526c47 = and v61,r525c51
r526c51 = and r526c47,r521c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r526c55 = and v61,r526c51
r526c59 = and r204c11,r521c51
r521c59 = or r526c55,r526c59
v1684 = is_equal r520c71,r469c43
v1686 = is_equal r520c71,r469c59
r521c63 = or v1684,v1686
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r526c79 = and v62,r521c63
r525c79 = not r521c63
r527c3 = and v62,r525c79
r527c7 = and r527c3,r521c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r527c11 = and v62,r527c7
r527c15 = and r204c15,r521c59
r521c67 = or r527c11,r527c15
v1688 = is_equal r520c71,r469c79
v1690 = is_equal r520c71,r472c15
r521c71 = or v1688,v1690
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r527c35 = and v63,r521c71
r528c27 = not r521c71
r527c39 = and v63,r528c27
r527c43 = and r527c39,r521c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r527c47 = and v63,r527c43
r527c51 = and r204c19,r521c67
r521c75 = or r527c47,r527c51
v1692 = is_equal r520c71,r472c35
v1694 = is_equal r520c71,r472c51
r521c79 = or v1692,v1694
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r527c71 = and v64,r521c79
r528c55 = not r521c79
r527c75 = and v64,r528c55
r527c79 = and r527c75,r521c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r530c3 = and v64,r527c79
r530c7 = and r204c23,r521c75
r531c3 = or r530c3,r530c7
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r531c3,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1696 = is_equal v79,v80
v1 = constant 0
r528c71 = sub v1,v80
v1698 = is_equal v79,r528c71
r531c7 = or v1696,v1698
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r530c27 = and v0,r531c7
r532c7 = not r531c7
r530c31 = and v0,r532c7
r530c35 = and v0,r530c31
r531c11 = or r530c35,r189c11
v1700 = is_equal v79,r185c19
v87 = constant 1
r532c23 = sub v87,v80
v1702 = is_equal v79,r532c23
r531c15 = or v1700,v1702
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r530c55 = and v2,r531c15
r532c39 = not r531c15
r530c59 = and v2,r532c39
r530c63 = and r530c59,r531c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r530c67 = and v2,r530c63
r530c71 = and r189c15,r531c11
r531c19 = or r530c67,r530c71
v1704 = is_equal v79,r185c75
v84 = constant 2
r532c55 = sub v84,v80
v1706 = is_equal v79,r532c55
r531c23 = or v1704,v1706
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r533c11 = and v3,r531c23
r532c71 = not r531c23
r533c15 = and v3,r532c71
r533c19 = and r533c15,r531c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r533c23 = and v3,r533c19
r533c27 = and r189c19,r531c19
r531c27 = or r533c23,r533c27
v423 = constant 3
r532c75 = sub v80,v423
v1708 = is_equal v79,r532c75
v423 = constant 3
r534c11 = sub v423,v80
v1710 = is_equal v79,r534c11
r531c31 = or v1708,v1710
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r533c47 = and v4,r531c31
r534c27 = not r531c31
r533c51 = and v4,r534c27
r533c55 = and r533c51,r531c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r533c59 = and v4,r533c55
r533c63 = and r189c23,r531c27
r531c35 = or r533c59,r533c63
v428 = constant 4
r534c31 = sub v80,v428
v1712 = is_equal v79,r534c31
v428 = constant 4
r534c47 = sub v428,v80
v1714 = is_equal v79,r534c47
r531c39 = or v1712,v1714
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r535c3 = and v5,r531c39
r534c63 = not r531c39
r535c7 = and v5,r534c63
r535c11 = and r535c7,r531c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r535c15 = and v5,r535c11
r535c19 = and r189c27,r531c35
r531c43 = or r535c15,r535c19
v433 = constant 5
r534c67 = sub v80,v433
v1716 = is_equal v79,r534c67
v433 = constant 5
r536c3 = sub v433,v80
v1718 = is_equal v79,r536c3
r531c47 = or v1716,v1718
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r535c39 = and v6,r531c47
r536c19 = not r531c47
r535c43 = and v6,r536c19
r535c47 = and r535c43,r531c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r535c51 = and v6,r535c47
r535c55 = and r189c31,r531c43
r531c51 = or r535c51,r535c55
v438 = constant 6
r536c23 = sub v80,v438
v1720 = is_equal v79,r536c23
v438 = constant 6
r536c39 = sub v438,v80
v1722 = is_equal v79,r536c39
r531c55 = or v1720,v1722
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r535c75 = and v7,r531c55
r536c55 = not r531c55
r535c79 = and v7,r536c55
r537c3 = and r535c79,r531c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r537c7 = and v7,r537c3
r537c11 = and r189c35,r531c51
r531c59 = or r537c7,r537c11
v443 = constant 7
r536c59 = sub v80,v443
v1724 = is_equal v79,r536c59
v443 = constant 7
r536c75 = sub v443,v80
v1726 = is_equal v79,r536c75
r531c63 = or v1724,v1726
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r537c31 = and v8,r531c63
r538c11 = not r531c63
r537c35 = and v8,r538c11
r537c39 = and r537c35,r531c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r537c43 = and v8,r537c39
r537c47 = and r189c39,r531c59
r531c67 = or r537c43,r537c47
v1728 = is_equal r185c59,v80
v1730 = is_equal r185c59,r528c71
r531c71 = or v1728,v1730
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r537c67 = and v9,r531c71
r538c39 = not r531c71
r537c71 = and v9,r538c39
r537c75 = and r537c71,r531c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r537c79 = and v9,r537c75
r539c3 = and r189c43,r531c67
r531c75 = or r537c79,r539c3
v1732 = is_equal r185c59,r185c19
v1734 = is_equal r185c59,r532c23
r531c79 = or v1732,v1734
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r539c23 = and v10,r531c79
r538c67 = not r531c79
r539c27 = and v10,r538c67
r539c31 = and r539c27,r531c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r539c35 = and v10,r539c31
r539c39 = and r189c47,r531c75
r541c3 = or r539c35,r539c39
v1736 = is_equal r185c59,r185c75
v1738 = is_equal r185c59,r532c55
r541c7 = or v1736,v1738
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r539c59 = and v11,r541c7
r542c15 = not r541c7
r539c63 = and v11,r542c15
r539c67 = and r539c63,r541c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r539c71 = and v11,r539c67
r539c75 = and r189c51,r541c3
r541c11 = or r539c71,r539c75
v1740 = is_equal r185c59,r532c75
v1742 = is_equal r185c59,r534c11
r541c15 = or v1740,v1742
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r543c15 = and v12,r541c15
r542c43 = not r541c15
r543c19 = and v12,r542c43
r543c23 = and r543c19,r541c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r543c27 = and v12,r543c23
r543c31 = and r189c55,r541c11
r541c19 = or r543c27,r543c31
v1744 = is_equal r185c59,r534c31
v1746 = is_equal r185c59,r534c47
r541c23 = or v1744,v1746
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r543c51 = and v13,r541c23
r542c71 = not r541c23
r543c55 = and v13,r542c71
r543c59 = and r543c55,r541c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r543c63 = and v13,r543c59
r543c67 = and r189c59,r541c19
r541c27 = or r543c63,r543c67
v1748 = is_equal r185c59,r534c67
v1750 = is_equal r185c59,r536c3
r541c31 = or v1748,v1750
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r545c7 = and v14,r541c31
r544c19 = not r541c31
r545c11 = and v14,r544c19
r545c15 = and r545c11,r541c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r545c19 = and v14,r545c15
r545c23 = and r189c63,r541c27
r541c35 = or r545c19,r545c23
v1752 = is_equal r185c59,r536c23
v1754 = is_equal r185c59,r536c39
r541c39 = or v1752,v1754
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r545c43 = and v15,r541c39
r544c47 = not r541c39
r545c47 = and v15,r544c47
r545c51 = and r545c47,r541c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r545c55 = and v15,r545c51
r545c59 = and r189c67,r541c35
r541c43 = or r545c55,r545c59
v1756 = is_equal r185c59,r536c59
v1758 = is_equal r185c59,r536c75
r541c47 = or v1756,v1758
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r545c79 = and v16,r541c47
r544c75 = not r541c47
r546c3 = and v16,r544c75
r546c7 = and r546c3,r541c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r546c11 = and v16,r546c7
r546c15 = and r189c71,r541c43
r541c51 = or r546c11,r546c15
v1760 = is_equal r185c3,v80
v1762 = is_equal r185c3,r528c71
r541c55 = or v1760,v1762
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r546c35 = and v17,r541c55
r547c23 = not r541c55
r546c39 = and v17,r547c23
r546c43 = and r546c39,r541c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r546c47 = and v17,r546c43
r546c51 = and r189c75,r541c51
r541c59 = or r546c47,r546c51
v1764 = is_equal r185c3,r185c19
v1766 = is_equal r185c3,r532c23
r541c63 = or v1764,v1766
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r546c71 = and v18,r541c63
r547c51 = not r541c63
r546c75 = and v18,r547c51
r546c79 = and r546c75,r541c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r548c3 = and v18,r546c79
r548c7 = and r189c79,r541c59
r541c67 = or r548c3,r548c7
v1768 = is_equal r185c3,r185c75
v1770 = is_equal r185c3,r532c55
r541c71 = or v1768,v1770
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r548c27 = and v19,r541c71
r547c79 = not r541c71
r548c31 = and v19,r547c79
r548c35 = and r548c31,r541c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r548c39 = and v19,r548c35
r548c43 = and r195c3,r541c67
r541c75 = or r548c39,r548c43
v1772 = is_equal r185c3,r532c75
v1774 = is_equal r185c3,r534c11
r541c79 = or v1772,v1774
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r548c63 = and v20,r541c79
r550c27 = not r541c79
r548c67 = and v20,r550c27
r548c71 = and r548c67,r541c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r548c75 = and v20,r548c71
r548c79 = and r195c7,r541c75
r551c3 = or r548c75,r548c79
v1776 = is_equal r185c3,r534c31
v1778 = is_equal r185c3,r534c47
r551c7 = or v1776,v1778
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r552c19 = and v21,r551c7
r550c55 = not r551c7
r552c23 = and v21,r550c55
r552c27 = and r552c23,r551c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r552c31 = and v21,r552c27
r552c35 = and r195c11,r551c3
r551c11 = or r552c31,r552c35
v1780 = is_equal r185c3,r534c67
v1782 = is_equal r185c3,r536c3
r551c15 = or v1780,v1782
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r552c55 = and v22,r551c15
r553c3 = not r551c15
r552c59 = and v22,r553c3
r552c63 = and r552c59,r551c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r552c67 = and v22,r552c63
r552c71 = and r195c15,r551c11
r551c19 = or r552c67,r552c71
v1784 = is_equal r185c3,r536c23
v1786 = is_equal r185c3,r536c39
r551c23 = or v1784,v1786
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r554c11 = and v23,r551c23
r553c31 = not r551c23
r554c15 = and v23,r553c31
r554c19 = and r554c15,r551c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r554c23 = and v23,r554c19
r554c27 = and r195c19,r551c19
r551c27 = or r554c23,r554c27
v1788 = is_equal r185c3,r536c59
v1790 = is_equal r185c3,r536c75
r551c31 = or v1788,v1790
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r554c47 = and v24,r551c31
r553c59 = not r551c31
r554c51 = and v24,r553c59
r554c55 = and r554c51,r551c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r554c59 = and v24,r554c55
r554c63 = and r195c23,r551c27
r551c35 = or r554c59,r554c63
v423 = constant 3
r553c63 = sub v79,v423
v1792 = is_equal r553c63,v80
v1794 = is_equal r553c63,r528c71
r551c39 = or v1792,v1794
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r556c3 = and v25,r551c39
r555c11 = not r551c39
r556c7 = and v25,r555c11
r556c11 = and r556c7,r551c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r556c15 = and v25,r556c11
r556c19 = and r195c27,r551c35
r551c43 = or r556c15,r556c19
v1796 = is_equal r553c63,r185c19
v1798 = is_equal r553c63,r532c23
r551c47 = or v1796,v1798
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r556c39 = and v26,r551c47
r555c39 = not r551c47
r556c43 = and v26,r555c39
r556c47 = and r556c43,r551c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r556c51 = and v26,r556c47
r556c55 = and r195c31,r551c43
r551c51 = or r556c51,r556c55
v1800 = is_equal r553c63,r185c75
v1802 = is_equal r553c63,r532c55
r551c55 = or v1800,v1802
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r556c75 = and v27,r551c55
r555c67 = not r551c55
r556c79 = and v27,r555c67
r557c3 = and r556c79,r551c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r557c7 = and v27,r557c3
r557c11 = and r195c35,r551c51
r551c59 = or r557c7,r557c11
v1804 = is_equal r553c63,r532c75
v1806 = is_equal r553c63,r534c11
r551c63 = or v1804,v1806
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r557c31 = and v28,r551c63
r558c15 = not r551c63
r557c35 = and v28,r558c15
r557c39 = and r557c35,r551c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r557c43 = and v28,r557c39
r557c47 = and r195c39,r551c59
r551c67 = or r557c43,r557c47
v1808 = is_equal r553c63,r534c31
v1810 = is_equal r553c63,r534c47
r551c71 = or v1808,v1810
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r557c67 = and v29,r551c71
r558c43 = not r551c71
r557c71 = and v29,r558c43
r557c75 = and r557c71,r551c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r557c79 = and v29,r557c75
r559c3 = and r195c43,r551c67
r551c75 = or r557c79,r559c3
v1812 = is_equal r553c63,r534c67
v1814 = is_equal r553c63,r536c3
r551c79 = or v1812,v1814
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r559c23 = and v30,r551c79
r558c71 = not r551c79
r559c27 = and v30,r558c71
r559c31 = and r559c27,r551c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r559c35 = and v30,r559c31
r559c39 = and r195c47,r551c75
r561c3 = or r559c35,r559c39
v1816 = is_equal r553c63,r536c23
v1818 = is_equal r553c63,r536c39
r561c7 = or v1816,v1818
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r559c59 = and v31,r561c7
r562c19 = not r561c7
r559c63 = and v31,r562c19
r559c67 = and r559c63,r561c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r559c71 = and v31,r559c67
r559c75 = and r195c51,r561c3
r561c11 = or r559c71,r559c75
v1820 = is_equal r553c63,r536c59
v1822 = is_equal r553c63,r536c75
r561c15 = or v1820,v1822
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r563c15 = and v32,r561c15
r562c47 = not r561c15
r563c19 = and v32,r562c47
r563c23 = and r563c19,r561c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r563c27 = and v32,r563c23
r563c31 = and r195c55,r561c11
r561c19 = or r563c27,r563c31
v428 = constant 4
r562c51 = sub v79,v428
v1824 = is_equal r562c51,v80
v1826 = is_equal r562c51,r528c71
r561c23 = or v1824,v1826
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r563c51 = and v33,r561c23
r562c79 = not r561c23
r563c55 = and v33,r562c79
r563c59 = and r563c55,r561c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r563c63 = and v33,r563c59
r563c67 = and r195c59,r561c19
r561c27 = or r563c63,r563c67
v1828 = is_equal r562c51,r185c19
v1830 = is_equal r562c51,r532c23
r561c31 = or v1828,v1830
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r565c7 = and v34,r561c31
r564c27 = not r561c31
r565c11 = and v34,r564c27
r565c15 = and r565c11,r561c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r565c19 = and v34,r565c15
r565c23 = and r195c63,r561c27
r561c35 = or r565c19,r565c23
v1832 = is_equal r562c51,r185c75
v1834 = is_equal r562c51,r532c55
r561c39 = or v1832,v1834
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r565c43 = and v35,r561c39
r564c55 = not r561c39
r565c47 = and v35,r564c55
r565c51 = and r565c47,r561c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r565c55 = and v35,r565c51
r565c59 = and r195c67,r561c35
r561c43 = or r565c55,r565c59
v1836 = is_equal r562c51,r532c75
v1838 = is_equal r562c51,r534c11
r561c47 = or v1836,v1838
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r565c79 = and v36,r561c47
r566c3 = not r561c47
r567c3 = and v36,r566c3
r567c7 = and r567c3,r561c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r567c11 = and v36,r567c7
r567c15 = and r195c71,r561c43
r561c51 = or r567c11,r567c15
v1840 = is_equal r562c51,r534c31
v1842 = is_equal r562c51,r534c47
r561c55 = or v1840,v1842
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r567c35 = and v37,r561c55
r566c31 = not r561c55
r567c39 = and v37,r566c31
r567c43 = and r567c39,r561c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r567c47 = and v37,r567c43
r567c51 = and r195c75,r561c51
r561c59 = or r567c47,r567c51
v1844 = is_equal r562c51,r534c67
v1846 = is_equal r562c51,r536c3
r561c63 = or v1844,v1846
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r567c71 = and v38,r561c63
r566c59 = not r561c63
r567c75 = and v38,r566c59
r567c79 = and r567c75,r561c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r568c3 = and v38,r567c79
r568c7 = and r195c79,r561c59
r561c67 = or r568c3,r568c7
v1848 = is_equal r562c51,r536c23
v1850 = is_equal r562c51,r536c39
r561c71 = or v1848,v1850
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r568c27 = and v39,r561c71
r569c7 = not r561c71
r568c31 = and v39,r569c7
r568c35 = and r568c31,r561c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r568c39 = and v39,r568c35
r568c43 = and r199c3,r561c67
r561c75 = or r568c39,r568c43
v1852 = is_equal r562c51,r536c59
v1854 = is_equal r562c51,r536c75
r561c79 = or v1852,v1854
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r568c63 = and v40,r561c79
r569c35 = not r561c79
r568c67 = and v40,r569c35
r568c71 = and r568c67,r561c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r568c75 = and v40,r568c71
r568c79 = and r199c7,r561c75
r571c3 = or r568c75,r568c79
v433 = constant 5
r569c39 = sub v79,v433
v1856 = is_equal r569c39,v80
v1858 = is_equal r569c39,r528c71
r571c7 = or v1856,v1858
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r572c19 = and v41,r571c7
r569c67 = not r571c7
r572c23 = and v41,r569c67
r572c27 = and r572c23,r571c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r572c31 = and v41,r572c27
r572c35 = and r199c11,r571c3
r571c11 = or r572c31,r572c35
v1860 = is_equal r569c39,r185c19
v1862 = is_equal r569c39,r532c23
r571c15 = or v1860,v1862
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r572c55 = and v42,r571c15
r573c15 = not r571c15
r572c59 = and v42,r573c15
r572c63 = and r572c59,r571c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r572c67 = and v42,r572c63
r572c71 = and r199c15,r571c11
r571c19 = or r572c67,r572c71
v1864 = is_equal r569c39,r185c75
v1866 = is_equal r569c39,r532c55
r571c23 = or v1864,v1866
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r574c11 = and v43,r571c23
r573c43 = not r571c23
r574c15 = and v43,r573c43
r574c19 = and r574c15,r571c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r574c23 = and v43,r574c19
r574c27 = and r199c19,r571c19
r571c27 = or r574c23,r574c27
v1868 = is_equal r569c39,r532c75
v1870 = is_equal r569c39,r534c11
r571c31 = or v1868,v1870
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r574c47 = and v44,r571c31
r573c71 = not r571c31
r574c51 = and v44,r573c71
r574c55 = and r574c51,r571c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r574c59 = and v44,r574c55
r574c63 = and r199c23,r571c27
r571c35 = or r574c59,r574c63
v1872 = is_equal r569c39,r534c31
v1874 = is_equal r569c39,r534c47
r571c39 = or v1872,v1874
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r576c3 = and v45,r571c39
r575c19 = not r571c39
r576c7 = and v45,r575c19
r576c11 = and r576c7,r571c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r576c15 = and v45,r576c11
r576c19 = and r199c27,r571c35
r571c43 = or r576c15,r576c19
v1876 = is_equal r569c39,r534c67
v1878 = is_equal r569c39,r536c3
r571c47 = or v1876,v1878
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r576c39 = and v46,r571c47
r575c47 = not r571c47
r576c43 = and v46,r575c47
r576c47 = and r576c43,r571c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r576c51 = and v46,r576c47
r576c55 = and r199c31,r571c43
r571c51 = or r576c51,r576c55
v1880 = is_equal r569c39,r536c23
v1882 = is_equal r569c39,r536c39
r571c55 = or v1880,v1882
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r576c75 = and v47,r571c55
r575c75 = not r571c55
r576c79 = and v47,r575c75
r577c3 = and r576c79,r571c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r577c7 = and v47,r577c3
r577c11 = and r199c35,r571c51
r571c59 = or r577c7,r577c11
v1884 = is_equal r569c39,r536c59
v1886 = is_equal r569c39,r536c75
r571c63 = or v1884,v1886
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r577c31 = and v48,r571c63
r578c23 = not r571c63
r577c35 = and v48,r578c23
r577c39 = and r577c35,r571c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r577c43 = and v48,r577c39
r577c47 = and r199c39,r571c59
r571c67 = or r577c43,r577c47
v438 = constant 6
r578c27 = sub v79,v438
v1888 = is_equal r578c27,v80
v1890 = is_equal r578c27,r528c71
r571c71 = or v1888,v1890
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r577c67 = and v49,r571c71
r578c55 = not r571c71
r577c71 = and v49,r578c55
r577c75 = and r577c71,r571c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r577c79 = and v49,r577c75
r579c3 = and r199c43,r571c67
r571c75 = or r577c79,r579c3
v1892 = is_equal r578c27,r185c19
v1894 = is_equal r578c27,r532c23
r571c79 = or v1892,v1894
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r579c23 = and v50,r571c79
r581c3 = not r571c79
r579c27 = and v50,r581c3
r579c31 = and r579c27,r571c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r579c35 = and v50,r579c31
r579c39 = and r199c47,r571c75
r582c3 = or r579c35,r579c39
v1896 = is_equal r578c27,r185c75
v1898 = is_equal r578c27,r532c55
r582c7 = or v1896,v1898
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r579c59 = and v51,r582c7
r581c31 = not r582c7
r579c63 = and v51,r581c31
r579c67 = and r579c63,r582c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r579c71 = and v51,r579c67
r579c75 = and r199c51,r582c3
r582c11 = or r579c71,r579c75
v1900 = is_equal r578c27,r532c75
v1902 = is_equal r578c27,r534c11
r582c15 = or v1900,v1902
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r583c15 = and v52,r582c15
r581c59 = not r582c15
r583c19 = and v52,r581c59
r583c23 = and r583c19,r582c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r583c27 = and v52,r583c23
r583c31 = and r199c55,r582c11
r582c19 = or r583c27,r583c31
v1904 = is_equal r578c27,r534c31
v1906 = is_equal r578c27,r534c47
r582c23 = or v1904,v1906
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r583c51 = and v53,r582c23
r584c7 = not r582c23
r583c55 = and v53,r584c7
r583c59 = and r583c55,r582c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r583c63 = and v53,r583c59
r583c67 = and r199c59,r582c19
r582c27 = or r583c63,r583c67
v1908 = is_equal r578c27,r534c67
v1910 = is_equal r578c27,r536c3
r582c31 = or v1908,v1910
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r585c7 = and v54,r582c31
r584c35 = not r582c31
r585c11 = and v54,r584c35
r585c15 = and r585c11,r582c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r585c19 = and v54,r585c15
r585c23 = and r199c63,r582c27
r582c35 = or r585c19,r585c23
v1912 = is_equal r578c27,r536c23
v1914 = is_equal r578c27,r536c39
r582c39 = or v1912,v1914
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r585c43 = and v55,r582c39
r584c63 = not r582c39
r585c47 = and v55,r584c63
r585c51 = and r585c47,r582c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r585c55 = and v55,r585c51
r585c59 = and r199c67,r582c35
r582c43 = or r585c55,r585c59
v1916 = is_equal r578c27,r536c59
v1918 = is_equal r578c27,r536c75
r582c47 = or v1916,v1918
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r585c79 = and v56,r582c47
r586c11 = not r582c47
r587c3 = and v56,r586c11
r587c7 = and r587c3,r582c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r587c11 = and v56,r587c7
r587c15 = and r199c71,r582c43
r582c51 = or r587c11,r587c15
v443 = constant 7
r586c15 = sub v79,v443
v1920 = is_equal r586c15,v80
v1922 = is_equal r586c15,r528c71
r582c55 = or v1920,v1922
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r587c35 = and v57,r582c55
r586c43 = not r582c55
r587c39 = and v57,r586c43
r587c43 = and r587c39,r582c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r587c47 = and v57,r587c43
r587c51 = and r199c75,r582c51
r582c59 = or r587c47,r587c51
v1924 = is_equal r586c15,r185c19
v1926 = is_equal r586c15,r532c23
r582c63 = or v1924,v1926
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r587c71 = and v58,r582c63
r586c71 = not r582c63
r587c75 = and v58,r586c71
r587c79 = and r587c75,r582c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r588c3 = and v58,r587c79
r588c7 = and r199c79,r582c59
r582c67 = or r588c3,r588c7
v1928 = is_equal r586c15,r185c75
v1930 = is_equal r586c15,r532c55
r582c71 = or v1928,v1930
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r588c27 = and v59,r582c71
r589c19 = not r582c71
r588c31 = and v59,r589c19
r588c35 = and r588c31,r582c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r588c39 = and v59,r588c35
r588c43 = and r204c3,r582c67
r582c75 = or r588c39,r588c43
v1932 = is_equal r586c15,r532c75
v1934 = is_equal r586c15,r534c11
r582c79 = or v1932,v1934
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r588c63 = and v60,r582c79
r589c47 = not r582c79
r588c67 = and v60,r589c47
r588c71 = and r588c67,r582c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r588c75 = and v60,r588c71
r588c79 = and r204c7,r582c75
r591c3 = or r588c75,r588c79
v1936 = is_equal r586c15,r534c31
v1938 = is_equal r586c15,r534c47
r591c7 = or v1936,v1938
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r592c19 = and v61,r591c7
r589c75 = not r591c7
r592c23 = and v61,r589c75
r592c27 = and r592c23,r591c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r592c31 = and v61,r592c27
r592c35 = and r204c11,r591c3
r591c11 = or r592c31,r592c35
v1940 = is_equal r586c15,r534c67
v1942 = is_equal r586c15,r536c3
r591c15 = or v1940,v1942
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r592c55 = and v62,r591c15
r593c23 = not r591c15
r592c59 = and v62,r593c23
r592c63 = and r592c59,r591c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r592c67 = and v62,r592c63
r592c71 = and r204c15,r591c11
r591c19 = or r592c67,r592c71
v1944 = is_equal r586c15,r536c23
v1946 = is_equal r586c15,r536c39
r591c23 = or v1944,v1946
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r594c11 = and v63,r591c23
r593c51 = not r591c23
r594c15 = and v63,r593c51
r594c19 = and r594c15,r591c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r594c23 = and v63,r594c19
r594c27 = and r204c19,r591c19
r591c27 = or r594c23,r594c27
v1948 = is_equal r586c15,r536c59
v1950 = is_equal r586c15,r536c75
r591c31 = or v1948,v1950
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r594c47 = and v64,r591c31
r593c79 = not r591c31
r594c51 = and v64,r593c79
r594c55 = and r594c51,r591c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r594c59 = and v64,r594c55
r594c63 = and r204c23,r591c27
r591c35 = or r594c59,r594c63
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r591c35,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1952 = is_equal v65,v66
v1 = constant 0
r595c15 = sub v1,v66
v1954 = is_equal v65,r595c15
r591c39 = or v1952,v1954
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r596c3 = and v0,r591c39
r595c31 = not r591c39
r596c7 = and v0,r595c31
r596c11 = and v0,r596c7
r591c43 = or r596c11,r189c11
v87 = constant 1
r595c35 = sub v66,v87
v1956 = is_equal v65,r595c35
v87 = constant 1
r595c51 = sub v87,v66
v1958 = is_equal v65,r595c51
r591c47 = or v1956,v1958
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r596c31 = and v2,r591c47
r595c67 = not r591c47
r596c35 = and v2,r595c67
r596c39 = and r596c35,r591c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r596c43 = and v2,r596c39
r596c47 = and r189c15,r591c43
r591c51 = or r596c43,r596c47
v84 = constant 2
r595c71 = sub v66,v84
v1960 = is_equal v65,r595c71
v84 = constant 2
r597c7 = sub v84,v66
v1962 = is_equal v65,r597c7
r591c55 = or v1960,v1962
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r596c67 = and v3,r591c55
r597c23 = not r591c55
r596c71 = and v3,r597c23
r596c75 = and r596c71,r591c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r596c79 = and v3,r596c75
r598c3 = and r189c19,r591c51
r591c59 = or r596c79,r598c3
v423 = constant 3
r597c27 = sub v66,v423
v1964 = is_equal v65,r597c27
v423 = constant 3
r597c43 = sub v423,v66
v1966 = is_equal v65,r597c43
r591c63 = or v1964,v1966
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r598c23 = and v4,r591c63
r597c59 = not r591c63
r598c27 = and v4,r597c59
r598c31 = and r598c27,r591c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r598c35 = and v4,r598c31
r598c39 = and r189c23,r591c59
r591c67 = or r598c35,r598c39
v428 = constant 4
r597c63 = sub v66,v428
v1968 = is_equal v65,r597c63
v428 = constant 4
r597c79 = sub v428,v66
v1970 = is_equal v65,r597c79
r591c71 = or v1968,v1970
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r598c59 = and v5,r591c71
r599c15 = not r591c71
r598c63 = and v5,r599c15
r598c67 = and r598c63,r591c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r598c71 = and v5,r598c67
r598c75 = and r189c27,r591c67
r591c75 = or r598c71,r598c75
v433 = constant 5
r599c19 = sub v66,v433
v1972 = is_equal v65,r599c19
v433 = constant 5
r599c35 = sub v433,v66
v1974 = is_equal v65,r599c35
r591c79 = or v1972,v1974
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r601c15 = and v6,r591c79
r599c51 = not r591c79
r601c19 = and v6,r599c51
r601c23 = and r601c19,r591c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r601c27 = and v6,r601c23
r601c31 = and r189c31,r591c75
r602c3 = or r601c27,r601c31
v438 = constant 6
r599c55 = sub v66,v438
v1976 = is_equal v65,r599c55
v438 = constant 6
r599c71 = sub v438,v66
v1978 = is_equal v65,r599c71
r602c7 = or v1976,v1978
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r601c51 = and v7,r602c7
r603c7 = not r602c7
r601c55 = and v7,r603c7
r601c59 = and r601c55,r602c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r601c63 = and v7,r601c59
r601c67 = and r189c35,r602c3
r602c11 = or r601c63,r601c67
v443 = constant 7
r603c11 = sub v66,v443
v1980 = is_equal v65,r603c11
v443 = constant 7
r603c27 = sub v443,v66
v1982 = is_equal v65,r603c27
r602c15 = or v1980,v1982
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r604c7 = and v8,r602c15
r603c43 = not r602c15
r604c11 = and v8,r603c43
r604c15 = and r604c11,r602c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r604c19 = and v8,r604c15
r604c23 = and r189c39,r602c11
r602c19 = or r604c19,r604c23
v87 = constant 1
r603c47 = sub v65,v87
v1984 = is_equal r603c47,v66
v1986 = is_equal r603c47,r595c15
r602c23 = or v1984,v1986
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r604c43 = and v9,r602c23
r603c75 = not r602c23
r604c47 = and v9,r603c75
r604c51 = and r604c47,r602c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r604c55 = and v9,r604c51
r604c59 = and r189c43,r602c19
r602c27 = or r604c55,r604c59
v1988 = is_equal r603c47,r595c35
v1990 = is_equal r603c47,r595c51
r602c31 = or v1988,v1990
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r604c79 = and v10,r602c31
r605c23 = not r602c31
r606c3 = and v10,r605c23
r606c7 = and r606c3,r602c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r606c11 = and v10,r606c7
r606c15 = and r189c47,r602c27
r602c35 = or r606c11,r606c15
v1992 = is_equal r603c47,r595c71
v1994 = is_equal r603c47,r597c7
r602c39 = or v1992,v1994
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r606c35 = and v11,r602c39
r605c51 = not r602c39
r606c39 = and v11,r605c51
r606c43 = and r606c39,r602c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r606c47 = and v11,r606c43
r606c51 = and r189c51,r602c35
r602c43 = or r606c47,r606c51
v1996 = is_equal r603c47,r597c27
v1998 = is_equal r603c47,r597c43
r602c47 = or v1996,v1998
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r606c71 = and v12,r602c47
r605c79 = not r602c47
r606c75 = and v12,r605c79
r606c79 = and r606c75,r602c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r607c3 = and v12,r606c79
r607c7 = and r189c55,r602c43
r602c51 = or r607c3,r607c7
v2000 = is_equal r603c47,r597c63
v2002 = is_equal r603c47,r597c79
r602c55 = or v2000,v2002
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r607c27 = and v13,r602c55
r608c27 = not r602c55
r607c31 = and v13,r608c27
r607c35 = and r607c31,r602c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r607c39 = and v13,r607c35
r607c43 = and r189c59,r602c51
r602c59 = or r607c39,r607c43
v2004 = is_equal r603c47,r599c19
v2006 = is_equal r603c47,r599c35
r602c63 = or v2004,v2006
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r607c63 = and v14,r602c63
r608c55 = not r602c63
r607c67 = and v14,r608c55
r607c71 = and r607c67,r602c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r607c75 = and v14,r607c71
r607c79 = and r189c63,r602c59
r602c67 = or r607c75,r607c79
v2008 = is_equal r603c47,r599c55
v2010 = is_equal r603c47,r599c71
r602c71 = or v2008,v2010
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r609c19 = and v15,r602c71
r610c3 = not r602c71
r609c23 = and v15,r610c3
r609c27 = and r609c23,r602c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r609c31 = and v15,r609c27
r609c35 = and r189c67,r602c67
r602c75 = or r609c31,r609c35
v2012 = is_equal r603c47,r603c11
v2014 = is_equal r603c47,r603c27
r602c79 = or v2012,v2014
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r609c55 = and v16,r602c79
r610c31 = not r602c79
r609c59 = and v16,r610c31
r609c63 = and r609c59,r602c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r609c67 = and v16,r609c63
r609c71 = and r189c71,r602c75
r612c3 = or r609c67,r609c71
v84 = constant 2
r610c35 = sub v65,v84
v2016 = is_equal r610c35,v66
v2018 = is_equal r610c35,r595c15
r612c7 = or v2016,v2018
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r613c11 = and v17,r612c7
r610c63 = not r612c7
r613c15 = and v17,r610c63
r613c19 = and r613c15,r612c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r613c23 = and v17,r613c19
r613c27 = and r189c75,r612c3
r612c11 = or r613c23,r613c27
v2020 = is_equal r610c35,r595c35
v2022 = is_equal r610c35,r595c51
r612c15 = or v2020,v2022
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r613c47 = and v18,r612c15
r614c11 = not r612c15
r613c51 = and v18,r614c11
r613c55 = and r613c51,r612c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r613c59 = and v18,r613c55
r613c63 = and r189c79,r612c11
r612c19 = or r613c59,r613c63
v2024 = is_equal r610c35,r595c71
v2026 = is_equal r610c35,r597c7
r612c23 = or v2024,v2026
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r615c3 = and v19,r612c23
r614c39 = not r612c23
r615c7 = and v19,r614c39
r615c11 = and r615c7,r612c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r615c15 = and v19,r615c11
r615c19 = and r195c3,r612c19
r612c27 = or r615c15,r615c19
v2028 = is_equal r610c35,r597c27
v2030 = is_equal r610c35,r597c43
r612c31 = or v2028,v2030
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r615c39 = and v20,r612c31
r614c67 = not r612c31
r615c43 = and v20,r614c67
r615c47 = and r615c43,r612c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r615c51 = and v20,r615c47
r615c55 = and r195c7,r612c27
r612c35 = or r615c51,r615c55
v2032 = is_equal r610c35,r597c63
v2034 = is_equal r610c35,r597c79
r612c39 = or v2032,v2034
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r615c75 = and v21,r612c39
r616c15 = not r612c39
r615c79 = and v21,r616c15
r617c3 = and r615c79,r612c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r617c7 = and v21,r617c3
r617c11 = and r195c11,r612c35
r612c43 = or r617c7,r617c11
v2036 = is_equal r610c35,r599c19
v2038 = is_equal r610c35,r599c35
r612c47 = or v2036,v2038
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r617c31 = and v22,r612c47
r616c43 = not r612c47
r617c35 = and v22,r616c43
r617c39 = and r617c35,r612c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r617c43 = and v22,r617c39
r617c47 = and r195c15,r612c43
r612c51 = or r617c43,r617c47
v2040 = is_equal r610c35,r599c55
v2042 = is_equal r610c35,r599c71
r612c55 = or v2040,v2042
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r617c67 = and v23,r612c55
r616c71 = not r612c55
r617c71 = and v23,r616c71
r617c75 = and r617c71,r612c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r617c79 = and v23,r617c75
r618c3 = and r195c19,r612c51
r612c59 = or r617c79,r618c3
v2044 = is_equal r610c35,r603c11
v2046 = is_equal r610c35,r603c27
r612c63 = or v2044,v2046
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r618c23 = and v24,r612c63
r619c19 = not r612c63
r618c27 = and v24,r619c19
r618c31 = and r618c27,r612c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r618c35 = and v24,r618c31
r618c39 = and r195c23,r612c59
r612c67 = or r618c35,r618c39
v423 = constant 3
r619c23 = sub v65,v423
v2048 = is_equal r619c23,v66
v2050 = is_equal r619c23,r595c15
r612c71 = or v2048,v2050
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r618c59 = and v25,r612c71
r619c51 = not r612c71
r618c63 = and v25,r619c51
r618c67 = and r618c63,r612c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r618c71 = and v25,r618c67
r618c75 = and r195c27,r612c67
r612c75 = or r618c71,r618c75
v2052 = is_equal r619c23,r595c35
v2054 = is_equal r619c23,r595c51
r612c79 = or v2052,v2054
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r621c15 = and v26,r612c79
r619c79 = not r612c79
r621c19 = and v26,r619c79
r621c23 = and r621c19,r612c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r621c27 = and v26,r621c23
r621c31 = and r195c31,r612c75
r622c3 = or r621c27,r621c31
v2056 = is_equal r619c23,r595c71
v2058 = is_equal r619c23,r597c7
r622c7 = or v2056,v2058
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r621c51 = and v27,r622c7
r623c27 = not r622c7
r621c55 = and v27,r623c27
r621c59 = and r621c55,r622c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r621c63 = and v27,r621c59
r621c67 = and r195c35,r622c3
r622c11 = or r621c63,r621c67
v2060 = is_equal r619c23,r597c27
v2062 = is_equal r619c23,r597c43
r622c15 = or v2060,v2062
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r624c7 = and v28,r622c15
r623c55 = not r622c15
r624c11 = and v28,r623c55
r624c15 = and r624c11,r622c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r624c19 = and v28,r624c15
r624c23 = and r195c39,r622c11
r622c19 = or r624c19,r624c23
v2064 = is_equal r619c23,r597c63
v2066 = is_equal r619c23,r597c79
r622c23 = or v2064,v2066
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r624c43 = and v29,r622c23
r625c3 = not r622c23
r624c47 = and v29,r625c3
r624c51 = and r624c47,r622c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r624c55 = and v29,r624c51
r624c59 = and r195c43,r622c19
r622c27 = or r624c55,r624c59
v2068 = is_equal r619c23,r599c19
v2070 = is_equal r619c23,r599c35
r622c31 = or v2068,v2070
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r624c79 = and v30,r622c31
r625c31 = not r622c31
r626c3 = and v30,r625c31
r626c7 = and r626c3,r622c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r626c11 = and v30,r626c7
r626c15 = and r195c47,r622c27
r622c35 = or r626c11,r626c15
v2072 = is_equal r619c23,r599c55
v2074 = is_equal r619c23,r599c71
r622c39 = or v2072,v2074
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r626c35 = and v31,r622c39
r625c59 = not r622c39
r626c39 = and v31,r625c59
r626c43 = and r626c39,r622c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r626c47 = and v31,r626c43
r626c51 = and r195c51,r622c35
r622c43 = or r626c47,r626c51
v2076 = is_equal r619c23,r603c11
v2078 = is_equal r619c23,r603c27
r622c47 = or v2076,v2078
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r626c71 = and v32,r622c47
r627c7 = not r622c47
r626c75 = and v32,r627c7
r626c79 = and r626c75,r622c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r628c3 = and v32,r626c79
r628c7 = and r195c55,r622c43
r622c51 = or r628c3,r628c7
v428 = constant 4
r627c11 = sub v65,v428
v2080 = is_equal r627c11,v66
v2082 = is_equal r627c11,r595c15
r622c55 = or v2080,v2082
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r628c27 = and v33,r622c55
r627c39 = not r622c55
r628c31 = and v33,r627c39
r628c35 = and r628c31,r622c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r628c39 = and v33,r628c35
r628c43 = and r195c59,r622c51
r622c59 = or r628c39,r628c43
v2084 = is_equal r627c11,r595c35
v2086 = is_equal r627c11,r595c51
r622c63 = or v2084,v2086
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r628c63 = and v34,r622c63
r627c67 = not r622c63
r628c67 = and v34,r627c67
r628c71 = and r628c67,r622c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r628c75 = and v34,r628c71
r628c79 = and r195c63,r622c59
r622c67 = or r628c75,r628c79
v2088 = is_equal r627c11,r595c71
v2090 = is_equal r627c11,r597c7
r622c71 = or v2088,v2090
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r629c19 = and v35,r622c71
r630c15 = not r622c71
r629c23 = and v35,r630c15
r629c27 = and r629c23,r622c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r629c31 = and v35,r629c27
r629c35 = and r195c67,r622c67
r622c75 = or r629c31,r629c35
v2092 = is_equal r627c11,r597c27
v2094 = is_equal r627c11,r597c43
r622c79 = or v2092,v2094
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r629c55 = and v36,r622c79
r630c43 = not r622c79
r629c59 = and v36,r630c43
r629c63 = and r629c59,r622c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r629c67 = and v36,r629c63
r629c71 = and r195c71,r622c75
r632c3 = or r629c67,r629c71
v2096 = is_equal r627c11,r597c63
v2098 = is_equal r627c11,r597c79
r632c7 = or v2096,v2098
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r633c11 = and v37,r632c7
r630c71 = not r632c7
r633c15 = and v37,r630c71
r633c19 = and r633c15,r632c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r633c23 = and v37,r633c19
r633c27 = and r195c75,r632c3
r632c11 = or r633c23,r633c27
v2100 = is_equal r627c11,r599c19
v2102 = is_equal r627c11,r599c35
r632c15 = or v2100,v2102
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r633c47 = and v38,r632c15
r634c19 = not r632c15
r633c51 = and v38,r634c19
r633c55 = and r633c51,r632c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r633c59 = and v38,r633c55
r633c63 = and r195c79,r632c11
r632c19 = or r633c59,r633c63
v2104 = is_equal r627c11,r599c55
v2106 = is_equal r627c11,r599c71
r632c23 = or v2104,v2106
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r635c3 = and v39,r632c23
r634c47 = not r632c23
r635c7 = and v39,r634c47
r635c11 = and r635c7,r632c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r635c15 = and v39,r635c11
r635c19 = and r199c3,r632c19
r632c27 = or r635c15,r635c19
v2108 = is_equal r627c11,r603c11
v2110 = is_equal r627c11,r603c27
r632c31 = or v2108,v2110
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r635c39 = and v40,r632c31
r634c75 = not r632c31
r635c43 = and v40,r634c75
r635c47 = and r635c43,r632c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r635c51 = and v40,r635c47
r635c55 = and r199c7,r632c27
r632c35 = or r635c51,r635c55
v433 = constant 5
r634c79 = sub v65,v433
v2112 = is_equal r634c79,v66
v2114 = is_equal r634c79,r595c15
r632c39 = or v2112,v2114
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r635c75 = and v41,r632c39
r636c27 = not r632c39
r635c79 = and v41,r636c27
r637c3 = and r635c79,r632c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r637c7 = and v41,r637c3
r637c11 = and r199c11,r632c35
r632c43 = or r637c7,r637c11
v2116 = is_equal r634c79,r595c35
v2118 = is_equal r634c79,r595c51
r632c47 = or v2116,v2118
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r637c31 = and v42,r632c47
r636c55 = not r632c47
r637c35 = and v42,r636c55
r637c39 = and r637c35,r632c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r637c43 = and v42,r637c39
r637c47 = and r199c15,r632c43
r632c51 = or r637c43,r637c47
v2120 = is_equal r634c79,r595c71
v2122 = is_equal r634c79,r597c7
r632c55 = or v2120,v2122
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r637c67 = and v43,r632c55
r638c3 = not r632c55
r637c71 = and v43,r638c3
r637c75 = and r637c71,r632c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r637c79 = and v43,r637c75
r639c3 = and r199c19,r632c51
r632c59 = or r637c79,r639c3
v2124 = is_equal r634c79,r597c27
v2126 = is_equal r634c79,r597c43
r632c63 = or v2124,v2126
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r639c23 = and v44,r632c63
r638c31 = not r632c63
r639c27 = and v44,r638c31
r639c31 = and r639c27,r632c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r639c35 = and v44,r639c31
r639c39 = and r199c23,r632c59
r632c67 = or r639c35,r639c39
v2128 = is_equal r634c79,r597c63
v2130 = is_equal r634c79,r597c79
r632c71 = or v2128,v2130
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r639c59 = and v45,r632c71
r638c59 = not r632c71
r639c63 = and v45,r638c59
r639c67 = and r639c63,r632c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r639c71 = and v45,r639c67
r639c75 = and r199c27,r632c67
r632c75 = or r639c71,r639c75
v2132 = is_equal r634c79,r599c19
v2134 = is_equal r634c79,r599c35
r632c79 = or v2132,v2134
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r641c15 = and v46,r632c79
r642c7 = not r632c79
r641c19 = and v46,r642c7
r641c23 = and r641c19,r632c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r641c27 = and v46,r641c23
r641c31 = and r199c31,r632c75
r643c3 = or r641c27,r641c31
v2136 = is_equal r634c79,r599c55
v2138 = is_equal r634c79,r599c71
r643c7 = or v2136,v2138
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r641c51 = and v47,r643c7
r642c35 = not r643c7
r641c55 = and v47,r642c35
r641c59 = and r641c55,r643c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r641c63 = and v47,r641c59
r641c67 = and r199c35,r643c3
r643c11 = or r641c63,r641c67
v2140 = is_equal r634c79,r603c11
v2142 = is_equal r634c79,r603c27
r643c15 = or v2140,v2142
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r644c7 = and v48,r643c15
r642c63 = not r643c15
r644c11 = and v48,r642c63
r644c15 = and r644c11,r643c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r644c19 = and v48,r644c15
r644c23 = and r199c39,r643c11
r643c19 = or r644c19,r644c23
v438 = constant 6
r642c67 = sub v65,v438
v2144 = is_equal r642c67,v66
v2146 = is_equal r642c67,r595c15
r643c23 = or v2144,v2146
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r644c43 = and v49,r643c23
r645c15 = not r643c23
r644c47 = and v49,r645c15
r644c51 = and r644c47,r643c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r644c55 = and v49,r644c51
r644c59 = and r199c43,r643c19
r643c27 = or r644c55,r644c59
v2148 = is_equal r642c67,r595c35
v2150 = is_equal r642c67,r595c51
r643c31 = or v2148,v2150
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r644c79 = and v50,r643c31
r645c43 = not r643c31
r646c3 = and v50,r645c43
r646c7 = and r646c3,r643c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r646c11 = and v50,r646c7
r646c15 = and r199c47,r643c27
r643c35 = or r646c11,r646c15
v2152 = is_equal r642c67,r595c71
v2154 = is_equal r642c67,r597c7
r643c39 = or v2152,v2154
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r646c35 = and v51,r643c39
r645c71 = not r643c39
r646c39 = and v51,r645c71
r646c43 = and r646c39,r643c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r646c47 = and v51,r646c43
r646c51 = and r199c51,r643c35
r643c43 = or r646c47,r646c51
v2156 = is_equal r642c67,r597c27
v2158 = is_equal r642c67,r597c43
r643c47 = or v2156,v2158
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r646c71 = and v52,r643c47
r647c19 = not r643c47
r646c75 = and v52,r647c19
r646c79 = and r646c75,r643c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r648c3 = and v52,r646c79
r648c7 = and r199c55,r643c43
r643c51 = or r648c3,r648c7
v2160 = is_equal r642c67,r597c63
v2162 = is_equal r642c67,r597c79
r643c55 = or v2160,v2162
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r648c27 = and v53,r643c55
r647c47 = not r643c55
r648c31 = and v53,r647c47
r648c35 = and r648c31,r643c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r648c39 = and v53,r648c35
r648c43 = and r199c59,r643c51
r643c59 = or r648c39,r648c43
v2164 = is_equal r642c67,r599c19
v2166 = is_equal r642c67,r599c35
r643c63 = or v2164,v2166
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r648c63 = and v54,r643c63
r647c75 = not r643c63
r648c67 = and v54,r647c75
r648c71 = and r648c67,r643c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r648c75 = and v54,r648c71
r648c79 = and r199c63,r643c59
r643c67 = or r648c75,r648c79
v2168 = is_equal r642c67,r599c55
v2170 = is_equal r642c67,r599c71
r643c71 = or v2168,v2170
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r650c19 = and v55,r643c71
r649c23 = not r643c71
r650c23 = and v55,r649c23
r650c27 = and r650c23,r643c67
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r650c31 = and v55,r650c27
r650c35 = and r199c67,r643c67
r643c75 = or r650c31,r650c35
v2172 = is_equal r642c67,r603c11
v2174 = is_equal r642c67,r603c27
r643c79 = or v2172,v2174
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r650c55 = and v56,r643c79
r649c51 = not r643c79
r650c59 = and v56,r649c51
r650c63 = and r650c59,r643c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r650c67 = and v56,r650c63
r650c71 = and r199c71,r643c75
r652c3 = or r650c67,r650c71
v443 = constant 7
r649c55 = sub v65,v443
v2176 = is_equal r649c55,v66
v2178 = is_equal r649c55,r595c15
r652c7 = or v2176,v2178
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r653c11 = and v57,r652c7
r654c3 = not r652c7
r653c15 = and v57,r654c3
r653c19 = and r653c15,r652c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r653c23 = and v57,r653c19
r653c27 = and r199c75,r652c3
r652c11 = or r653c23,r653c27
v2180 = is_equal r649c55,r595c35
v2182 = is_equal r649c55,r595c51
r652c15 = or v2180,v2182
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r653c47 = and v58,r652c15
r654c31 = not r652c15
r653c51 = and v58,r654c31
r653c55 = and r653c51,r652c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r653c59 = and v58,r653c55
r653c63 = and r199c79,r652c11
r652c19 = or r653c59,r653c63
v2184 = is_equal r649c55,r595c71
v2186 = is_equal r649c55,r597c7
r652c23 = or v2184,v2186
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r655c3 = and v59,r652c23
r654c59 = not r652c23
r655c7 = and v59,r654c59
r655c11 = and r655c7,r652c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r655c15 = and v59,r655c11
r655c19 = and r204c3,r652c19
r652c27 = or r655c15,r655c19
v2188 = is_equal r649c55,r597c27
v2190 = is_equal r649c55,r597c43
r652c31 = or v2188,v2190
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r655c39 = and v60,r652c31
r656c7 = not r652c31
r655c43 = and v60,r656c7
r655c47 = and r655c43,r652c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r655c51 = and v60,r655c47
r655c55 = and r204c7,r652c27
r652c35 = or r655c51,r655c55
v2192 = is_equal r649c55,r597c63
v2194 = is_equal r649c55,r597c79
r652c39 = or v2192,v2194
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r655c75 = and v61,r652c39
r656c35 = not r652c39
r655c79 = and v61,r656c35
r657c3 = and r655c79,r652c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r657c7 = and v61,r657c3
r657c11 = and r204c11,r652c35
r652c43 = or r657c7,r657c11
v2196 = is_equal r649c55,r599c19
v2198 = is_equal r649c55,r599c35
r652c47 = or v2196,v2198
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r657c31 = and v62,r652c47
r656c63 = not r652c47
r657c35 = and v62,r656c63
r657c39 = and r657c35,r652c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r657c43 = and v62,r657c39
r657c47 = and r204c15,r652c43
r652c51 = or r657c43,r657c47
v2200 = is_equal r649c55,r599c55
v2202 = is_equal r649c55,r599c71
r652c55 = or v2200,v2202
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r657c67 = and v63,r652c55
r658c11 = not r652c55
r657c71 = and v63,r658c11
r657c75 = and r657c71,r652c51
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r657c79 = and v63,r657c75
r659c3 = and r204c19,r652c51
r652c59 = or r657c79,r659c3
v2204 = is_equal r649c55,r603c11
v2206 = is_equal r649c55,r603c27
r652c63 = or v2204,v2206
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r659c23 = and v64,r652c63
r658c39 = not r652c63
r659c27 = and v64,r658c39
r659c31 = and r659c27,r652c59
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r659c35 = and v64,r659c31
r659c39 = and r204c23,r652c59
r652c67 = or r659c35,r659c39
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect r652c67,v87
register_public_inputs (v0,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29,v30,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v43,v44,v45,v46,v47,v48,v49,v50,v51,v52,v53,v54,v55,v56,v57,v58,v59,v60,v61,v62,v63,v64)
register_public_inputs (v65,v66)
