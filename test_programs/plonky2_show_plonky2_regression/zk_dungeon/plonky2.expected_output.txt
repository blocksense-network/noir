v0 = add_virtual_bool_target_safe
v2 = add_virtual_bool_target_safe
v3 = add_virtual_bool_target_safe
v4 = add_virtual_bool_target_safe
v5 = add_virtual_bool_target_safe
v6 = add_virtual_bool_target_safe
v7 = add_virtual_bool_target_safe
v8 = add_virtual_bool_target_safe
v9 = add_virtual_bool_target_safe
v10 = add_virtual_bool_target_safe
v11 = add_virtual_bool_target_safe
v12 = add_virtual_bool_target_safe
v13 = add_virtual_bool_target_safe
v14 = add_virtual_bool_target_safe
v15 = add_virtual_bool_target_safe
v16 = add_virtual_bool_target_safe
v17 = add_virtual_bool_target_safe
v18 = add_virtual_bool_target_safe
v19 = add_virtual_bool_target_safe
v20 = add_virtual_bool_target_safe
v21 = add_virtual_bool_target_safe
v22 = add_virtual_bool_target_safe
v23 = add_virtual_bool_target_safe
v24 = add_virtual_bool_target_safe
v25 = add_virtual_bool_target_safe
v26 = add_virtual_bool_target_safe
v27 = add_virtual_bool_target_safe
v28 = add_virtual_bool_target_safe
v29 = add_virtual_bool_target_safe
v30 = add_virtual_bool_target_safe
v31 = add_virtual_bool_target_safe
v32 = add_virtual_bool_target_safe
v33 = add_virtual_bool_target_safe
v34 = add_virtual_bool_target_safe
v35 = add_virtual_bool_target_safe
v36 = add_virtual_bool_target_safe
v37 = add_virtual_bool_target_safe
v38 = add_virtual_bool_target_safe
v39 = add_virtual_bool_target_safe
v40 = add_virtual_bool_target_safe
v41 = add_virtual_bool_target_safe
v42 = add_virtual_bool_target_safe
v43 = add_virtual_bool_target_safe
v44 = add_virtual_bool_target_safe
v45 = add_virtual_bool_target_safe
v46 = add_virtual_bool_target_safe
v47 = add_virtual_bool_target_safe
v48 = add_virtual_bool_target_safe
v49 = add_virtual_bool_target_safe
v50 = add_virtual_bool_target_safe
v51 = add_virtual_bool_target_safe
v52 = add_virtual_bool_target_safe
v53 = add_virtual_bool_target_safe
v54 = add_virtual_bool_target_safe
v55 = add_virtual_bool_target_safe
v56 = add_virtual_bool_target_safe
v57 = add_virtual_bool_target_safe
v58 = add_virtual_bool_target_safe
v59 = add_virtual_bool_target_safe
v60 = add_virtual_bool_target_safe
v61 = add_virtual_bool_target_safe
v62 = add_virtual_bool_target_safe
v63 = add_virtual_bool_target_safe
v64 = add_virtual_bool_target_safe
v65 = add_virtual_target
v66 = add_virtual_target
v67 = add_virtual_target
v68 = add_virtual_target
v69 = add_virtual_target
v70 = add_virtual_target
v71 = add_virtual_target
v72 = add_virtual_target
v73 = add_virtual_target
v74 = add_virtual_target
v75 = add_virtual_target
v76 = add_virtual_target
v77 = add_virtual_target
v78 = add_virtual_target
v79 = add_virtual_target
v80 = add_virtual_target
v81 = add_virtual_target
v82 = add_virtual_target
# [src/dungeon.nr]
# [22] assert(path[0].x == 0);
v1 = constant 0
connect v67,v1
# [23] assert(path[0].y == 0);
v1 = constant 0
connect v68,v1
# [24] assert(path[7].x == dagger.x);
connect v81,v65
# [25] assert(path[7].y == dagger.y);
connect v82,v66
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r4c1,r4c2,r4c3,r4c4,r4c5,r4c6,r4c7,r4c8,r4c9,r4c10,r4c11,r4c12,r4c13,r4c14,r4c15,r4c16,r4c17,r4c18,r4c19,r4c20,r4c21,r4c22,r4c23,r4c24,r4c25,r4c26,r4c27,r4c28,r4c29,r4c30,r4c31,r4c32,r4c33,r4c34,r4c35,r4c36,r4c37,r4c38,r4c39,r4c40,r4c41,r4c42,r4c43,r4c44,r4c45,r4c46,r4c47,r4c48,r4c49,r4c50,r4c51,r4c52,r4c53,r4c54,r4c55,r4c56,r4c57,r4c58,r4c59,r4c60,r4c61,r4c62,r4c63,r5c1,r5c2,r5c3,r5c4,r5c5,r5c6,r5c7,r5c8,r5c9,r5c10,r5c11,r5c12,r5c13,r5c14,r5c15,r5c16,r5c17,r5c18,r5c19,r5c20,r5c21,r5c22,r5c23,r5c24,r5c25,r5c26,r5c27,r5c28,r5c29,r5c30,r5c31,r5c32,r5c33,r5c34,r5c35,r5c36,r5c37,r5c38,r5c39,r5c40,r5c41,r5c42,r5c43,r5c44,r5c45,r5c46,r5c47,r5c48,r5c49,r5c50,r5c51,r5c52,r5c53,r5c54,r5c55,r5c56,r5c57,r5c58,r5c59,r5c60,r5c61,r5c62,r5c63,r6c1,r6c2,r6c3,r6c4,r6c5,r6c6,r6c7,r6c8,r6c9,r6c10,r6c11,r6c12,r6c13,r6c14,r6c15,r6c16,r6c17,r6c18,r6c19,r6c20,r6c21,r6c22,r6c23,r6c24,r6c25,r6c26,r6c27,r6c28,r6c29,r6c30,r6c31,r6c32,r6c33,r6c34,r6c35,r6c36,r6c37,r6c38,r6c39,r6c40,r6c41,r6c42,r6c43,r6c44,r6c45,r6c46,r6c47,r6c48,r6c49,r6c50,r6c51,r6c52,r6c53,r6c54,r6c55,r6c56,r6c57,r6c58,r6c59,r6c60,r6c61,r6c62,r6c63,r7c1,r7c2,r7c3,r7c4,r7c5,r7c6,r7c7,r7c8,r7c9,r7c10,r7c11,r7c12,r7c13,r7c14,r7c15,r7c16,r7c17,r7c18,r7c19,r7c20,r7c21,r7c22,r7c23,r7c24,r7c25,r7c26,r7c27,r7c28,r7c29,r7c30,r7c31,r7c32,r7c33,r7c34,r7c35,r7c36,r7c37,r7c38,r7c39,r7c40,r7c41,r7c42,r7c43,r7c44,r7c45,r7c46,r7c47,r7c48,r7c49,r7c50,r7c51,r7c52,r7c53,r7c54,r7c55,r7c56,r7c57,r7c58,r7c59,r7c60,r7c61,r7c62,r7c63,r8c1,r8c2) = split_le v69,254
r9c43 = le_sum (r4c1,r4c2,r4c3,r4c4,r4c5,r4c6,r4c7,r4c8)
v85 = add_virtual_target
connect r9c43,v85
v86 = constant 8
# lessthan begin (a = v85, b = v86, signed = false)
(r10c1,r10c2,r10c3,r10c4,r10c5,r10c6,r10c7,r10c8) = split_le v85,8
(r11c1,r11c2,r11c3,r11c4,r11c5,r11c6,r11c7,r11c8) = split_le v86,8
r3c19 = not r10c8
r12c3 = and r3c19,r11c8
v88 = is_equal r10c8,r11c8
r3c35 = not r10c7
r12c15 = and r3c35,r11c7
r12c19 = and r12c15,v88
r9c47 = or r12c3,r12c19
v90 = is_equal r10c7,r11c7
r12c31 = and v88,v90
r3c51 = not r10c6
r12c35 = and r3c51,r11c6
r12c39 = and r12c35,r12c31
r9c51 = or r9c47,r12c39
v92 = is_equal r10c6,r11c6
r12c51 = and r12c31,v92
r3c67 = not r10c5
r12c55 = and r3c67,r11c5
r12c59 = and r12c55,r12c51
r9c55 = or r9c51,r12c59
v94 = is_equal r10c5,r11c5
r12c71 = and r12c51,v94
r14c3 = not r10c4
r12c75 = and r14c3,r11c4
r12c79 = and r12c75,r12c71
r9c59 = or r9c55,r12c79
v96 = is_equal r10c4,r11c4
r15c11 = and r12c71,v96
r14c19 = not r10c3
r15c15 = and r14c19,r11c3
r15c19 = and r15c15,r15c11
r9c63 = or r9c59,r15c19
v98 = is_equal r10c3,r11c3
r15c31 = and r15c11,v98
r14c35 = not r10c2
r15c35 = and r14c35,r11c2
r15c39 = and r15c35,r15c31
r9c67 = or r9c63,r15c39
v100 = is_equal r10c2,r11c2
r15c51 = and r15c31,v100
r14c51 = not r10c1
r15c55 = and r14c51,r11c1
r15c59 = and r15c55,r15c51
r9c71 = or r9c67,r15c59
# lessthan end (result = r9c71)
(r16c1,r16c2,r16c3,r16c4,r16c5,r16c6,r16c7,r16c8,r16c9,r16c10,r16c11,r16c12,r16c13,r16c14,r16c15,r16c16,r16c17,r16c18,r16c19,r16c20,r16c21,r16c22,r16c23,r16c24,r16c25,r16c26,r16c27,r16c28,r16c29,r16c30,r16c31,r16c32,r16c33,r16c34,r16c35,r16c36,r16c37,r16c38,r16c39,r16c40,r16c41,r16c42,r16c43,r16c44,r16c45,r16c46,r16c47,r16c48,r16c49,r16c50,r16c51,r16c52,r16c53,r16c54,r16c55,r16c56,r16c57,r16c58,r16c59,r16c60,r16c61,r16c62,r16c63,r17c1,r17c2,r17c3,r17c4,r17c5,r17c6,r17c7,r17c8,r17c9,r17c10,r17c11,r17c12,r17c13,r17c14,r17c15,r17c16,r17c17,r17c18,r17c19,r17c20,r17c21,r17c22,r17c23,r17c24,r17c25,r17c26,r17c27,r17c28,r17c29,r17c30,r17c31,r17c32,r17c33,r17c34,r17c35,r17c36,r17c37,r17c38,r17c39,r17c40,r17c41,r17c42,r17c43,r17c44,r17c45,r17c46,r17c47,r17c48,r17c49,r17c50,r17c51,r17c52,r17c53,r17c54,r17c55,r17c56,r17c57,r17c58,r17c59,r17c60,r17c61,r17c62,r17c63,r18c1,r18c2,r18c3,r18c4,r18c5,r18c6,r18c7,r18c8,r18c9,r18c10,r18c11,r18c12,r18c13,r18c14,r18c15,r18c16,r18c17,r18c18,r18c19,r18c20,r18c21,r18c22,r18c23,r18c24,r18c25,r18c26,r18c27,r18c28,r18c29,r18c30,r18c31,r18c32,r18c33,r18c34,r18c35,r18c36,r18c37,r18c38,r18c39,r18c40,r18c41,r18c42,r18c43,r18c44,r18c45,r18c46,r18c47,r18c48,r18c49,r18c50,r18c51,r18c52,r18c53,r18c54,r18c55,r18c56,r18c57,r18c58,r18c59,r18c60,r18c61,r18c62,r18c63,r19c1,r19c2,r19c3,r19c4,r19c5,r19c6,r19c7,r19c8,r19c9,r19c10,r19c11,r19c12,r19c13,r19c14,r19c15,r19c16,r19c17,r19c18,r19c19,r19c20,r19c21,r19c22,r19c23,r19c24,r19c25,r19c26,r19c27,r19c28,r19c29,r19c30,r19c31,r19c32,r19c33,r19c34,r19c35,r19c36,r19c37,r19c38,r19c39,r19c40,r19c41,r19c42,r19c43,r19c44,r19c45,r19c46,r19c47,r19c48,r19c49,r19c50,r19c51,r19c52,r19c53,r19c54,r19c55,r19c56,r19c57,r19c58,r19c59,r19c60,r19c61,r19c62,r19c63,r20c1,r20c2) = split_le v70,254
r21c35 = le_sum (r16c1,r16c2,r16c3,r16c4,r16c5,r16c6,r16c7,r16c8)
v102 = add_virtual_target
connect r21c35,v102
v86 = constant 8
# lessthan begin (a = v102, b = v86, signed = false)
(r22c1,r22c2,r22c3,r22c4,r22c5,r22c6,r22c7,r22c8) = split_le v102,8
(r23c1,r23c2,r23c3,r23c4,r23c5,r23c6,r23c7,r23c8) = split_le v86,8
r14c55 = not r22c8
r15c63 = and r14c55,r23c8
v103 = is_equal r22c8,r23c8
r14c71 = not r22c7
r15c75 = and r14c71,r23c7
r15c79 = and r15c75,v103
r21c39 = or r15c63,r15c79
v105 = is_equal r22c7,r23c7
r24c11 = and v103,v105
r25c7 = not r22c6
r24c15 = and r25c7,r23c6
r24c19 = and r24c15,r24c11
r21c43 = or r21c39,r24c19
v107 = is_equal r22c6,r23c6
r24c31 = and r24c11,v107
r25c23 = not r22c5
r24c35 = and r25c23,r23c5
r24c39 = and r24c35,r24c31
r21c47 = or r21c43,r24c39
v109 = is_equal r22c5,r23c5
r24c51 = and r24c31,v109
r25c39 = not r22c4
r24c55 = and r25c39,r23c4
r24c59 = and r24c55,r24c51
r21c51 = or r21c47,r24c59
v111 = is_equal r22c4,r23c4
r24c71 = and r24c51,v111
r25c55 = not r22c3
r24c75 = and r25c55,r23c3
r24c79 = and r24c75,r24c71
r21c55 = or r21c51,r24c79
v113 = is_equal r22c3,r23c3
r26c11 = and r24c71,v113
r25c71 = not r22c2
r26c15 = and r25c71,r23c2
r26c19 = and r26c15,r26c11
r21c59 = or r21c55,r26c19
v115 = is_equal r22c2,r23c2
r26c31 = and r26c11,v115
r27c7 = not r22c1
r26c35 = and r27c7,r23c1
r26c39 = and r26c35,r26c31
r21c63 = or r21c59,r26c39
# lessthan end (result = r21c63)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r9c71,v87
v87 = constant_bool true
connect r21c63,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
v117 = is_equal v84,v69
v87 = constant 1
v119 = is_equal v87,v70
r26c59 = and v117,v119
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v121 = constant 18446744069414584319
v122 = is_equal v121,v69
r26c71 = and v122,v119
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r21c67 = or r26c59,r26c71
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v124 = constant 18446744069414584320
v125 = is_equal v124,v70
r28c3 = and v117,v125
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r21c71 = or r21c67,r28c3
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r28c7 = and v122,v125
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r21c75 = or r21c71,r28c7
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
v127 = is_equal v87,v69
v84 = constant 2
v129 = is_equal v84,v70
r28c27 = and v127,v129
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r21c79 = or r21c75,r28c27
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v124 = constant 18446744069414584320
v131 = is_equal v124,v69
r28c39 = and v131,v129
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r30c3 = or r21c79,r28c39
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v121 = constant 18446744069414584319
v133 = is_equal v121,v70
r28c51 = and v127,v133
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r30c7 = or r30c3,r28c51
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r28c55 = and v131,v133
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r30c11 = or r30c7,r28c55
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r30c11,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r32c1,r32c2,r32c3,r32c4,r32c5,r32c6,r32c7,r32c8,r32c9,r32c10,r32c11,r32c12,r32c13,r32c14,r32c15,r32c16,r32c17,r32c18,r32c19,r32c20,r32c21,r32c22,r32c23,r32c24,r32c25,r32c26,r32c27,r32c28,r32c29,r32c30,r32c31,r32c32,r32c33,r32c34,r32c35,r32c36,r32c37,r32c38,r32c39,r32c40,r32c41,r32c42,r32c43,r32c44,r32c45,r32c46,r32c47,r32c48,r32c49,r32c50,r32c51,r32c52,r32c53,r32c54,r32c55,r32c56,r32c57,r32c58,r32c59,r32c60,r32c61,r32c62,r32c63,r33c1,r33c2,r33c3,r33c4,r33c5,r33c6,r33c7,r33c8,r33c9,r33c10,r33c11,r33c12,r33c13,r33c14,r33c15,r33c16,r33c17,r33c18,r33c19,r33c20,r33c21,r33c22,r33c23,r33c24,r33c25,r33c26,r33c27,r33c28,r33c29,r33c30,r33c31,r33c32,r33c33,r33c34,r33c35,r33c36,r33c37,r33c38,r33c39,r33c40,r33c41,r33c42,r33c43,r33c44,r33c45,r33c46,r33c47,r33c48,r33c49,r33c50,r33c51,r33c52,r33c53,r33c54,r33c55,r33c56,r33c57,r33c58,r33c59,r33c60,r33c61,r33c62,r33c63,r34c1,r34c2,r34c3,r34c4,r34c5,r34c6,r34c7,r34c8,r34c9,r34c10,r34c11,r34c12,r34c13,r34c14,r34c15,r34c16,r34c17,r34c18,r34c19,r34c20,r34c21,r34c22,r34c23,r34c24,r34c25,r34c26,r34c27,r34c28,r34c29,r34c30,r34c31,r34c32,r34c33,r34c34,r34c35,r34c36,r34c37,r34c38,r34c39,r34c40,r34c41,r34c42,r34c43,r34c44,r34c45,r34c46,r34c47,r34c48,r34c49,r34c50,r34c51,r34c52,r34c53,r34c54,r34c55,r34c56,r34c57,r34c58,r34c59,r34c60,r34c61,r34c62,r34c63,r35c1,r35c2,r35c3,r35c4,r35c5,r35c6,r35c7,r35c8,r35c9,r35c10,r35c11,r35c12,r35c13,r35c14,r35c15,r35c16,r35c17,r35c18,r35c19,r35c20,r35c21,r35c22,r35c23,r35c24,r35c25,r35c26,r35c27,r35c28,r35c29,r35c30,r35c31,r35c32,r35c33,r35c34,r35c35,r35c36,r35c37,r35c38,r35c39,r35c40,r35c41,r35c42,r35c43,r35c44,r35c45,r35c46,r35c47,r35c48,r35c49,r35c50,r35c51,r35c52,r35c53,r35c54,r35c55,r35c56,r35c57,r35c58,r35c59,r35c60,r35c61,r35c62,r35c63,r36c1,r36c2) = split_le v71,254
r30c55 = le_sum (r32c1,r32c2,r32c3,r32c4,r32c5,r32c6,r32c7,r32c8)
v135 = add_virtual_target
connect r30c55,v135
v86 = constant 8
# lessthan begin (a = v135, b = v86, signed = false)
(r37c1,r37c2,r37c3,r37c4,r37c5,r37c6,r37c7,r37c8) = split_le v135,8
(r38c1,r38c2,r38c3,r38c4,r38c5,r38c6,r38c7,r38c8) = split_le v86,8
r29c27 = not r37c8
r28c59 = and r29c27,r38c8
v136 = is_equal r37c8,r38c8
r29c43 = not r37c7
r28c71 = and r29c43,r38c7
r28c75 = and r28c71,v136
r30c59 = or r28c59,r28c75
v138 = is_equal r37c7,r38c7
r39c7 = and v136,v138
r29c59 = not r37c6
r39c11 = and r29c59,r38c6
r39c15 = and r39c11,r39c7
r30c63 = or r30c59,r39c15
v140 = is_equal r37c6,r38c6
r39c27 = and r39c7,v140
r29c75 = not r37c5
r39c31 = and r29c75,r38c5
r39c35 = and r39c31,r39c27
r30c67 = or r30c63,r39c35
v142 = is_equal r37c5,r38c5
r39c47 = and r39c27,v142
r40c11 = not r37c4
r39c51 = and r40c11,r38c4
r39c55 = and r39c51,r39c47
r30c71 = or r30c67,r39c55
v144 = is_equal r37c4,r38c4
r39c67 = and r39c47,v144
r40c27 = not r37c3
r39c71 = and r40c27,r38c3
r39c75 = and r39c71,r39c67
r30c75 = or r30c71,r39c75
v146 = is_equal r37c3,r38c3
r41c7 = and r39c67,v146
r40c43 = not r37c2
r41c11 = and r40c43,r38c2
r41c15 = and r41c11,r41c7
r30c79 = or r30c75,r41c15
v148 = is_equal r37c2,r38c2
r41c27 = and r41c7,v148
r40c59 = not r37c1
r41c31 = and r40c59,r38c1
r41c35 = and r41c31,r41c27
r42c3 = or r30c79,r41c35
# lessthan end (result = r42c3)
(r43c1,r43c2,r43c3,r43c4,r43c5,r43c6,r43c7,r43c8,r43c9,r43c10,r43c11,r43c12,r43c13,r43c14,r43c15,r43c16,r43c17,r43c18,r43c19,r43c20,r43c21,r43c22,r43c23,r43c24,r43c25,r43c26,r43c27,r43c28,r43c29,r43c30,r43c31,r43c32,r43c33,r43c34,r43c35,r43c36,r43c37,r43c38,r43c39,r43c40,r43c41,r43c42,r43c43,r43c44,r43c45,r43c46,r43c47,r43c48,r43c49,r43c50,r43c51,r43c52,r43c53,r43c54,r43c55,r43c56,r43c57,r43c58,r43c59,r43c60,r43c61,r43c62,r43c63,r44c1,r44c2,r44c3,r44c4,r44c5,r44c6,r44c7,r44c8,r44c9,r44c10,r44c11,r44c12,r44c13,r44c14,r44c15,r44c16,r44c17,r44c18,r44c19,r44c20,r44c21,r44c22,r44c23,r44c24,r44c25,r44c26,r44c27,r44c28,r44c29,r44c30,r44c31,r44c32,r44c33,r44c34,r44c35,r44c36,r44c37,r44c38,r44c39,r44c40,r44c41,r44c42,r44c43,r44c44,r44c45,r44c46,r44c47,r44c48,r44c49,r44c50,r44c51,r44c52,r44c53,r44c54,r44c55,r44c56,r44c57,r44c58,r44c59,r44c60,r44c61,r44c62,r44c63,r45c1,r45c2,r45c3,r45c4,r45c5,r45c6,r45c7,r45c8,r45c9,r45c10,r45c11,r45c12,r45c13,r45c14,r45c15,r45c16,r45c17,r45c18,r45c19,r45c20,r45c21,r45c22,r45c23,r45c24,r45c25,r45c26,r45c27,r45c28,r45c29,r45c30,r45c31,r45c32,r45c33,r45c34,r45c35,r45c36,r45c37,r45c38,r45c39,r45c40,r45c41,r45c42,r45c43,r45c44,r45c45,r45c46,r45c47,r45c48,r45c49,r45c50,r45c51,r45c52,r45c53,r45c54,r45c55,r45c56,r45c57,r45c58,r45c59,r45c60,r45c61,r45c62,r45c63,r46c1,r46c2,r46c3,r46c4,r46c5,r46c6,r46c7,r46c8,r46c9,r46c10,r46c11,r46c12,r46c13,r46c14,r46c15,r46c16,r46c17,r46c18,r46c19,r46c20,r46c21,r46c22,r46c23,r46c24,r46c25,r46c26,r46c27,r46c28,r46c29,r46c30,r46c31,r46c32,r46c33,r46c34,r46c35,r46c36,r46c37,r46c38,r46c39,r46c40,r46c41,r46c42,r46c43,r46c44,r46c45,r46c46,r46c47,r46c48,r46c49,r46c50,r46c51,r46c52,r46c53,r46c54,r46c55,r46c56,r46c57,r46c58,r46c59,r46c60,r46c61,r46c62,r46c63,r47c1,r47c2) = split_le v72,254
r42c47 = le_sum (r43c1,r43c2,r43c3,r43c4,r43c5,r43c6,r43c7,r43c8)
v150 = add_virtual_target
connect r42c47,v150
v86 = constant 8
# lessthan begin (a = v150, b = v86, signed = false)
(r48c1,r48c2,r48c3,r48c4,r48c5,r48c6,r48c7,r48c8) = split_le v150,8
(r49c1,r49c2,r49c3,r49c4,r49c5,r49c6,r49c7,r49c8) = split_le v86,8
r40c63 = not r48c8
r41c39 = and r40c63,r49c8
v151 = is_equal r48c8,r49c8
r40c79 = not r48c7
r41c51 = and r40c79,r49c7
r41c55 = and r41c51,v151
r42c51 = or r41c39,r41c55
v153 = is_equal r48c7,r49c7
r41c67 = and v151,v153
r50c15 = not r48c6
r41c71 = and r50c15,r49c6
r41c75 = and r41c71,r41c67
r42c55 = or r42c51,r41c75
v155 = is_equal r48c6,r49c6
r51c7 = and r41c67,v155
r50c31 = not r48c5
r51c11 = and r50c31,r49c5
r51c15 = and r51c11,r51c7
r42c59 = or r42c55,r51c15
v157 = is_equal r48c5,r49c5
r51c27 = and r51c7,v157
r50c47 = not r48c4
r51c31 = and r50c47,r49c4
r51c35 = and r51c31,r51c27
r42c63 = or r42c59,r51c35
v159 = is_equal r48c4,r49c4
r51c47 = and r51c27,v159
r50c63 = not r48c3
r51c51 = and r50c63,r49c3
r51c55 = and r51c51,r51c47
r42c67 = or r42c63,r51c55
v161 = is_equal r48c3,r49c3
r51c67 = and r51c47,v161
r50c79 = not r48c2
r51c71 = and r50c79,r49c2
r51c75 = and r51c71,r51c67
r42c71 = or r42c67,r51c75
v163 = is_equal r48c2,r49c2
r53c7 = and r51c67,v163
r52c15 = not r48c1
r53c11 = and r52c15,r49c1
r53c15 = and r53c11,r53c7
r42c75 = or r42c71,r53c15
# lessthan end (result = r42c75)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r42c3,v87
v87 = constant_bool true
connect r42c75,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r42c79 = add v69,v84
v165 = is_equal r42c79,v71
v87 = constant 1
r54c3 = add v70,v87
v167 = is_equal r54c3,v72
r53c35 = and v165,v167
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r52c43 = sub v69,v84
v169 = is_equal r52c43,v71
r53c47 = and v169,v167
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r54c7 = or r53c35,r53c47
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r52c59 = sub v70,v87
v171 = is_equal r52c59,v72
r53c59 = and v165,v171
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r54c11 = or r54c7,r53c59
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r53c63 = and v169,v171
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r54c15 = or r54c11,r53c63
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r54c19 = add v69,v87
v173 = is_equal r54c19,v71
v84 = constant 2
r54c23 = add v70,v84
v175 = is_equal r54c23,v72
r56c3 = and v173,v175
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r54c27 = or r54c15,r56c3
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r55c19 = sub v69,v87
v177 = is_equal r55c19,v71
r56c15 = and v177,v175
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r54c31 = or r54c27,r56c15
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r55c35 = sub v70,v84
v179 = is_equal r55c35,v72
r56c27 = and v173,v179
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r54c35 = or r54c31,r56c27
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r56c31 = and v177,v179
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r54c39 = or r54c35,r56c31
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r54c39,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r58c1,r58c2,r58c3,r58c4,r58c5,r58c6,r58c7,r58c8,r58c9,r58c10,r58c11,r58c12,r58c13,r58c14,r58c15,r58c16,r58c17,r58c18,r58c19,r58c20,r58c21,r58c22,r58c23,r58c24,r58c25,r58c26,r58c27,r58c28,r58c29,r58c30,r58c31,r58c32,r58c33,r58c34,r58c35,r58c36,r58c37,r58c38,r58c39,r58c40,r58c41,r58c42,r58c43,r58c44,r58c45,r58c46,r58c47,r58c48,r58c49,r58c50,r58c51,r58c52,r58c53,r58c54,r58c55,r58c56,r58c57,r58c58,r58c59,r58c60,r58c61,r58c62,r58c63,r59c1,r59c2,r59c3,r59c4,r59c5,r59c6,r59c7,r59c8,r59c9,r59c10,r59c11,r59c12,r59c13,r59c14,r59c15,r59c16,r59c17,r59c18,r59c19,r59c20,r59c21,r59c22,r59c23,r59c24,r59c25,r59c26,r59c27,r59c28,r59c29,r59c30,r59c31,r59c32,r59c33,r59c34,r59c35,r59c36,r59c37,r59c38,r59c39,r59c40,r59c41,r59c42,r59c43,r59c44,r59c45,r59c46,r59c47,r59c48,r59c49,r59c50,r59c51,r59c52,r59c53,r59c54,r59c55,r59c56,r59c57,r59c58,r59c59,r59c60,r59c61,r59c62,r59c63,r60c1,r60c2,r60c3,r60c4,r60c5,r60c6,r60c7,r60c8,r60c9,r60c10,r60c11,r60c12,r60c13,r60c14,r60c15,r60c16,r60c17,r60c18,r60c19,r60c20,r60c21,r60c22,r60c23,r60c24,r60c25,r60c26,r60c27,r60c28,r60c29,r60c30,r60c31,r60c32,r60c33,r60c34,r60c35,r60c36,r60c37,r60c38,r60c39,r60c40,r60c41,r60c42,r60c43,r60c44,r60c45,r60c46,r60c47,r60c48,r60c49,r60c50,r60c51,r60c52,r60c53,r60c54,r60c55,r60c56,r60c57,r60c58,r60c59,r60c60,r60c61,r60c62,r60c63,r61c1,r61c2,r61c3,r61c4,r61c5,r61c6,r61c7,r61c8,r61c9,r61c10,r61c11,r61c12,r61c13,r61c14,r61c15,r61c16,r61c17,r61c18,r61c19,r61c20,r61c21,r61c22,r61c23,r61c24,r61c25,r61c26,r61c27,r61c28,r61c29,r61c30,r61c31,r61c32,r61c33,r61c34,r61c35,r61c36,r61c37,r61c38,r61c39,r61c40,r61c41,r61c42,r61c43,r61c44,r61c45,r61c46,r61c47,r61c48,r61c49,r61c50,r61c51,r61c52,r61c53,r61c54,r61c55,r61c56,r61c57,r61c58,r61c59,r61c60,r61c61,r61c62,r61c63,r62c1,r62c2) = split_le v73,254
r63c3 = le_sum (r58c1,r58c2,r58c3,r58c4,r58c5,r58c6,r58c7,r58c8)
v181 = add_virtual_target
connect r63c3,v181
v86 = constant 8
# lessthan begin (a = v181, b = v86, signed = false)
(r64c1,r64c2,r64c3,r64c4,r64c5,r64c6,r64c7,r64c8) = split_le v181,8
(r65c1,r65c2,r65c3,r65c4,r65c5,r65c6,r65c7,r65c8) = split_le v86,8
r55c51 = not r64c8
r56c35 = and r55c51,r65c8
v182 = is_equal r64c8,r65c8
r55c67 = not r64c7
r56c47 = and r55c67,r65c7
r56c51 = and r56c47,v182
r63c7 = or r56c35,r56c51
v184 = is_equal r64c7,r65c7
r56c63 = and v182,v184
r66c3 = not r64c6
r56c67 = and r66c3,r65c6
r56c71 = and r56c67,r56c63
r63c11 = or r63c7,r56c71
v186 = is_equal r64c6,r65c6
r67c3 = and r56c63,v186
r66c19 = not r64c5
r67c7 = and r66c19,r65c5
r67c11 = and r67c7,r67c3
r63c15 = or r63c11,r67c11
v188 = is_equal r64c5,r65c5
r67c23 = and r67c3,v188
r66c35 = not r64c4
r67c27 = and r66c35,r65c4
r67c31 = and r67c27,r67c23
r63c19 = or r63c15,r67c31
v190 = is_equal r64c4,r65c4
r67c43 = and r67c23,v190
r66c51 = not r64c3
r67c47 = and r66c51,r65c3
r67c51 = and r67c47,r67c43
r63c23 = or r63c19,r67c51
v192 = is_equal r64c3,r65c3
r67c63 = and r67c43,v192
r66c67 = not r64c2
r67c67 = and r66c67,r65c2
r67c71 = and r67c67,r67c63
r63c27 = or r63c23,r67c71
v194 = is_equal r64c2,r65c2
r68c3 = and r67c63,v194
r69c3 = not r64c1
r68c7 = and r69c3,r65c1
r68c11 = and r68c7,r68c3
r63c31 = or r63c27,r68c11
# lessthan end (result = r63c31)
(r70c1,r70c2,r70c3,r70c4,r70c5,r70c6,r70c7,r70c8,r70c9,r70c10,r70c11,r70c12,r70c13,r70c14,r70c15,r70c16,r70c17,r70c18,r70c19,r70c20,r70c21,r70c22,r70c23,r70c24,r70c25,r70c26,r70c27,r70c28,r70c29,r70c30,r70c31,r70c32,r70c33,r70c34,r70c35,r70c36,r70c37,r70c38,r70c39,r70c40,r70c41,r70c42,r70c43,r70c44,r70c45,r70c46,r70c47,r70c48,r70c49,r70c50,r70c51,r70c52,r70c53,r70c54,r70c55,r70c56,r70c57,r70c58,r70c59,r70c60,r70c61,r70c62,r70c63,r71c1,r71c2,r71c3,r71c4,r71c5,r71c6,r71c7,r71c8,r71c9,r71c10,r71c11,r71c12,r71c13,r71c14,r71c15,r71c16,r71c17,r71c18,r71c19,r71c20,r71c21,r71c22,r71c23,r71c24,r71c25,r71c26,r71c27,r71c28,r71c29,r71c30,r71c31,r71c32,r71c33,r71c34,r71c35,r71c36,r71c37,r71c38,r71c39,r71c40,r71c41,r71c42,r71c43,r71c44,r71c45,r71c46,r71c47,r71c48,r71c49,r71c50,r71c51,r71c52,r71c53,r71c54,r71c55,r71c56,r71c57,r71c58,r71c59,r71c60,r71c61,r71c62,r71c63,r72c1,r72c2,r72c3,r72c4,r72c5,r72c6,r72c7,r72c8,r72c9,r72c10,r72c11,r72c12,r72c13,r72c14,r72c15,r72c16,r72c17,r72c18,r72c19,r72c20,r72c21,r72c22,r72c23,r72c24,r72c25,r72c26,r72c27,r72c28,r72c29,r72c30,r72c31,r72c32,r72c33,r72c34,r72c35,r72c36,r72c37,r72c38,r72c39,r72c40,r72c41,r72c42,r72c43,r72c44,r72c45,r72c46,r72c47,r72c48,r72c49,r72c50,r72c51,r72c52,r72c53,r72c54,r72c55,r72c56,r72c57,r72c58,r72c59,r72c60,r72c61,r72c62,r72c63,r73c1,r73c2,r73c3,r73c4,r73c5,r73c6,r73c7,r73c8,r73c9,r73c10,r73c11,r73c12,r73c13,r73c14,r73c15,r73c16,r73c17,r73c18,r73c19,r73c20,r73c21,r73c22,r73c23,r73c24,r73c25,r73c26,r73c27,r73c28,r73c29,r73c30,r73c31,r73c32,r73c33,r73c34,r73c35,r73c36,r73c37,r73c38,r73c39,r73c40,r73c41,r73c42,r73c43,r73c44,r73c45,r73c46,r73c47,r73c48,r73c49,r73c50,r73c51,r73c52,r73c53,r73c54,r73c55,r73c56,r73c57,r73c58,r73c59,r73c60,r73c61,r73c62,r73c63,r74c1,r74c2) = split_le v74,254
r63c75 = le_sum (r70c1,r70c2,r70c3,r70c4,r70c5,r70c6,r70c7,r70c8)
v196 = add_virtual_target
connect r63c75,v196
v86 = constant 8
# lessthan begin (a = v196, b = v86, signed = false)
(r75c1,r75c2,r75c3,r75c4,r75c5,r75c6,r75c7,r75c8) = split_le v196,8
(r76c1,r76c2,r76c3,r76c4,r76c5,r76c6,r76c7,r76c8) = split_le v86,8
r69c7 = not r75c8
r68c15 = and r69c7,r76c8
v197 = is_equal r75c8,r76c8
r69c23 = not r75c7
r68c27 = and r69c23,r76c7
r68c31 = and r68c27,v197
r63c79 = or r68c15,r68c31
v199 = is_equal r75c7,r76c7
r68c43 = and v197,v199
r69c39 = not r75c6
r68c47 = and r69c39,r76c6
r68c51 = and r68c47,r68c43
r77c3 = or r63c79,r68c51
v201 = is_equal r75c6,r76c6
r68c63 = and r68c43,v201
r69c55 = not r75c5
r68c67 = and r69c55,r76c5
r68c71 = and r68c67,r68c63
r77c7 = or r77c3,r68c71
v203 = is_equal r75c5,r76c5
r78c3 = and r68c63,v203
r69c71 = not r75c4
r78c7 = and r69c71,r76c4
r78c11 = and r78c7,r78c3
r77c11 = or r77c7,r78c11
v205 = is_equal r75c4,r76c4
r78c23 = and r78c3,v205
r79c7 = not r75c3
r78c27 = and r79c7,r76c3
r78c31 = and r78c27,r78c23
r77c15 = or r77c11,r78c31
v207 = is_equal r75c3,r76c3
r78c43 = and r78c23,v207
r79c23 = not r75c2
r78c47 = and r79c23,r76c2
r78c51 = and r78c47,r78c43
r77c19 = or r77c15,r78c51
v209 = is_equal r75c2,r76c2
r78c63 = and r78c43,v209
r79c39 = not r75c1
r78c67 = and r79c39,r76c1
r78c71 = and r78c67,r78c63
r77c23 = or r77c19,r78c71
# lessthan end (result = r77c23)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r63c31,v87
v87 = constant_bool true
connect r77c23,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r77c27 = add v71,v84
v211 = is_equal r77c27,v73
v87 = constant 1
r77c31 = add v72,v87
v213 = is_equal r77c31,v74
r80c11 = and v211,v213
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r79c67 = sub v71,v84
v215 = is_equal r79c67,v73
r80c23 = and v215,v213
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r77c35 = or r80c11,r80c23
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r81c3 = sub v72,v87
v217 = is_equal r81c3,v74
r80c35 = and v211,v217
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r77c39 = or r77c35,r80c35
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r80c39 = and v215,v217
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r77c43 = or r77c39,r80c39
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r77c47 = add v71,v87
v219 = is_equal r77c47,v73
v84 = constant 2
r77c51 = add v72,v84
v221 = is_equal r77c51,v74
r80c59 = and v219,v221
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r77c55 = or r77c43,r80c59
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r81c43 = sub v71,v87
v223 = is_equal r81c43,v73
r80c71 = and v223,v221
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r77c59 = or r77c55,r80c71
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r81c59 = sub v72,v84
v225 = is_equal r81c59,v74
r83c3 = and v219,v225
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r77c63 = or r77c59,r83c3
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r83c7 = and v223,v225
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r77c67 = or r77c63,r83c7
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r77c67,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r84c1,r84c2,r84c3,r84c4,r84c5,r84c6,r84c7,r84c8,r84c9,r84c10,r84c11,r84c12,r84c13,r84c14,r84c15,r84c16,r84c17,r84c18,r84c19,r84c20,r84c21,r84c22,r84c23,r84c24,r84c25,r84c26,r84c27,r84c28,r84c29,r84c30,r84c31,r84c32,r84c33,r84c34,r84c35,r84c36,r84c37,r84c38,r84c39,r84c40,r84c41,r84c42,r84c43,r84c44,r84c45,r84c46,r84c47,r84c48,r84c49,r84c50,r84c51,r84c52,r84c53,r84c54,r84c55,r84c56,r84c57,r84c58,r84c59,r84c60,r84c61,r84c62,r84c63,r85c1,r85c2,r85c3,r85c4,r85c5,r85c6,r85c7,r85c8,r85c9,r85c10,r85c11,r85c12,r85c13,r85c14,r85c15,r85c16,r85c17,r85c18,r85c19,r85c20,r85c21,r85c22,r85c23,r85c24,r85c25,r85c26,r85c27,r85c28,r85c29,r85c30,r85c31,r85c32,r85c33,r85c34,r85c35,r85c36,r85c37,r85c38,r85c39,r85c40,r85c41,r85c42,r85c43,r85c44,r85c45,r85c46,r85c47,r85c48,r85c49,r85c50,r85c51,r85c52,r85c53,r85c54,r85c55,r85c56,r85c57,r85c58,r85c59,r85c60,r85c61,r85c62,r85c63,r86c1,r86c2,r86c3,r86c4,r86c5,r86c6,r86c7,r86c8,r86c9,r86c10,r86c11,r86c12,r86c13,r86c14,r86c15,r86c16,r86c17,r86c18,r86c19,r86c20,r86c21,r86c22,r86c23,r86c24,r86c25,r86c26,r86c27,r86c28,r86c29,r86c30,r86c31,r86c32,r86c33,r86c34,r86c35,r86c36,r86c37,r86c38,r86c39,r86c40,r86c41,r86c42,r86c43,r86c44,r86c45,r86c46,r86c47,r86c48,r86c49,r86c50,r86c51,r86c52,r86c53,r86c54,r86c55,r86c56,r86c57,r86c58,r86c59,r86c60,r86c61,r86c62,r86c63,r87c1,r87c2,r87c3,r87c4,r87c5,r87c6,r87c7,r87c8,r87c9,r87c10,r87c11,r87c12,r87c13,r87c14,r87c15,r87c16,r87c17,r87c18,r87c19,r87c20,r87c21,r87c22,r87c23,r87c24,r87c25,r87c26,r87c27,r87c28,r87c29,r87c30,r87c31,r87c32,r87c33,r87c34,r87c35,r87c36,r87c37,r87c38,r87c39,r87c40,r87c41,r87c42,r87c43,r87c44,r87c45,r87c46,r87c47,r87c48,r87c49,r87c50,r87c51,r87c52,r87c53,r87c54,r87c55,r87c56,r87c57,r87c58,r87c59,r87c60,r87c61,r87c62,r87c63,r88c1,r88c2) = split_le v75,254
r89c31 = le_sum (r84c1,r84c2,r84c3,r84c4,r84c5,r84c6,r84c7,r84c8)
v227 = add_virtual_target
connect r89c31,v227
v86 = constant 8
# lessthan begin (a = v227, b = v86, signed = false)
(r90c1,r90c2,r90c3,r90c4,r90c5,r90c6,r90c7,r90c8) = split_le v227,8
(r91c1,r91c2,r91c3,r91c4,r91c5,r91c6,r91c7,r91c8) = split_le v86,8
r81c75 = not r90c8
r83c11 = and r81c75,r91c8
v228 = is_equal r90c8,r91c8
r92c11 = not r90c7
r83c23 = and r92c11,r91c7
r83c27 = and r83c23,v228
r89c35 = or r83c11,r83c27
v230 = is_equal r90c7,r91c7
r83c39 = and v228,v230
r92c27 = not r90c6
r83c43 = and r92c27,r91c6
r83c47 = and r83c43,r83c39
r89c39 = or r89c35,r83c47
v232 = is_equal r90c6,r91c6
r83c59 = and r83c39,v232
r92c43 = not r90c5
r83c63 = and r92c43,r91c5
r83c67 = and r83c63,r83c59
r89c43 = or r89c39,r83c67
v234 = is_equal r90c5,r91c5
r83c79 = and r83c59,v234
r92c59 = not r90c4
r93c3 = and r92c59,r91c4
r93c7 = and r93c3,r83c79
r89c47 = or r89c43,r93c7
v236 = is_equal r90c4,r91c4
r93c19 = and r83c79,v236
r92c75 = not r90c3
r93c23 = and r92c75,r91c3
r93c27 = and r93c23,r93c19
r89c51 = or r89c47,r93c27
v238 = is_equal r90c3,r91c3
r93c39 = and r93c19,v238
r94c11 = not r90c2
r93c43 = and r94c11,r91c2
r93c47 = and r93c43,r93c39
r89c55 = or r89c51,r93c47
v240 = is_equal r90c2,r91c2
r93c59 = and r93c39,v240
r94c27 = not r90c1
r93c63 = and r94c27,r91c1
r93c67 = and r93c63,r93c59
r89c59 = or r89c55,r93c67
# lessthan end (result = r89c59)
(r95c1,r95c2,r95c3,r95c4,r95c5,r95c6,r95c7,r95c8,r95c9,r95c10,r95c11,r95c12,r95c13,r95c14,r95c15,r95c16,r95c17,r95c18,r95c19,r95c20,r95c21,r95c22,r95c23,r95c24,r95c25,r95c26,r95c27,r95c28,r95c29,r95c30,r95c31,r95c32,r95c33,r95c34,r95c35,r95c36,r95c37,r95c38,r95c39,r95c40,r95c41,r95c42,r95c43,r95c44,r95c45,r95c46,r95c47,r95c48,r95c49,r95c50,r95c51,r95c52,r95c53,r95c54,r95c55,r95c56,r95c57,r95c58,r95c59,r95c60,r95c61,r95c62,r95c63,r96c1,r96c2,r96c3,r96c4,r96c5,r96c6,r96c7,r96c8,r96c9,r96c10,r96c11,r96c12,r96c13,r96c14,r96c15,r96c16,r96c17,r96c18,r96c19,r96c20,r96c21,r96c22,r96c23,r96c24,r96c25,r96c26,r96c27,r96c28,r96c29,r96c30,r96c31,r96c32,r96c33,r96c34,r96c35,r96c36,r96c37,r96c38,r96c39,r96c40,r96c41,r96c42,r96c43,r96c44,r96c45,r96c46,r96c47,r96c48,r96c49,r96c50,r96c51,r96c52,r96c53,r96c54,r96c55,r96c56,r96c57,r96c58,r96c59,r96c60,r96c61,r96c62,r96c63,r97c1,r97c2,r97c3,r97c4,r97c5,r97c6,r97c7,r97c8,r97c9,r97c10,r97c11,r97c12,r97c13,r97c14,r97c15,r97c16,r97c17,r97c18,r97c19,r97c20,r97c21,r97c22,r97c23,r97c24,r97c25,r97c26,r97c27,r97c28,r97c29,r97c30,r97c31,r97c32,r97c33,r97c34,r97c35,r97c36,r97c37,r97c38,r97c39,r97c40,r97c41,r97c42,r97c43,r97c44,r97c45,r97c46,r97c47,r97c48,r97c49,r97c50,r97c51,r97c52,r97c53,r97c54,r97c55,r97c56,r97c57,r97c58,r97c59,r97c60,r97c61,r97c62,r97c63,r98c1,r98c2,r98c3,r98c4,r98c5,r98c6,r98c7,r98c8,r98c9,r98c10,r98c11,r98c12,r98c13,r98c14,r98c15,r98c16,r98c17,r98c18,r98c19,r98c20,r98c21,r98c22,r98c23,r98c24,r98c25,r98c26,r98c27,r98c28,r98c29,r98c30,r98c31,r98c32,r98c33,r98c34,r98c35,r98c36,r98c37,r98c38,r98c39,r98c40,r98c41,r98c42,r98c43,r98c44,r98c45,r98c46,r98c47,r98c48,r98c49,r98c50,r98c51,r98c52,r98c53,r98c54,r98c55,r98c56,r98c57,r98c58,r98c59,r98c60,r98c61,r98c62,r98c63,r99c1,r99c2) = split_le v76,254
r100c23 = le_sum (r95c1,r95c2,r95c3,r95c4,r95c5,r95c6,r95c7,r95c8)
v242 = add_virtual_target
connect r100c23,v242
v86 = constant 8
# lessthan begin (a = v242, b = v86, signed = false)
(r101c1,r101c2,r101c3,r101c4,r101c5,r101c6,r101c7,r101c8) = split_le v242,8
(r102c1,r102c2,r102c3,r102c4,r102c5,r102c6,r102c7,r102c8) = split_le v86,8
r94c31 = not r101c8
r93c71 = and r94c31,r102c8
v243 = is_equal r101c8,r102c8
r94c47 = not r101c7
r103c3 = and r94c47,r102c7
r103c7 = and r103c3,v243
r100c27 = or r93c71,r103c7
v245 = is_equal r101c7,r102c7
r103c19 = and v243,v245
r94c63 = not r101c6
r103c23 = and r94c63,r102c6
r103c27 = and r103c23,r103c19
r100c31 = or r100c27,r103c27
v247 = is_equal r101c6,r102c6
r103c39 = and r103c19,v247
r94c79 = not r101c5
r103c43 = and r94c79,r102c5
r103c47 = and r103c43,r103c39
r100c35 = or r100c31,r103c47
v249 = is_equal r101c5,r102c5
r103c59 = and r103c39,v249
r104c15 = not r101c4
r103c63 = and r104c15,r102c4
r103c67 = and r103c63,r103c59
r100c39 = or r100c35,r103c67
v251 = is_equal r101c4,r102c4
r103c79 = and r103c59,v251
r104c31 = not r101c3
r105c3 = and r104c31,r102c3
r105c7 = and r105c3,r103c79
r100c43 = or r100c39,r105c7
v253 = is_equal r101c3,r102c3
r105c19 = and r103c79,v253
r104c47 = not r101c2
r105c23 = and r104c47,r102c2
r105c27 = and r105c23,r105c19
r100c47 = or r100c43,r105c27
v255 = is_equal r101c2,r102c2
r105c39 = and r105c19,v255
r104c63 = not r101c1
r105c43 = and r104c63,r102c1
r105c47 = and r105c43,r105c39
r100c51 = or r100c47,r105c47
# lessthan end (result = r100c51)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r89c59,v87
v87 = constant_bool true
connect r100c51,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r100c55 = add v73,v84
v257 = is_equal r100c55,v75
v87 = constant 1
r100c59 = add v74,v87
v259 = is_equal r100c59,v76
r105c67 = and v257,v259
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r106c11 = sub v73,v84
v261 = is_equal r106c11,v75
r105c79 = and v261,v259
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r100c63 = or r105c67,r105c79
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r106c27 = sub v74,v87
v263 = is_equal r106c27,v76
r107c11 = and v257,v263
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r100c67 = or r100c63,r107c11
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r107c15 = and v261,v263
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r100c71 = or r100c67,r107c15
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r100c75 = add v73,v87
v265 = is_equal r100c75,v75
v84 = constant 2
r100c79 = add v74,v84
v267 = is_equal r100c79,v76
r107c35 = and v265,v267
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r109c3 = or r100c71,r107c35
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r106c67 = sub v73,v87
v269 = is_equal r106c67,v75
r107c47 = and v269,v267
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r109c7 = or r109c3,r107c47
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r110c3 = sub v74,v84
v271 = is_equal r110c3,v76
r107c59 = and v265,v271
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r109c11 = or r109c7,r107c59
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r107c63 = and v269,v271
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r109c15 = or r109c11,r107c63
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r109c15,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r111c1,r111c2,r111c3,r111c4,r111c5,r111c6,r111c7,r111c8,r111c9,r111c10,r111c11,r111c12,r111c13,r111c14,r111c15,r111c16,r111c17,r111c18,r111c19,r111c20,r111c21,r111c22,r111c23,r111c24,r111c25,r111c26,r111c27,r111c28,r111c29,r111c30,r111c31,r111c32,r111c33,r111c34,r111c35,r111c36,r111c37,r111c38,r111c39,r111c40,r111c41,r111c42,r111c43,r111c44,r111c45,r111c46,r111c47,r111c48,r111c49,r111c50,r111c51,r111c52,r111c53,r111c54,r111c55,r111c56,r111c57,r111c58,r111c59,r111c60,r111c61,r111c62,r111c63,r112c1,r112c2,r112c3,r112c4,r112c5,r112c6,r112c7,r112c8,r112c9,r112c10,r112c11,r112c12,r112c13,r112c14,r112c15,r112c16,r112c17,r112c18,r112c19,r112c20,r112c21,r112c22,r112c23,r112c24,r112c25,r112c26,r112c27,r112c28,r112c29,r112c30,r112c31,r112c32,r112c33,r112c34,r112c35,r112c36,r112c37,r112c38,r112c39,r112c40,r112c41,r112c42,r112c43,r112c44,r112c45,r112c46,r112c47,r112c48,r112c49,r112c50,r112c51,r112c52,r112c53,r112c54,r112c55,r112c56,r112c57,r112c58,r112c59,r112c60,r112c61,r112c62,r112c63,r113c1,r113c2,r113c3,r113c4,r113c5,r113c6,r113c7,r113c8,r113c9,r113c10,r113c11,r113c12,r113c13,r113c14,r113c15,r113c16,r113c17,r113c18,r113c19,r113c20,r113c21,r113c22,r113c23,r113c24,r113c25,r113c26,r113c27,r113c28,r113c29,r113c30,r113c31,r113c32,r113c33,r113c34,r113c35,r113c36,r113c37,r113c38,r113c39,r113c40,r113c41,r113c42,r113c43,r113c44,r113c45,r113c46,r113c47,r113c48,r113c49,r113c50,r113c51,r113c52,r113c53,r113c54,r113c55,r113c56,r113c57,r113c58,r113c59,r113c60,r113c61,r113c62,r113c63,r114c1,r114c2,r114c3,r114c4,r114c5,r114c6,r114c7,r114c8,r114c9,r114c10,r114c11,r114c12,r114c13,r114c14,r114c15,r114c16,r114c17,r114c18,r114c19,r114c20,r114c21,r114c22,r114c23,r114c24,r114c25,r114c26,r114c27,r114c28,r114c29,r114c30,r114c31,r114c32,r114c33,r114c34,r114c35,r114c36,r114c37,r114c38,r114c39,r114c40,r114c41,r114c42,r114c43,r114c44,r114c45,r114c46,r114c47,r114c48,r114c49,r114c50,r114c51,r114c52,r114c53,r114c54,r114c55,r114c56,r114c57,r114c58,r114c59,r114c60,r114c61,r114c62,r114c63,r115c1,r115c2) = split_le v77,254
r109c59 = le_sum (r111c1,r111c2,r111c3,r111c4,r111c5,r111c6,r111c7,r111c8)
v273 = add_virtual_target
connect r109c59,v273
v86 = constant 8
# lessthan begin (a = v273, b = v86, signed = false)
(r116c1,r116c2,r116c3,r116c4,r116c5,r116c6,r116c7,r116c8) = split_le v273,8
(r117c1,r117c2,r117c3,r117c4,r117c5,r117c6,r117c7,r117c8) = split_le v86,8
r110c19 = not r116c8
r107c67 = and r110c19,r117c8
v274 = is_equal r116c8,r117c8
r110c35 = not r116c7
r107c79 = and r110c35,r117c7
r118c3 = and r107c79,v274
r109c63 = or r107c67,r118c3
v276 = is_equal r116c7,r117c7
r118c15 = and v274,v276
r110c51 = not r116c6
r118c19 = and r110c51,r117c6
r118c23 = and r118c19,r118c15
r109c67 = or r109c63,r118c23
v278 = is_equal r116c6,r117c6
r118c35 = and r118c15,v278
r110c67 = not r116c5
r118c39 = and r110c67,r117c5
r118c43 = and r118c39,r118c35
r109c71 = or r109c67,r118c43
v280 = is_equal r116c5,r117c5
r118c55 = and r118c35,v280
r119c3 = not r116c4
r118c59 = and r119c3,r117c4
r118c63 = and r118c59,r118c55
r109c75 = or r109c71,r118c63
v282 = is_equal r116c4,r117c4
r118c75 = and r118c55,v282
r119c19 = not r116c3
r118c79 = and r119c19,r117c3
r120c3 = and r118c79,r118c75
r109c79 = or r109c75,r120c3
v284 = is_equal r116c3,r117c3
r120c15 = and r118c75,v284
r119c35 = not r116c2
r120c19 = and r119c35,r117c2
r120c23 = and r120c19,r120c15
r121c3 = or r109c79,r120c23
v286 = is_equal r116c2,r117c2
r120c35 = and r120c15,v286
r119c51 = not r116c1
r120c39 = and r119c51,r117c1
r120c43 = and r120c39,r120c35
r121c7 = or r121c3,r120c43
# lessthan end (result = r121c7)
(r122c1,r122c2,r122c3,r122c4,r122c5,r122c6,r122c7,r122c8,r122c9,r122c10,r122c11,r122c12,r122c13,r122c14,r122c15,r122c16,r122c17,r122c18,r122c19,r122c20,r122c21,r122c22,r122c23,r122c24,r122c25,r122c26,r122c27,r122c28,r122c29,r122c30,r122c31,r122c32,r122c33,r122c34,r122c35,r122c36,r122c37,r122c38,r122c39,r122c40,r122c41,r122c42,r122c43,r122c44,r122c45,r122c46,r122c47,r122c48,r122c49,r122c50,r122c51,r122c52,r122c53,r122c54,r122c55,r122c56,r122c57,r122c58,r122c59,r122c60,r122c61,r122c62,r122c63,r123c1,r123c2,r123c3,r123c4,r123c5,r123c6,r123c7,r123c8,r123c9,r123c10,r123c11,r123c12,r123c13,r123c14,r123c15,r123c16,r123c17,r123c18,r123c19,r123c20,r123c21,r123c22,r123c23,r123c24,r123c25,r123c26,r123c27,r123c28,r123c29,r123c30,r123c31,r123c32,r123c33,r123c34,r123c35,r123c36,r123c37,r123c38,r123c39,r123c40,r123c41,r123c42,r123c43,r123c44,r123c45,r123c46,r123c47,r123c48,r123c49,r123c50,r123c51,r123c52,r123c53,r123c54,r123c55,r123c56,r123c57,r123c58,r123c59,r123c60,r123c61,r123c62,r123c63,r124c1,r124c2,r124c3,r124c4,r124c5,r124c6,r124c7,r124c8,r124c9,r124c10,r124c11,r124c12,r124c13,r124c14,r124c15,r124c16,r124c17,r124c18,r124c19,r124c20,r124c21,r124c22,r124c23,r124c24,r124c25,r124c26,r124c27,r124c28,r124c29,r124c30,r124c31,r124c32,r124c33,r124c34,r124c35,r124c36,r124c37,r124c38,r124c39,r124c40,r124c41,r124c42,r124c43,r124c44,r124c45,r124c46,r124c47,r124c48,r124c49,r124c50,r124c51,r124c52,r124c53,r124c54,r124c55,r124c56,r124c57,r124c58,r124c59,r124c60,r124c61,r124c62,r124c63,r125c1,r125c2,r125c3,r125c4,r125c5,r125c6,r125c7,r125c8,r125c9,r125c10,r125c11,r125c12,r125c13,r125c14,r125c15,r125c16,r125c17,r125c18,r125c19,r125c20,r125c21,r125c22,r125c23,r125c24,r125c25,r125c26,r125c27,r125c28,r125c29,r125c30,r125c31,r125c32,r125c33,r125c34,r125c35,r125c36,r125c37,r125c38,r125c39,r125c40,r125c41,r125c42,r125c43,r125c44,r125c45,r125c46,r125c47,r125c48,r125c49,r125c50,r125c51,r125c52,r125c53,r125c54,r125c55,r125c56,r125c57,r125c58,r125c59,r125c60,r125c61,r125c62,r125c63,r126c1,r126c2) = split_le v78,254
r121c51 = le_sum (r122c1,r122c2,r122c3,r122c4,r122c5,r122c6,r122c7,r122c8)
v288 = add_virtual_target
connect r121c51,v288
v86 = constant 8
# lessthan begin (a = v288, b = v86, signed = false)
(r127c1,r127c2,r127c3,r127c4,r127c5,r127c6,r127c7,r127c8) = split_le v288,8
(r128c1,r128c2,r128c3,r128c4,r128c5,r128c6,r128c7,r128c8) = split_le v86,8
r119c55 = not r127c8
r120c47 = and r119c55,r128c8
v289 = is_equal r127c8,r128c8
r119c71 = not r127c7
r120c59 = and r119c71,r128c7
r120c63 = and r120c59,v289
r121c55 = or r120c47,r120c63
v291 = is_equal r127c7,r128c7
r120c75 = and v289,v291
r129c7 = not r127c6
r120c79 = and r129c7,r128c6
r130c3 = and r120c79,r120c75
r121c59 = or r121c55,r130c3
v293 = is_equal r127c6,r128c6
r130c15 = and r120c75,v293
r129c23 = not r127c5
r130c19 = and r129c23,r128c5
r130c23 = and r130c19,r130c15
r121c63 = or r121c59,r130c23
v295 = is_equal r127c5,r128c5
r130c35 = and r130c15,v295
r129c39 = not r127c4
r130c39 = and r129c39,r128c4
r130c43 = and r130c39,r130c35
r121c67 = or r121c63,r130c43
v297 = is_equal r127c4,r128c4
r130c55 = and r130c35,v297
r129c55 = not r127c3
r130c59 = and r129c55,r128c3
r130c63 = and r130c59,r130c55
r121c71 = or r121c67,r130c63
v299 = is_equal r127c3,r128c3
r130c75 = and r130c55,v299
r129c71 = not r127c2
r130c79 = and r129c71,r128c2
r131c3 = and r130c79,r130c75
r121c75 = or r121c71,r131c3
v301 = is_equal r127c2,r128c2
r131c15 = and r130c75,v301
r132c7 = not r127c1
r131c19 = and r132c7,r128c1
r131c23 = and r131c19,r131c15
r121c79 = or r121c75,r131c23
# lessthan end (result = r121c79)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r121c7,v87
v87 = constant_bool true
connect r121c79,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r133c3 = add v75,v84
v303 = is_equal r133c3,v77
v87 = constant 1
r133c7 = add v76,v87
v305 = is_equal r133c7,v78
r131c43 = and v303,v305
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r132c35 = sub v75,v84
v307 = is_equal r132c35,v77
r131c55 = and v307,v305
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r133c11 = or r131c43,r131c55
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r132c51 = sub v76,v87
v309 = is_equal r132c51,v78
r131c67 = and v303,v309
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r133c15 = or r133c11,r131c67
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r131c71 = and v307,v309
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r133c19 = or r133c15,r131c71
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r133c23 = add v75,v87
v311 = is_equal r133c23,v77
v84 = constant 2
r133c27 = add v76,v84
v313 = is_equal r133c27,v78
r136c11 = and v311,v313
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r133c31 = or r133c19,r136c11
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r135c11 = sub v75,v87
v315 = is_equal r135c11,v77
r136c23 = and v315,v313
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r133c35 = or r133c31,r136c23
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r135c27 = sub v76,v84
v317 = is_equal r135c27,v78
r136c35 = and v311,v317
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r133c39 = or r133c35,r136c35
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r136c39 = and v315,v317
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r133c43 = or r133c39,r136c39
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r133c43,v87
# [27] assert(is_within_bounds(path[i]));
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r137c1,r137c2,r137c3,r137c4,r137c5,r137c6,r137c7,r137c8,r137c9,r137c10,r137c11,r137c12,r137c13,r137c14,r137c15,r137c16,r137c17,r137c18,r137c19,r137c20,r137c21,r137c22,r137c23,r137c24,r137c25,r137c26,r137c27,r137c28,r137c29,r137c30,r137c31,r137c32,r137c33,r137c34,r137c35,r137c36,r137c37,r137c38,r137c39,r137c40,r137c41,r137c42,r137c43,r137c44,r137c45,r137c46,r137c47,r137c48,r137c49,r137c50,r137c51,r137c52,r137c53,r137c54,r137c55,r137c56,r137c57,r137c58,r137c59,r137c60,r137c61,r137c62,r137c63,r138c1,r138c2,r138c3,r138c4,r138c5,r138c6,r138c7,r138c8,r138c9,r138c10,r138c11,r138c12,r138c13,r138c14,r138c15,r138c16,r138c17,r138c18,r138c19,r138c20,r138c21,r138c22,r138c23,r138c24,r138c25,r138c26,r138c27,r138c28,r138c29,r138c30,r138c31,r138c32,r138c33,r138c34,r138c35,r138c36,r138c37,r138c38,r138c39,r138c40,r138c41,r138c42,r138c43,r138c44,r138c45,r138c46,r138c47,r138c48,r138c49,r138c50,r138c51,r138c52,r138c53,r138c54,r138c55,r138c56,r138c57,r138c58,r138c59,r138c60,r138c61,r138c62,r138c63,r139c1,r139c2,r139c3,r139c4,r139c5,r139c6,r139c7,r139c8,r139c9,r139c10,r139c11,r139c12,r139c13,r139c14,r139c15,r139c16,r139c17,r139c18,r139c19,r139c20,r139c21,r139c22,r139c23,r139c24,r139c25,r139c26,r139c27,r139c28,r139c29,r139c30,r139c31,r139c32,r139c33,r139c34,r139c35,r139c36,r139c37,r139c38,r139c39,r139c40,r139c41,r139c42,r139c43,r139c44,r139c45,r139c46,r139c47,r139c48,r139c49,r139c50,r139c51,r139c52,r139c53,r139c54,r139c55,r139c56,r139c57,r139c58,r139c59,r139c60,r139c61,r139c62,r139c63,r140c1,r140c2,r140c3,r140c4,r140c5,r140c6,r140c7,r140c8,r140c9,r140c10,r140c11,r140c12,r140c13,r140c14,r140c15,r140c16,r140c17,r140c18,r140c19,r140c20,r140c21,r140c22,r140c23,r140c24,r140c25,r140c26,r140c27,r140c28,r140c29,r140c30,r140c31,r140c32,r140c33,r140c34,r140c35,r140c36,r140c37,r140c38,r140c39,r140c40,r140c41,r140c42,r140c43,r140c44,r140c45,r140c46,r140c47,r140c48,r140c49,r140c50,r140c51,r140c52,r140c53,r140c54,r140c55,r140c56,r140c57,r140c58,r140c59,r140c60,r140c61,r140c62,r140c63,r141c1,r141c2) = split_le v79,254
r142c7 = le_sum (r137c1,r137c2,r137c3,r137c4,r137c5,r137c6,r137c7,r137c8)
v319 = add_virtual_target
connect r142c7,v319
v86 = constant 8
# lessthan begin (a = v319, b = v86, signed = false)
(r143c1,r143c2,r143c3,r143c4,r143c5,r143c6,r143c7,r143c8) = split_le v319,8
(r144c1,r144c2,r144c3,r144c4,r144c5,r144c6,r144c7,r144c8) = split_le v86,8
r135c43 = not r143c8
r136c43 = and r135c43,r144c8
v320 = is_equal r143c8,r144c8
r135c59 = not r143c7
r136c55 = and r135c59,r144c7
r136c59 = and r136c55,v320
r142c11 = or r136c43,r136c59
v322 = is_equal r143c7,r144c7
r136c71 = and v320,v322
r135c75 = not r143c6
r136c75 = and r135c75,r144c6
r136c79 = and r136c75,r136c71
r142c15 = or r142c11,r136c79
v324 = is_equal r143c6,r144c6
r146c11 = and r136c71,v324
r145c11 = not r143c5
r146c15 = and r145c11,r144c5
r146c19 = and r146c15,r146c11
r142c19 = or r142c15,r146c19
v326 = is_equal r143c5,r144c5
r146c31 = and r146c11,v326
r145c27 = not r143c4
r146c35 = and r145c27,r144c4
r146c39 = and r146c35,r146c31
r142c23 = or r142c19,r146c39
v328 = is_equal r143c4,r144c4
r146c51 = and r146c31,v328
r145c43 = not r143c3
r146c55 = and r145c43,r144c3
r146c59 = and r146c55,r146c51
r142c27 = or r142c23,r146c59
v330 = is_equal r143c3,r144c3
r146c71 = and r146c51,v330
r145c59 = not r143c2
r146c75 = and r145c59,r144c2
r146c79 = and r146c75,r146c71
r142c31 = or r142c27,r146c79
v332 = is_equal r143c2,r144c2
r147c11 = and r146c71,v332
r145c75 = not r143c1
r147c15 = and r145c75,r144c1
r147c19 = and r147c15,r147c11
r142c35 = or r142c31,r147c19
# lessthan end (result = r142c35)
(r148c1,r148c2,r148c3,r148c4,r148c5,r148c6,r148c7,r148c8,r148c9,r148c10,r148c11,r148c12,r148c13,r148c14,r148c15,r148c16,r148c17,r148c18,r148c19,r148c20,r148c21,r148c22,r148c23,r148c24,r148c25,r148c26,r148c27,r148c28,r148c29,r148c30,r148c31,r148c32,r148c33,r148c34,r148c35,r148c36,r148c37,r148c38,r148c39,r148c40,r148c41,r148c42,r148c43,r148c44,r148c45,r148c46,r148c47,r148c48,r148c49,r148c50,r148c51,r148c52,r148c53,r148c54,r148c55,r148c56,r148c57,r148c58,r148c59,r148c60,r148c61,r148c62,r148c63,r149c1,r149c2,r149c3,r149c4,r149c5,r149c6,r149c7,r149c8,r149c9,r149c10,r149c11,r149c12,r149c13,r149c14,r149c15,r149c16,r149c17,r149c18,r149c19,r149c20,r149c21,r149c22,r149c23,r149c24,r149c25,r149c26,r149c27,r149c28,r149c29,r149c30,r149c31,r149c32,r149c33,r149c34,r149c35,r149c36,r149c37,r149c38,r149c39,r149c40,r149c41,r149c42,r149c43,r149c44,r149c45,r149c46,r149c47,r149c48,r149c49,r149c50,r149c51,r149c52,r149c53,r149c54,r149c55,r149c56,r149c57,r149c58,r149c59,r149c60,r149c61,r149c62,r149c63,r150c1,r150c2,r150c3,r150c4,r150c5,r150c6,r150c7,r150c8,r150c9,r150c10,r150c11,r150c12,r150c13,r150c14,r150c15,r150c16,r150c17,r150c18,r150c19,r150c20,r150c21,r150c22,r150c23,r150c24,r150c25,r150c26,r150c27,r150c28,r150c29,r150c30,r150c31,r150c32,r150c33,r150c34,r150c35,r150c36,r150c37,r150c38,r150c39,r150c40,r150c41,r150c42,r150c43,r150c44,r150c45,r150c46,r150c47,r150c48,r150c49,r150c50,r150c51,r150c52,r150c53,r150c54,r150c55,r150c56,r150c57,r150c58,r150c59,r150c60,r150c61,r150c62,r150c63,r151c1,r151c2,r151c3,r151c4,r151c5,r151c6,r151c7,r151c8,r151c9,r151c10,r151c11,r151c12,r151c13,r151c14,r151c15,r151c16,r151c17,r151c18,r151c19,r151c20,r151c21,r151c22,r151c23,r151c24,r151c25,r151c26,r151c27,r151c28,r151c29,r151c30,r151c31,r151c32,r151c33,r151c34,r151c35,r151c36,r151c37,r151c38,r151c39,r151c40,r151c41,r151c42,r151c43,r151c44,r151c45,r151c46,r151c47,r151c48,r151c49,r151c50,r151c51,r151c52,r151c53,r151c54,r151c55,r151c56,r151c57,r151c58,r151c59,r151c60,r151c61,r151c62,r151c63,r152c1,r152c2) = split_le v80,254
r142c79 = le_sum (r148c1,r148c2,r148c3,r148c4,r148c5,r148c6,r148c7,r148c8)
v334 = add_virtual_target
connect r142c79,v334
v86 = constant 8
# lessthan begin (a = v334, b = v86, signed = false)
(r153c1,r153c2,r153c3,r153c4,r153c5,r153c6,r153c7,r153c8) = split_le v334,8
(r154c1,r154c2,r154c3,r154c4,r154c5,r154c6,r154c7,r154c8) = split_le v86,8
r145c79 = not r153c8
r147c23 = and r145c79,r154c8
v335 = is_equal r153c8,r154c8
r155c15 = not r153c7
r147c35 = and r155c15,r154c7
r147c39 = and r147c35,v335
r156c3 = or r147c23,r147c39
v337 = is_equal r153c7,r154c7
r147c51 = and v335,v337
r155c31 = not r153c6
r147c55 = and r155c31,r154c6
r147c59 = and r147c55,r147c51
r156c7 = or r156c3,r147c59
v339 = is_equal r153c6,r154c6
r147c71 = and r147c51,v339
r155c47 = not r153c5
r147c75 = and r155c47,r154c5
r147c79 = and r147c75,r147c71
r156c11 = or r156c7,r147c79
v341 = is_equal r153c5,r154c5
r157c11 = and r147c71,v341
r155c63 = not r153c4
r157c15 = and r155c63,r154c4
r157c19 = and r157c15,r157c11
r156c15 = or r156c11,r157c19
v343 = is_equal r153c4,r154c4
r157c31 = and r157c11,v343
r155c79 = not r153c3
r157c35 = and r155c79,r154c3
r157c39 = and r157c35,r157c31
r156c19 = or r156c15,r157c39
v345 = is_equal r153c3,r154c3
r157c51 = and r157c31,v345
r158c15 = not r153c2
r157c55 = and r158c15,r154c2
r157c59 = and r157c55,r157c51
r156c23 = or r156c19,r157c59
v347 = is_equal r153c2,r154c2
r157c71 = and r157c51,v347
r158c31 = not r153c1
r157c75 = and r158c31,r154c1
r157c79 = and r157c75,r157c71
r156c27 = or r156c23,r157c79
# lessthan end (result = r156c27)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r142c35,v87
v87 = constant_bool true
connect r156c27,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r156c31 = add v77,v84
v349 = is_equal r156c31,v79
v87 = constant 1
r156c35 = add v78,v87
v351 = is_equal r156c35,v80
r159c19 = and v349,v351
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r158c59 = sub v77,v84
v353 = is_equal r158c59,v79
r159c31 = and v353,v351
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r156c39 = or r159c19,r159c31
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r158c75 = sub v78,v87
v355 = is_equal r158c75,v80
r159c43 = and v349,v355
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r156c43 = or r156c39,r159c43
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r159c47 = and v353,v355
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r156c47 = or r156c43,r159c47
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r156c51 = add v77,v87
v357 = is_equal r156c51,v79
v84 = constant 2
r156c55 = add v78,v84
v359 = is_equal r156c55,v80
r159c67 = and v357,v359
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r156c59 = or r156c47,r159c67
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r160c35 = sub v77,v87
v361 = is_equal r160c35,v79
r159c79 = and v361,v359
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r156c63 = or r156c59,r159c79
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r160c51 = sub v78,v84
v363 = is_equal r160c51,v80
r162c11 = and v357,v363
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r156c67 = or r156c63,r162c11
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r162c15 = and v361,v363
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r156c71 = or r156c67,r162c15
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r156c71,v87
# [18] (square.x as u8 >= 0) & (square.x as u8 < 8) & (square.y as u8 >= 0) & (square.y as u8 < 8)
(r163c1,r163c2,r163c3,r163c4,r163c5,r163c6,r163c7,r163c8,r163c9,r163c10,r163c11,r163c12,r163c13,r163c14,r163c15,r163c16,r163c17,r163c18,r163c19,r163c20,r163c21,r163c22,r163c23,r163c24,r163c25,r163c26,r163c27,r163c28,r163c29,r163c30,r163c31,r163c32,r163c33,r163c34,r163c35,r163c36,r163c37,r163c38,r163c39,r163c40,r163c41,r163c42,r163c43,r163c44,r163c45,r163c46,r163c47,r163c48,r163c49,r163c50,r163c51,r163c52,r163c53,r163c54,r163c55,r163c56,r163c57,r163c58,r163c59,r163c60,r163c61,r163c62,r163c63,r164c1,r164c2,r164c3,r164c4,r164c5,r164c6,r164c7,r164c8,r164c9,r164c10,r164c11,r164c12,r164c13,r164c14,r164c15,r164c16,r164c17,r164c18,r164c19,r164c20,r164c21,r164c22,r164c23,r164c24,r164c25,r164c26,r164c27,r164c28,r164c29,r164c30,r164c31,r164c32,r164c33,r164c34,r164c35,r164c36,r164c37,r164c38,r164c39,r164c40,r164c41,r164c42,r164c43,r164c44,r164c45,r164c46,r164c47,r164c48,r164c49,r164c50,r164c51,r164c52,r164c53,r164c54,r164c55,r164c56,r164c57,r164c58,r164c59,r164c60,r164c61,r164c62,r164c63,r165c1,r165c2,r165c3,r165c4,r165c5,r165c6,r165c7,r165c8,r165c9,r165c10,r165c11,r165c12,r165c13,r165c14,r165c15,r165c16,r165c17,r165c18,r165c19,r165c20,r165c21,r165c22,r165c23,r165c24,r165c25,r165c26,r165c27,r165c28,r165c29,r165c30,r165c31,r165c32,r165c33,r165c34,r165c35,r165c36,r165c37,r165c38,r165c39,r165c40,r165c41,r165c42,r165c43,r165c44,r165c45,r165c46,r165c47,r165c48,r165c49,r165c50,r165c51,r165c52,r165c53,r165c54,r165c55,r165c56,r165c57,r165c58,r165c59,r165c60,r165c61,r165c62,r165c63,r166c1,r166c2,r166c3,r166c4,r166c5,r166c6,r166c7,r166c8,r166c9,r166c10,r166c11,r166c12,r166c13,r166c14,r166c15,r166c16,r166c17,r166c18,r166c19,r166c20,r166c21,r166c22,r166c23,r166c24,r166c25,r166c26,r166c27,r166c28,r166c29,r166c30,r166c31,r166c32,r166c33,r166c34,r166c35,r166c36,r166c37,r166c38,r166c39,r166c40,r166c41,r166c42,r166c43,r166c44,r166c45,r166c46,r166c47,r166c48,r166c49,r166c50,r166c51,r166c52,r166c53,r166c54,r166c55,r166c56,r166c57,r166c58,r166c59,r166c60,r166c61,r166c62,r166c63,r167c1,r167c2) = split_le v65,254
r168c35 = le_sum (r163c1,r163c2,r163c3,r163c4,r163c5,r163c6,r163c7,r163c8)
v365 = add_virtual_target
connect r168c35,v365
v86 = constant 8
# lessthan begin (a = v365, b = v86, signed = false)
(r169c1,r169c2,r169c3,r169c4,r169c5,r169c6,r169c7,r169c8) = split_le v365,8
(r170c1,r170c2,r170c3,r170c4,r170c5,r170c6,r170c7,r170c8) = split_le v86,8
r160c67 = not r169c8
r162c19 = and r160c67,r170c8
v366 = is_equal r169c8,r170c8
r171c3 = not r169c7
r162c31 = and r171c3,r170c7
r162c35 = and r162c31,v366
r168c39 = or r162c19,r162c35
v368 = is_equal r169c7,r170c7
r162c47 = and v366,v368
r171c19 = not r169c6
r162c51 = and r171c19,r170c6
r162c55 = and r162c51,r162c47
r168c43 = or r168c39,r162c55
v370 = is_equal r169c6,r170c6
r162c67 = and r162c47,v370
r171c35 = not r169c5
r162c71 = and r171c35,r170c5
r162c75 = and r162c71,r162c67
r168c47 = or r168c43,r162c75
v372 = is_equal r169c5,r170c5
r172c7 = and r162c67,v372
r171c51 = not r169c4
r172c11 = and r171c51,r170c4
r172c15 = and r172c11,r172c7
r168c51 = or r168c47,r172c15
v374 = is_equal r169c4,r170c4
r172c27 = and r172c7,v374
r171c67 = not r169c3
r172c31 = and r171c67,r170c3
r172c35 = and r172c31,r172c27
r168c55 = or r168c51,r172c35
v376 = is_equal r169c3,r170c3
r172c47 = and r172c27,v376
r173c3 = not r169c2
r172c51 = and r173c3,r170c2
r172c55 = and r172c51,r172c47
r168c59 = or r168c55,r172c55
v378 = is_equal r169c2,r170c2
r172c67 = and r172c47,v378
r173c19 = not r169c1
r172c71 = and r173c19,r170c1
r172c75 = and r172c71,r172c67
r168c63 = or r168c59,r172c75
# lessthan end (result = r168c63)
(r174c1,r174c2,r174c3,r174c4,r174c5,r174c6,r174c7,r174c8,r174c9,r174c10,r174c11,r174c12,r174c13,r174c14,r174c15,r174c16,r174c17,r174c18,r174c19,r174c20,r174c21,r174c22,r174c23,r174c24,r174c25,r174c26,r174c27,r174c28,r174c29,r174c30,r174c31,r174c32,r174c33,r174c34,r174c35,r174c36,r174c37,r174c38,r174c39,r174c40,r174c41,r174c42,r174c43,r174c44,r174c45,r174c46,r174c47,r174c48,r174c49,r174c50,r174c51,r174c52,r174c53,r174c54,r174c55,r174c56,r174c57,r174c58,r174c59,r174c60,r174c61,r174c62,r174c63,r175c1,r175c2,r175c3,r175c4,r175c5,r175c6,r175c7,r175c8,r175c9,r175c10,r175c11,r175c12,r175c13,r175c14,r175c15,r175c16,r175c17,r175c18,r175c19,r175c20,r175c21,r175c22,r175c23,r175c24,r175c25,r175c26,r175c27,r175c28,r175c29,r175c30,r175c31,r175c32,r175c33,r175c34,r175c35,r175c36,r175c37,r175c38,r175c39,r175c40,r175c41,r175c42,r175c43,r175c44,r175c45,r175c46,r175c47,r175c48,r175c49,r175c50,r175c51,r175c52,r175c53,r175c54,r175c55,r175c56,r175c57,r175c58,r175c59,r175c60,r175c61,r175c62,r175c63,r176c1,r176c2,r176c3,r176c4,r176c5,r176c6,r176c7,r176c8,r176c9,r176c10,r176c11,r176c12,r176c13,r176c14,r176c15,r176c16,r176c17,r176c18,r176c19,r176c20,r176c21,r176c22,r176c23,r176c24,r176c25,r176c26,r176c27,r176c28,r176c29,r176c30,r176c31,r176c32,r176c33,r176c34,r176c35,r176c36,r176c37,r176c38,r176c39,r176c40,r176c41,r176c42,r176c43,r176c44,r176c45,r176c46,r176c47,r176c48,r176c49,r176c50,r176c51,r176c52,r176c53,r176c54,r176c55,r176c56,r176c57,r176c58,r176c59,r176c60,r176c61,r176c62,r176c63,r177c1,r177c2,r177c3,r177c4,r177c5,r177c6,r177c7,r177c8,r177c9,r177c10,r177c11,r177c12,r177c13,r177c14,r177c15,r177c16,r177c17,r177c18,r177c19,r177c20,r177c21,r177c22,r177c23,r177c24,r177c25,r177c26,r177c27,r177c28,r177c29,r177c30,r177c31,r177c32,r177c33,r177c34,r177c35,r177c36,r177c37,r177c38,r177c39,r177c40,r177c41,r177c42,r177c43,r177c44,r177c45,r177c46,r177c47,r177c48,r177c49,r177c50,r177c51,r177c52,r177c53,r177c54,r177c55,r177c56,r177c57,r177c58,r177c59,r177c60,r177c61,r177c62,r177c63,r178c1,r178c2) = split_le v66,254
r179c27 = le_sum (r174c1,r174c2,r174c3,r174c4,r174c5,r174c6,r174c7,r174c8)
v380 = add_virtual_target
connect r179c27,v380
v86 = constant 8
# lessthan begin (a = v380, b = v86, signed = false)
(r180c1,r180c2,r180c3,r180c4,r180c5,r180c6,r180c7,r180c8) = split_le v380,8
(r181c1,r181c2,r181c3,r181c4,r181c5,r181c6,r181c7,r181c8) = split_le v86,8
r173c23 = not r180c8
r172c79 = and r173c23,r181c8
v381 = is_equal r180c8,r181c8
r173c39 = not r180c7
r182c11 = and r173c39,r181c7
r182c15 = and r182c11,v381
r179c31 = or r172c79,r182c15
v383 = is_equal r180c7,r181c7
r182c27 = and v381,v383
r173c55 = not r180c6
r182c31 = and r173c55,r181c6
r182c35 = and r182c31,r182c27
r179c35 = or r179c31,r182c35
v385 = is_equal r180c6,r181c6
r182c47 = and r182c27,v385
r173c71 = not r180c5
r182c51 = and r173c71,r181c5
r182c55 = and r182c51,r182c47
r179c39 = or r179c35,r182c55
v387 = is_equal r180c5,r181c5
r182c67 = and r182c47,v387
r183c7 = not r180c4
r182c71 = and r183c7,r181c4
r182c75 = and r182c71,r182c67
r179c43 = or r179c39,r182c75
v389 = is_equal r180c4,r181c4
r184c7 = and r182c67,v389
r183c23 = not r180c3
r184c11 = and r183c23,r181c3
r184c15 = and r184c11,r184c7
r179c47 = or r179c43,r184c15
v391 = is_equal r180c3,r181c3
r184c27 = and r184c7,v391
r183c39 = not r180c2
r184c31 = and r183c39,r181c2
r184c35 = and r184c31,r184c27
r179c51 = or r179c47,r184c35
v393 = is_equal r180c2,r181c2
r184c47 = and r184c27,v393
r183c55 = not r180c1
r184c51 = and r183c55,r181c1
r184c55 = and r184c51,r184c47
r179c55 = or r179c51,r184c55
# lessthan end (result = r179c55)
# [27] assert(is_within_bounds(path[i]));
v87 = constant_bool true
connect r168c63,v87
v87 = constant_bool true
connect r179c55,v87
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r179c59 = add v79,v84
v395 = is_equal r179c59,v65
v87 = constant 1
r179c63 = add v80,v87
v397 = is_equal r179c63,v66
r184c75 = and v395,v397
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
v84 = constant 2
r185c3 = sub v79,v84
v399 = is_equal r185c3,v65
r186c7 = and v399,v397
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
r179c67 = or r184c75,r186c7
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
v87 = constant 1
r185c19 = sub v80,v87
v401 = is_equal r185c19,v66
r186c19 = and v395,v401
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
r179c71 = or r179c67,r186c19
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r186c23 = and v399,v401
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
r179c75 = or r179c71,r186c23
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r179c79 = add v79,v87
v403 = is_equal r179c79,v65
v84 = constant 2
r188c3 = add v80,v84
v405 = is_equal r188c3,v66
r186c43 = and v403,v405
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
r188c7 = or r179c75,r186c43
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
v87 = constant 1
r185c59 = sub v79,v87
v407 = is_equal r185c59,v65
r186c55 = and v407,v405
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
r188c11 = or r188c7,r186c55
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
v84 = constant 2
r185c75 = sub v80,v84
v409 = is_equal r185c75,v66
r186c67 = and v403,v409
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
r188c15 = or r188c11,r186c67
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r186c71 = and v407,v409
# [7] ((prev.x + 2 == curr.x) & (prev.y + 1 == curr.y))
# [8] | ((prev.x - 2 == curr.x) & (prev.y + 1 == curr.y))
# [9] | ((prev.x + 2 == curr.x) & (prev.y - 1 == curr.y))
# [10] | ((prev.x - 2 == curr.x) & (prev.y - 1 == curr.y))
# [11] | ((prev.x + 1 == curr.x) & (prev.y + 2 == curr.y))
# [12] | ((prev.x - 1 == curr.x) & (prev.y + 2 == curr.y))
# [13] | ((prev.x + 1 == curr.x) & (prev.y - 2 == curr.y))
# [14] | ((prev.x - 1 == curr.x) & (prev.y - 2 == curr.y))
r188c19 = or r188c15,r186c71
# [28] assert(is_valid_step(path[i - 1], path[i]));
v87 = constant_bool true
connect r188c19,v87
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v411 = add_virtual_target
connect v0,v411
v124 = constant 18446744069414584320
r186c75 = mul v411,v124
v87 = constant 1
v87 = constant 1
r188c23 = add v87,r186c75
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c11 = sub v1,r188c23
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v412 = add_virtual_target
connect v10,v412
r186c79 = mul v412,r189c11
r188c27 = add r188c23,r186c79
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c15 = sub v1,r188c27
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v413 = add_virtual_target
connect v19,v413
r190c3 = mul v413,r189c15
r188c31 = add r188c27,r190c3
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c19 = sub v1,r188c31
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v414 = add_virtual_target
connect v28,v414
r190c7 = mul v414,r189c19
r188c35 = add r188c31,r190c7
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c23 = sub v1,r188c35
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v415 = add_virtual_target
connect v37,v415
r190c11 = mul v415,r189c23
r188c39 = add r188c35,r190c11
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c27 = sub v1,r188c39
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v416 = add_virtual_target
connect v46,v416
r190c15 = mul v416,r189c27
r188c43 = add r188c39,r190c15
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c31 = sub v1,r188c43
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v417 = add_virtual_target
connect v55,v417
r190c19 = mul v417,r189c31
r188c47 = add r188c43,r190c19
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1 = constant 0
r189c35 = sub v1,r188c47
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v418 = add_virtual_target
connect v64,v418
r190c23 = mul v418,r189c35
r188c51 = add r188c47,r190c23
v419 = add_virtual_target
connect r188c51,v419
# [36] if watcher_map[x][y] {
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v419,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v420 = is_equal v69,v70
v1 = constant 0
r189c51 = sub v1,v70
v422 = is_equal v69,r189c51
r188c55 = or v420,v422
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r190c43 = and v0,r188c55
v424 = add_virtual_target
connect r190c43,v424
v124 = constant 18446744069414584320
r190c47 = mul v424,v124
v87 = constant 1
v87 = constant 1
r188c59 = add v87,r190c47
v425 = is_equal v69,r52c59
v87 = constant 1
r27c27 = sub v87,v70
v427 = is_equal v69,r27c27
r188c63 = or v425,v427
r190c67 = and v2,r188c63
v429 = add_virtual_target
connect r190c67,v429
v1 = constant 0
r191c11 = sub v1,r188c59
r190c71 = mul v429,r191c11
r188c67 = add r188c59,r190c71
v430 = is_equal v69,r55c35
v84 = constant 2
r27c75 = sub v84,v70
v432 = is_equal v69,r27c75
r188c71 = or v430,v432
r192c11 = and v3,r188c71
v434 = add_virtual_target
connect r192c11,v434
v1 = constant 0
r191c39 = sub v1,r188c67
r192c15 = mul v434,r191c39
r188c75 = add r188c67,r192c15
v435 = constant 3
r191c43 = sub v70,v435
v436 = is_equal v69,r191c43
v435 = constant 3
r191c59 = sub v435,v70
v438 = is_equal v69,r191c59
r188c79 = or v436,v438
r192c35 = and v4,r188c79
v440 = add_virtual_target
connect r192c35,v440
v1 = constant 0
r191c75 = sub v1,r188c75
r192c39 = mul v440,r191c75
r193c3 = add r188c75,r192c39
v441 = constant 4
r191c79 = sub v70,v441
v442 = is_equal v69,r191c79
v441 = constant 4
r194c15 = sub v441,v70
v444 = is_equal v69,r194c15
r193c7 = or v442,v444
r192c59 = and v5,r193c7
v446 = add_virtual_target
connect r192c59,v446
v1 = constant 0
r194c31 = sub v1,r193c3
r192c63 = mul v446,r194c31
r193c11 = add r193c3,r192c63
v447 = constant 5
r194c35 = sub v70,v447
v448 = is_equal v69,r194c35
v447 = constant 5
r194c51 = sub v447,v70
v450 = is_equal v69,r194c51
r193c15 = or v448,v450
r195c3 = and v6,r193c15
v452 = add_virtual_target
connect r195c3,v452
v1 = constant 0
r194c67 = sub v1,r193c11
r195c7 = mul v452,r194c67
r193c19 = add r193c11,r195c7
v453 = constant 6
r194c71 = sub v70,v453
v454 = is_equal v69,r194c71
v453 = constant 6
r196c7 = sub v453,v70
v456 = is_equal v69,r196c7
r193c23 = or v454,v456
r195c27 = and v7,r193c23
v458 = add_virtual_target
connect r195c27,v458
v1 = constant 0
r196c23 = sub v1,r193c19
r195c31 = mul v458,r196c23
r193c27 = add r193c19,r195c31
v459 = constant 7
r196c27 = sub v70,v459
v460 = is_equal v69,r196c27
v459 = constant 7
r196c43 = sub v459,v70
v462 = is_equal v69,r196c43
r193c31 = or v460,v462
r195c51 = and v8,r193c31
v464 = add_virtual_target
connect r195c51,v464
v1 = constant 0
r196c59 = sub v1,r193c27
r195c55 = mul v464,r196c59
r193c35 = add r193c27,r195c55
v465 = is_equal r55c19,v70
v467 = is_equal r55c19,r189c51
r193c39 = or v465,v467
r195c75 = and v9,r193c39
v469 = add_virtual_target
connect r195c75,v469
v1 = constant 0
r197c7 = sub v1,r193c35
r195c79 = mul v469,r197c7
r193c43 = add r193c35,r195c79
v470 = is_equal r55c19,r52c59
v472 = is_equal r55c19,r27c27
r193c47 = or v470,v472
r198c19 = and v10,r193c47
v474 = add_virtual_target
connect r198c19,v474
v1 = constant 0
r197c35 = sub v1,r193c43
r198c23 = mul v474,r197c35
r193c51 = add r193c43,r198c23
v475 = is_equal r55c19,r55c35
v477 = is_equal r55c19,r27c75
r193c55 = or v475,v477
r198c43 = and v11,r193c55
v479 = add_virtual_target
connect r198c43,v479
v1 = constant 0
r197c63 = sub v1,r193c51
r198c47 = mul v479,r197c63
r193c59 = add r193c51,r198c47
v480 = is_equal r55c19,r191c43
v482 = is_equal r55c19,r191c59
r193c63 = or v480,v482
r198c67 = and v12,r193c63
v484 = add_virtual_target
connect r198c67,v484
v1 = constant 0
r199c11 = sub v1,r193c59
r198c71 = mul v484,r199c11
r193c67 = add r193c59,r198c71
v485 = is_equal r55c19,r191c79
v487 = is_equal r55c19,r194c15
r193c71 = or v485,v487
r200c11 = and v13,r193c71
v489 = add_virtual_target
connect r200c11,v489
v1 = constant 0
r199c39 = sub v1,r193c67
r200c15 = mul v489,r199c39
r193c75 = add r193c67,r200c15
v490 = is_equal r55c19,r194c35
v492 = is_equal r55c19,r194c51
r193c79 = or v490,v492
r200c35 = and v14,r193c79
v494 = add_virtual_target
connect r200c35,v494
v1 = constant 0
r199c67 = sub v1,r193c75
r200c39 = mul v494,r199c67
r202c3 = add r193c75,r200c39
v495 = is_equal r55c19,r194c71
v497 = is_equal r55c19,r196c7
r202c7 = or v495,v497
r200c59 = and v15,r202c7
v499 = add_virtual_target
connect r200c59,v499
v1 = constant 0
r203c15 = sub v1,r202c3
r200c63 = mul v499,r203c15
r202c11 = add r202c3,r200c63
v500 = is_equal r55c19,r196c27
v502 = is_equal r55c19,r196c43
r202c15 = or v500,v502
r204c3 = and v16,r202c15
v504 = add_virtual_target
connect r204c3,v504
v1 = constant 0
r203c43 = sub v1,r202c11
r204c7 = mul v504,r203c43
r202c19 = add r202c11,r204c7
v505 = is_equal r52c43,v70
v507 = is_equal r52c43,r189c51
r202c23 = or v505,v507
r204c27 = and v17,r202c23
v509 = add_virtual_target
connect r204c27,v509
v1 = constant 0
r203c71 = sub v1,r202c19
r204c31 = mul v509,r203c71
r202c27 = add r202c19,r204c31
v510 = is_equal r52c43,r52c59
v512 = is_equal r52c43,r27c27
r202c31 = or v510,v512
r204c51 = and v18,r202c31
v514 = add_virtual_target
connect r204c51,v514
v1 = constant 0
r205c19 = sub v1,r202c27
r204c55 = mul v514,r205c19
r202c35 = add r202c27,r204c55
v515 = is_equal r52c43,r55c35
v517 = is_equal r52c43,r27c75
r202c39 = or v515,v517
r204c75 = and v19,r202c39
v519 = add_virtual_target
connect r204c75,v519
v1 = constant 0
r205c47 = sub v1,r202c35
r204c79 = mul v519,r205c47
r202c43 = add r202c35,r204c79
v520 = is_equal r52c43,r191c43
v522 = is_equal r52c43,r191c59
r202c47 = or v520,v522
r206c19 = and v20,r202c47
v524 = add_virtual_target
connect r206c19,v524
v1 = constant 0
r205c75 = sub v1,r202c43
r206c23 = mul v524,r205c75
r202c51 = add r202c43,r206c23
v525 = is_equal r52c43,r191c79
v527 = is_equal r52c43,r194c15
r202c55 = or v525,v527
r206c43 = and v21,r202c55
v529 = add_virtual_target
connect r206c43,v529
v1 = constant 0
r207c23 = sub v1,r202c51
r206c47 = mul v529,r207c23
r202c59 = add r202c51,r206c47
v530 = is_equal r52c43,r194c35
v532 = is_equal r52c43,r194c51
r202c63 = or v530,v532
r206c67 = and v22,r202c63
v534 = add_virtual_target
connect r206c67,v534
v1 = constant 0
r207c51 = sub v1,r202c59
r206c71 = mul v534,r207c51
r202c67 = add r202c59,r206c71
v535 = is_equal r52c43,r194c71
v537 = is_equal r52c43,r196c7
r202c71 = or v535,v537
r208c11 = and v23,r202c71
v539 = add_virtual_target
connect r208c11,v539
v1 = constant 0
r207c79 = sub v1,r202c67
r208c15 = mul v539,r207c79
r202c75 = add r202c67,r208c15
v540 = is_equal r52c43,r196c27
v542 = is_equal r52c43,r196c43
r202c79 = or v540,v542
r208c35 = and v24,r202c79
v544 = add_virtual_target
connect r208c35,v544
v1 = constant 0
r209c27 = sub v1,r202c75
r208c39 = mul v544,r209c27
r210c3 = add r202c75,r208c39
v435 = constant 3
r209c31 = sub v69,v435
v545 = is_equal r209c31,v70
v547 = is_equal r209c31,r189c51
r210c7 = or v545,v547
r208c59 = and v25,r210c7
v549 = add_virtual_target
connect r208c59,v549
v1 = constant 0
r209c59 = sub v1,r210c3
r208c63 = mul v549,r209c59
r210c11 = add r210c3,r208c63
v550 = is_equal r209c31,r52c59
v552 = is_equal r209c31,r27c27
r210c15 = or v550,v552
r212c3 = and v26,r210c15
v554 = add_virtual_target
connect r212c3,v554
v1 = constant 0
r211c7 = sub v1,r210c11
r212c7 = mul v554,r211c7
r210c19 = add r210c11,r212c7
v555 = is_equal r209c31,r55c35
v557 = is_equal r209c31,r27c75
r210c23 = or v555,v557
r212c27 = and v27,r210c23
v559 = add_virtual_target
connect r212c27,v559
v1 = constant 0
r211c35 = sub v1,r210c19
r212c31 = mul v559,r211c35
r210c27 = add r210c19,r212c31
v560 = is_equal r209c31,r191c43
v562 = is_equal r209c31,r191c59
r210c31 = or v560,v562
r212c51 = and v28,r210c31
v564 = add_virtual_target
connect r212c51,v564
v1 = constant 0
r211c63 = sub v1,r210c27
r212c55 = mul v564,r211c63
r210c35 = add r210c27,r212c55
v565 = is_equal r209c31,r191c79
v567 = is_equal r209c31,r194c15
r210c39 = or v565,v567
r212c75 = and v29,r210c39
v569 = add_virtual_target
connect r212c75,v569
v1 = constant 0
r213c11 = sub v1,r210c35
r212c79 = mul v569,r213c11
r210c43 = add r210c35,r212c79
v570 = is_equal r209c31,r194c35
v572 = is_equal r209c31,r194c51
r210c47 = or v570,v572
r214c19 = and v30,r210c47
v574 = add_virtual_target
connect r214c19,v574
v1 = constant 0
r213c39 = sub v1,r210c43
r214c23 = mul v574,r213c39
r210c51 = add r210c43,r214c23
v575 = is_equal r209c31,r194c71
v577 = is_equal r209c31,r196c7
r210c55 = or v575,v577
r214c43 = and v31,r210c55
v579 = add_virtual_target
connect r214c43,v579
v1 = constant 0
r213c67 = sub v1,r210c51
r214c47 = mul v579,r213c67
r210c59 = add r210c51,r214c47
v580 = is_equal r209c31,r196c27
v582 = is_equal r209c31,r196c43
r210c63 = or v580,v582
r214c67 = and v32,r210c63
v584 = add_virtual_target
connect r214c67,v584
v1 = constant 0
r215c15 = sub v1,r210c59
r214c71 = mul v584,r215c15
r210c67 = add r210c59,r214c71
v441 = constant 4
r215c19 = sub v69,v441
v585 = is_equal r215c19,v70
v587 = is_equal r215c19,r189c51
r210c71 = or v585,v587
r216c11 = and v33,r210c71
v589 = add_virtual_target
connect r216c11,v589
v1 = constant 0
r215c47 = sub v1,r210c67
r216c15 = mul v589,r215c47
r210c75 = add r210c67,r216c15
v590 = is_equal r215c19,r52c59
v592 = is_equal r215c19,r27c27
r210c79 = or v590,v592
r216c35 = and v34,r210c79
v594 = add_virtual_target
connect r216c35,v594
v1 = constant 0
r215c75 = sub v1,r210c75
r216c39 = mul v594,r215c75
r218c3 = add r210c75,r216c39
v595 = is_equal r215c19,r55c35
v597 = is_equal r215c19,r27c75
r218c7 = or v595,v597
r216c59 = and v35,r218c7
v599 = add_virtual_target
connect r216c59,v599
v1 = constant 0
r219c23 = sub v1,r218c3
r216c63 = mul v599,r219c23
r218c11 = add r218c3,r216c63
v600 = is_equal r215c19,r191c43
v602 = is_equal r215c19,r191c59
r218c15 = or v600,v602
r220c3 = and v36,r218c15
v604 = add_virtual_target
connect r220c3,v604
v1 = constant 0
r219c51 = sub v1,r218c11
r220c7 = mul v604,r219c51
r218c19 = add r218c11,r220c7
v605 = is_equal r215c19,r191c79
v607 = is_equal r215c19,r194c15
r218c23 = or v605,v607
r220c27 = and v37,r218c23
v609 = add_virtual_target
connect r220c27,v609
v1 = constant 0
r219c79 = sub v1,r218c19
r220c31 = mul v609,r219c79
r218c27 = add r218c19,r220c31
v610 = is_equal r215c19,r194c35
v612 = is_equal r215c19,r194c51
r218c31 = or v610,v612
r220c51 = and v38,r218c31
v614 = add_virtual_target
connect r220c51,v614
v1 = constant 0
r221c27 = sub v1,r218c27
r220c55 = mul v614,r221c27
r218c35 = add r218c27,r220c55
v615 = is_equal r215c19,r194c71
v617 = is_equal r215c19,r196c7
r218c39 = or v615,v617
r220c75 = and v39,r218c39
v619 = add_virtual_target
connect r220c75,v619
v1 = constant 0
r221c55 = sub v1,r218c35
r220c79 = mul v619,r221c55
r218c43 = add r218c35,r220c79
v620 = is_equal r215c19,r196c27
v622 = is_equal r215c19,r196c43
r218c47 = or v620,v622
r222c19 = and v40,r218c47
v624 = add_virtual_target
connect r222c19,v624
v1 = constant 0
r223c3 = sub v1,r218c43
r222c23 = mul v624,r223c3
r218c51 = add r218c43,r222c23
v447 = constant 5
r223c7 = sub v69,v447
v625 = is_equal r223c7,v70
v627 = is_equal r223c7,r189c51
r218c55 = or v625,v627
r222c43 = and v41,r218c55
v629 = add_virtual_target
connect r222c43,v629
v1 = constant 0
r223c35 = sub v1,r218c51
r222c47 = mul v629,r223c35
r218c59 = add r218c51,r222c47
v630 = is_equal r223c7,r52c59
v632 = is_equal r223c7,r27c27
r218c63 = or v630,v632
r222c67 = and v42,r218c63
v634 = add_virtual_target
connect r222c67,v634
v1 = constant 0
r223c63 = sub v1,r218c59
r222c71 = mul v634,r223c63
r218c67 = add r218c59,r222c71
v635 = is_equal r223c7,r55c35
v637 = is_equal r223c7,r27c75
r218c71 = or v635,v637
r225c11 = and v43,r218c71
v639 = add_virtual_target
connect r225c11,v639
v1 = constant 0
r224c11 = sub v1,r218c67
r225c15 = mul v639,r224c11
r218c75 = add r218c67,r225c15
v640 = is_equal r223c7,r191c43
v642 = is_equal r223c7,r191c59
r218c79 = or v640,v642
r225c35 = and v44,r218c79
v644 = add_virtual_target
connect r225c35,v644
v1 = constant 0
r224c39 = sub v1,r218c75
r225c39 = mul v644,r224c39
r226c3 = add r218c75,r225c39
v645 = is_equal r223c7,r191c79
v647 = is_equal r223c7,r194c15
r226c7 = or v645,v647
r225c59 = and v45,r226c7
v649 = add_virtual_target
connect r225c59,v649
v1 = constant 0
r224c67 = sub v1,r226c3
r225c63 = mul v649,r224c67
r226c11 = add r226c3,r225c63
v650 = is_equal r223c7,r194c35
v652 = is_equal r223c7,r194c51
r226c15 = or v650,v652
r228c3 = and v46,r226c15
v654 = add_virtual_target
connect r228c3,v654
v1 = constant 0
r227c15 = sub v1,r226c11
r228c7 = mul v654,r227c15
r226c19 = add r226c11,r228c7
v655 = is_equal r223c7,r194c71
v657 = is_equal r223c7,r196c7
r226c23 = or v655,v657
r228c27 = and v47,r226c23
v659 = add_virtual_target
connect r228c27,v659
v1 = constant 0
r227c43 = sub v1,r226c19
r228c31 = mul v659,r227c43
r226c27 = add r226c19,r228c31
v660 = is_equal r223c7,r196c27
v662 = is_equal r223c7,r196c43
r226c31 = or v660,v662
r228c51 = and v48,r226c31
v664 = add_virtual_target
connect r228c51,v664
v1 = constant 0
r227c71 = sub v1,r226c27
r228c55 = mul v664,r227c71
r226c35 = add r226c27,r228c55
v453 = constant 6
r227c75 = sub v69,v453
v665 = is_equal r227c75,v70
v667 = is_equal r227c75,r189c51
r226c39 = or v665,v667
r228c75 = and v49,r226c39
v669 = add_virtual_target
connect r228c75,v669
v1 = constant 0
r229c23 = sub v1,r226c35
r228c79 = mul v669,r229c23
r226c43 = add r226c35,r228c79
v670 = is_equal r227c75,r52c59
v672 = is_equal r227c75,r27c27
r226c47 = or v670,v672
r230c19 = and v50,r226c47
v674 = add_virtual_target
connect r230c19,v674
v1 = constant 0
r229c51 = sub v1,r226c43
r230c23 = mul v674,r229c51
r226c51 = add r226c43,r230c23
v675 = is_equal r227c75,r55c35
v677 = is_equal r227c75,r27c75
r226c55 = or v675,v677
r230c43 = and v51,r226c55
v679 = add_virtual_target
connect r230c43,v679
v1 = constant 0
r229c79 = sub v1,r226c51
r230c47 = mul v679,r229c79
r226c59 = add r226c51,r230c47
v680 = is_equal r227c75,r191c43
v682 = is_equal r227c75,r191c59
r226c63 = or v680,v682
r230c67 = and v52,r226c63
v684 = add_virtual_target
connect r230c67,v684
v1 = constant 0
r231c27 = sub v1,r226c59
r230c71 = mul v684,r231c27
r226c67 = add r226c59,r230c71
v685 = is_equal r227c75,r191c79
v687 = is_equal r227c75,r194c15
r226c71 = or v685,v687
r232c11 = and v53,r226c71
v689 = add_virtual_target
connect r232c11,v689
v1 = constant 0
r231c55 = sub v1,r226c67
r232c15 = mul v689,r231c55
r226c75 = add r226c67,r232c15
v690 = is_equal r227c75,r194c35
v692 = is_equal r227c75,r194c51
r226c79 = or v690,v692
r232c35 = and v54,r226c79
v694 = add_virtual_target
connect r232c35,v694
v1 = constant 0
r234c3 = sub v1,r226c75
r232c39 = mul v694,r234c3
r235c3 = add r226c75,r232c39
v695 = is_equal r227c75,r194c71
v697 = is_equal r227c75,r196c7
r235c7 = or v695,v697
r232c59 = and v55,r235c7
v699 = add_virtual_target
connect r232c59,v699
v1 = constant 0
r234c31 = sub v1,r235c3
r232c63 = mul v699,r234c31
r235c11 = add r235c3,r232c63
v700 = is_equal r227c75,r196c27
v702 = is_equal r227c75,r196c43
r235c15 = or v700,v702
r236c3 = and v56,r235c15
v704 = add_virtual_target
connect r236c3,v704
v1 = constant 0
r234c59 = sub v1,r235c11
r236c7 = mul v704,r234c59
r235c19 = add r235c11,r236c7
v459 = constant 7
r234c63 = sub v69,v459
v705 = is_equal r234c63,v70
v707 = is_equal r234c63,r189c51
r235c23 = or v705,v707
r236c27 = and v57,r235c23
v709 = add_virtual_target
connect r236c27,v709
v1 = constant 0
r237c11 = sub v1,r235c19
r236c31 = mul v709,r237c11
r235c27 = add r235c19,r236c31
v710 = is_equal r234c63,r52c59
v712 = is_equal r234c63,r27c27
r235c31 = or v710,v712
r236c51 = and v58,r235c31
v714 = add_virtual_target
connect r236c51,v714
v1 = constant 0
r237c39 = sub v1,r235c27
r236c55 = mul v714,r237c39
r235c35 = add r235c27,r236c55
v715 = is_equal r234c63,r55c35
v717 = is_equal r234c63,r27c75
r235c39 = or v715,v717
r236c75 = and v59,r235c39
v719 = add_virtual_target
connect r236c75,v719
v1 = constant 0
r237c67 = sub v1,r235c35
r236c79 = mul v719,r237c67
r235c43 = add r235c35,r236c79
v720 = is_equal r234c63,r191c43
v722 = is_equal r234c63,r191c59
r235c47 = or v720,v722
r238c19 = and v60,r235c47
v724 = add_virtual_target
connect r238c19,v724
v1 = constant 0
r239c15 = sub v1,r235c43
r238c23 = mul v724,r239c15
r235c51 = add r235c43,r238c23
v725 = is_equal r234c63,r191c79
v727 = is_equal r234c63,r194c15
r235c55 = or v725,v727
r238c43 = and v61,r235c55
v729 = add_virtual_target
connect r238c43,v729
v1 = constant 0
r239c43 = sub v1,r235c51
r238c47 = mul v729,r239c43
r235c59 = add r235c51,r238c47
v730 = is_equal r234c63,r194c35
v732 = is_equal r234c63,r194c51
r235c63 = or v730,v732
r238c67 = and v62,r235c63
v734 = add_virtual_target
connect r238c67,v734
v1 = constant 0
r239c71 = sub v1,r235c59
r238c71 = mul v734,r239c71
r235c67 = add r235c59,r238c71
v735 = is_equal r234c63,r194c71
v737 = is_equal r234c63,r196c7
r235c71 = or v735,v737
r241c11 = and v63,r235c71
v739 = add_virtual_target
connect r241c11,v739
v1 = constant 0
r240c19 = sub v1,r235c67
r241c15 = mul v739,r240c19
r235c75 = add r235c67,r241c15
v740 = is_equal r234c63,r196c27
v742 = is_equal r234c63,r196c43
r235c79 = or v740,v742
r241c35 = and v64,r235c79
v744 = add_virtual_target
connect r241c35,v744
v1 = constant 0
r240c47 = sub v1,r235c75
r241c39 = mul v744,r240c47
r242c3 = add r235c75,r241c39
v745 = add_virtual_target
connect r242c3,v745
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v745,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v746 = is_equal v71,v72
v1 = constant 0
r240c63 = sub v1,v72
v748 = is_equal v71,r240c63
r242c7 = or v746,v748
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r241c59 = and v0,r242c7
v750 = add_virtual_target
connect r241c59,v750
v124 = constant 18446744069414584320
r241c63 = mul v750,v124
v87 = constant 1
v87 = constant 1
r242c11 = add v87,r241c63
v751 = is_equal v71,r81c3
v87 = constant 1
r243c11 = sub v87,v72
v753 = is_equal v71,r243c11
r242c15 = or v751,v753
r244c3 = and v2,r242c15
v755 = add_virtual_target
connect r244c3,v755
v1 = constant 0
r243c27 = sub v1,r242c11
r244c7 = mul v755,r243c27
r242c19 = add r242c11,r244c7
v756 = is_equal v71,r81c59
v84 = constant 2
r243c43 = sub v84,v72
v758 = is_equal v71,r243c43
r242c23 = or v756,v758
r244c27 = and v3,r242c23
v760 = add_virtual_target
connect r244c27,v760
v1 = constant 0
r243c59 = sub v1,r242c19
r244c31 = mul v760,r243c59
r242c27 = add r242c19,r244c31
v435 = constant 3
r243c63 = sub v72,v435
v761 = is_equal v71,r243c63
v435 = constant 3
r243c79 = sub v435,v72
v763 = is_equal v71,r243c79
r242c31 = or v761,v763
r244c51 = and v4,r242c31
v765 = add_virtual_target
connect r244c51,v765
v1 = constant 0
r245c15 = sub v1,r242c27
r244c55 = mul v765,r245c15
r242c35 = add r242c27,r244c55
v441 = constant 4
r245c19 = sub v72,v441
v766 = is_equal v71,r245c19
v441 = constant 4
r245c35 = sub v441,v72
v768 = is_equal v71,r245c35
r242c39 = or v766,v768
r244c75 = and v5,r242c39
v770 = add_virtual_target
connect r244c75,v770
v1 = constant 0
r245c51 = sub v1,r242c35
r244c79 = mul v770,r245c51
r242c43 = add r242c35,r244c79
v447 = constant 5
r245c55 = sub v72,v447
v771 = is_equal v71,r245c55
v447 = constant 5
r245c71 = sub v447,v72
v773 = is_equal v71,r245c71
r242c47 = or v771,v773
r246c19 = and v6,r242c47
v775 = add_virtual_target
connect r246c19,v775
v1 = constant 0
r247c7 = sub v1,r242c43
r246c23 = mul v775,r247c7
r242c51 = add r242c43,r246c23
v453 = constant 6
r247c11 = sub v72,v453
v776 = is_equal v71,r247c11
v453 = constant 6
r247c27 = sub v453,v72
v778 = is_equal v71,r247c27
r242c55 = or v776,v778
r246c43 = and v7,r242c55
v780 = add_virtual_target
connect r246c43,v780
v1 = constant 0
r247c43 = sub v1,r242c51
r246c47 = mul v780,r247c43
r242c59 = add r242c51,r246c47
v459 = constant 7
r247c47 = sub v72,v459
v781 = is_equal v71,r247c47
v459 = constant 7
r247c63 = sub v459,v72
v783 = is_equal v71,r247c63
r242c63 = or v781,v783
r246c67 = and v8,r242c63
v785 = add_virtual_target
connect r246c67,v785
v1 = constant 0
r247c79 = sub v1,r242c59
r246c71 = mul v785,r247c79
r242c67 = add r242c59,r246c71
v786 = is_equal r81c43,v72
v788 = is_equal r81c43,r240c63
r242c71 = or v786,v788
r249c11 = and v9,r242c71
v790 = add_virtual_target
connect r249c11,v790
v1 = constant 0
r248c27 = sub v1,r242c67
r249c15 = mul v790,r248c27
r242c75 = add r242c67,r249c15
v791 = is_equal r81c43,r81c3
v793 = is_equal r81c43,r243c11
r242c79 = or v791,v793
r249c35 = and v10,r242c79
v795 = add_virtual_target
connect r249c35,v795
v1 = constant 0
r248c55 = sub v1,r242c75
r249c39 = mul v795,r248c55
r251c3 = add r242c75,r249c39
v796 = is_equal r81c43,r81c59
v798 = is_equal r81c43,r243c43
r251c7 = or v796,v798
r249c59 = and v11,r251c7
v800 = add_virtual_target
connect r249c59,v800
v1 = constant 0
r252c3 = sub v1,r251c3
r249c63 = mul v800,r252c3
r251c11 = add r251c3,r249c63
v801 = is_equal r81c43,r243c63
v803 = is_equal r81c43,r243c79
r251c15 = or v801,v803
r253c3 = and v12,r251c15
v805 = add_virtual_target
connect r253c3,v805
v1 = constant 0
r252c31 = sub v1,r251c11
r253c7 = mul v805,r252c31
r251c19 = add r251c11,r253c7
v806 = is_equal r81c43,r245c19
v808 = is_equal r81c43,r245c35
r251c23 = or v806,v808
r253c27 = and v13,r251c23
v810 = add_virtual_target
connect r253c27,v810
v1 = constant 0
r252c59 = sub v1,r251c19
r253c31 = mul v810,r252c59
r251c27 = add r251c19,r253c31
v811 = is_equal r81c43,r245c55
v813 = is_equal r81c43,r245c71
r251c31 = or v811,v813
r253c51 = and v14,r251c31
v815 = add_virtual_target
connect r253c51,v815
v1 = constant 0
r254c7 = sub v1,r251c27
r253c55 = mul v815,r254c7
r251c35 = add r251c27,r253c55
v816 = is_equal r81c43,r247c11
v818 = is_equal r81c43,r247c27
r251c39 = or v816,v818
r253c75 = and v15,r251c39
v820 = add_virtual_target
connect r253c75,v820
v1 = constant 0
r254c35 = sub v1,r251c35
r253c79 = mul v820,r254c35
r251c43 = add r251c35,r253c79
v821 = is_equal r81c43,r247c47
v823 = is_equal r81c43,r247c63
r251c47 = or v821,v823
r255c19 = and v16,r251c47
v825 = add_virtual_target
connect r255c19,v825
v1 = constant 0
r254c63 = sub v1,r251c43
r255c23 = mul v825,r254c63
r251c51 = add r251c43,r255c23
v826 = is_equal r79c67,v72
v828 = is_equal r79c67,r240c63
r251c55 = or v826,v828
r255c43 = and v17,r251c55
v830 = add_virtual_target
connect r255c43,v830
v1 = constant 0
r256c11 = sub v1,r251c51
r255c47 = mul v830,r256c11
r251c59 = add r251c51,r255c47
v831 = is_equal r79c67,r81c3
v833 = is_equal r79c67,r243c11
r251c63 = or v831,v833
r255c67 = and v18,r251c63
v835 = add_virtual_target
connect r255c67,v835
v1 = constant 0
r256c39 = sub v1,r251c59
r255c71 = mul v835,r256c39
r251c67 = add r251c59,r255c71
v836 = is_equal r79c67,r81c59
v838 = is_equal r79c67,r243c43
r251c71 = or v836,v838
r257c11 = and v19,r251c71
v840 = add_virtual_target
connect r257c11,v840
v1 = constant 0
r256c67 = sub v1,r251c67
r257c15 = mul v840,r256c67
r251c75 = add r251c67,r257c15
v841 = is_equal r79c67,r243c63
v843 = is_equal r79c67,r243c79
r251c79 = or v841,v843
r257c35 = and v20,r251c79
v845 = add_virtual_target
connect r257c35,v845
v1 = constant 0
r258c15 = sub v1,r251c75
r257c39 = mul v845,r258c15
r259c3 = add r251c75,r257c39
v846 = is_equal r79c67,r245c19
v848 = is_equal r79c67,r245c35
r259c7 = or v846,v848
r257c59 = and v21,r259c7
v850 = add_virtual_target
connect r257c59,v850
v1 = constant 0
r258c43 = sub v1,r259c3
r257c63 = mul v850,r258c43
r259c11 = add r259c3,r257c63
v851 = is_equal r79c67,r245c55
v853 = is_equal r79c67,r245c71
r259c15 = or v851,v853
r260c3 = and v22,r259c15
v855 = add_virtual_target
connect r260c3,v855
v1 = constant 0
r258c71 = sub v1,r259c11
r260c7 = mul v855,r258c71
r259c19 = add r259c11,r260c7
v856 = is_equal r79c67,r247c11
v858 = is_equal r79c67,r247c27
r259c23 = or v856,v858
r260c27 = and v23,r259c23
v860 = add_virtual_target
connect r260c27,v860
v1 = constant 0
r261c19 = sub v1,r259c19
r260c31 = mul v860,r261c19
r259c27 = add r259c19,r260c31
v861 = is_equal r79c67,r247c47
v863 = is_equal r79c67,r247c63
r259c31 = or v861,v863
r260c51 = and v24,r259c31
v865 = add_virtual_target
connect r260c51,v865
v1 = constant 0
r261c47 = sub v1,r259c27
r260c55 = mul v865,r261c47
r259c35 = add r259c27,r260c55
v435 = constant 3
r261c51 = sub v71,v435
v866 = is_equal r261c51,v72
v868 = is_equal r261c51,r240c63
r259c39 = or v866,v868
r260c75 = and v25,r259c39
v870 = add_virtual_target
connect r260c75,v870
v1 = constant 0
r261c79 = sub v1,r259c35
r260c79 = mul v870,r261c79
r259c43 = add r259c35,r260c79
v871 = is_equal r261c51,r81c3
v873 = is_equal r261c51,r243c11
r259c47 = or v871,v873
r263c19 = and v26,r259c47
v875 = add_virtual_target
connect r263c19,v875
v1 = constant 0
r262c27 = sub v1,r259c43
r263c23 = mul v875,r262c27
r259c51 = add r259c43,r263c23
v876 = is_equal r261c51,r81c59
v878 = is_equal r261c51,r243c43
r259c55 = or v876,v878
r263c43 = and v27,r259c55
v880 = add_virtual_target
connect r263c43,v880
v1 = constant 0
r262c55 = sub v1,r259c51
r263c47 = mul v880,r262c55
r259c59 = add r259c51,r263c47
v881 = is_equal r261c51,r243c63
v883 = is_equal r261c51,r243c79
r259c63 = or v881,v883
r263c67 = and v28,r259c63
v885 = add_virtual_target
connect r263c67,v885
v1 = constant 0
r264c3 = sub v1,r259c59
r263c71 = mul v885,r264c3
r259c67 = add r259c59,r263c71
v886 = is_equal r261c51,r245c19
v888 = is_equal r261c51,r245c35
r259c71 = or v886,v888
r265c11 = and v29,r259c71
v890 = add_virtual_target
connect r265c11,v890
v1 = constant 0
r264c31 = sub v1,r259c67
r265c15 = mul v890,r264c31
r259c75 = add r259c67,r265c15
v891 = is_equal r261c51,r245c55
v893 = is_equal r261c51,r245c71
r259c79 = or v891,v893
r265c35 = and v30,r259c79
v895 = add_virtual_target
connect r265c35,v895
v1 = constant 0
r264c59 = sub v1,r259c75
r265c39 = mul v895,r264c59
r267c3 = add r259c75,r265c39
v896 = is_equal r261c51,r247c11
v898 = is_equal r261c51,r247c27
r267c7 = or v896,v898
r265c59 = and v31,r267c7
v900 = add_virtual_target
connect r265c59,v900
v1 = constant 0
r268c7 = sub v1,r267c3
r265c63 = mul v900,r268c7
r267c11 = add r267c3,r265c63
v901 = is_equal r261c51,r247c47
v903 = is_equal r261c51,r247c63
r267c15 = or v901,v903
r269c3 = and v32,r267c15
v905 = add_virtual_target
connect r269c3,v905
v1 = constant 0
r268c35 = sub v1,r267c11
r269c7 = mul v905,r268c35
r267c19 = add r267c11,r269c7
v441 = constant 4
r268c39 = sub v71,v441
v906 = is_equal r268c39,v72
v908 = is_equal r268c39,r240c63
r267c23 = or v906,v908
r269c27 = and v33,r267c23
v910 = add_virtual_target
connect r269c27,v910
v1 = constant 0
r268c67 = sub v1,r267c19
r269c31 = mul v910,r268c67
r267c27 = add r267c19,r269c31
v911 = is_equal r268c39,r81c3
v913 = is_equal r268c39,r243c11
r267c31 = or v911,v913
r269c51 = and v34,r267c31
v915 = add_virtual_target
connect r269c51,v915
v1 = constant 0
r270c15 = sub v1,r267c27
r269c55 = mul v915,r270c15
r267c35 = add r267c27,r269c55
v916 = is_equal r268c39,r81c59
v918 = is_equal r268c39,r243c43
r267c39 = or v916,v918
r269c75 = and v35,r267c39
v920 = add_virtual_target
connect r269c75,v920
v1 = constant 0
r270c43 = sub v1,r267c35
r269c79 = mul v920,r270c43
r267c43 = add r267c35,r269c79
v921 = is_equal r268c39,r243c63
v923 = is_equal r268c39,r243c79
r267c47 = or v921,v923
r271c19 = and v36,r267c47
v925 = add_virtual_target
connect r271c19,v925
v1 = constant 0
r270c71 = sub v1,r267c43
r271c23 = mul v925,r270c71
r267c51 = add r267c43,r271c23
v926 = is_equal r268c39,r245c19
v928 = is_equal r268c39,r245c35
r267c55 = or v926,v928
r271c43 = and v37,r267c55
v930 = add_virtual_target
connect r271c43,v930
v1 = constant 0
r272c19 = sub v1,r267c51
r271c47 = mul v930,r272c19
r267c59 = add r267c51,r271c47
v931 = is_equal r268c39,r245c55
v933 = is_equal r268c39,r245c71
r267c63 = or v931,v933
r271c67 = and v38,r267c63
v935 = add_virtual_target
connect r271c67,v935
v1 = constant 0
r272c47 = sub v1,r267c59
r271c71 = mul v935,r272c47
r267c67 = add r267c59,r271c71
v936 = is_equal r268c39,r247c11
v938 = is_equal r268c39,r247c27
r267c71 = or v936,v938
r273c11 = and v39,r267c71
v940 = add_virtual_target
connect r273c11,v940
v1 = constant 0
r272c75 = sub v1,r267c67
r273c15 = mul v940,r272c75
r267c75 = add r267c67,r273c15
v941 = is_equal r268c39,r247c47
v943 = is_equal r268c39,r247c63
r267c79 = or v941,v943
r273c35 = and v40,r267c79
v945 = add_virtual_target
connect r273c35,v945
v1 = constant 0
r274c23 = sub v1,r267c75
r273c39 = mul v945,r274c23
r275c3 = add r267c75,r273c39
v447 = constant 5
r274c27 = sub v71,v447
v946 = is_equal r274c27,v72
v948 = is_equal r274c27,r240c63
r275c7 = or v946,v948
r273c59 = and v41,r275c7
v950 = add_virtual_target
connect r273c59,v950
v1 = constant 0
r274c55 = sub v1,r275c3
r273c63 = mul v950,r274c55
r275c11 = add r275c3,r273c63
v951 = is_equal r274c27,r81c3
v953 = is_equal r274c27,r243c11
r275c15 = or v951,v953
r276c3 = and v42,r275c15
v955 = add_virtual_target
connect r276c3,v955
v1 = constant 0
r277c3 = sub v1,r275c11
r276c7 = mul v955,r277c3
r275c19 = add r275c11,r276c7
v956 = is_equal r274c27,r81c59
v958 = is_equal r274c27,r243c43
r275c23 = or v956,v958
r276c27 = and v43,r275c23
v960 = add_virtual_target
connect r276c27,v960
v1 = constant 0
r277c31 = sub v1,r275c19
r276c31 = mul v960,r277c31
r275c27 = add r275c19,r276c31
v961 = is_equal r274c27,r243c63
v963 = is_equal r274c27,r243c79
r275c31 = or v961,v963
r276c51 = and v44,r275c31
v965 = add_virtual_target
connect r276c51,v965
v1 = constant 0
r277c59 = sub v1,r275c27
r276c55 = mul v965,r277c59
r275c35 = add r275c27,r276c55
v966 = is_equal r274c27,r245c19
v968 = is_equal r274c27,r245c35
r275c39 = or v966,v968
r276c75 = and v45,r275c39
v970 = add_virtual_target
connect r276c75,v970
v1 = constant 0
r278c7 = sub v1,r275c35
r276c79 = mul v970,r278c7
r275c43 = add r275c35,r276c79
v971 = is_equal r274c27,r245c55
v973 = is_equal r274c27,r245c71
r275c47 = or v971,v973
r279c19 = and v46,r275c47
v975 = add_virtual_target
connect r279c19,v975
v1 = constant 0
r278c35 = sub v1,r275c43
r279c23 = mul v975,r278c35
r275c51 = add r275c43,r279c23
v976 = is_equal r274c27,r247c11
v978 = is_equal r274c27,r247c27
r275c55 = or v976,v978
r279c43 = and v47,r275c55
v980 = add_virtual_target
connect r279c43,v980
v1 = constant 0
r278c63 = sub v1,r275c51
r279c47 = mul v980,r278c63
r275c59 = add r275c51,r279c47
v981 = is_equal r274c27,r247c47
v983 = is_equal r274c27,r247c63
r275c63 = or v981,v983
r279c67 = and v48,r275c63
v985 = add_virtual_target
connect r279c67,v985
v1 = constant 0
r280c11 = sub v1,r275c59
r279c71 = mul v985,r280c11
r275c67 = add r275c59,r279c71
v453 = constant 6
r280c15 = sub v71,v453
v986 = is_equal r280c15,v72
v988 = is_equal r280c15,r240c63
r275c71 = or v986,v988
r281c11 = and v49,r275c71
v990 = add_virtual_target
connect r281c11,v990
v1 = constant 0
r280c43 = sub v1,r275c67
r281c15 = mul v990,r280c43
r275c75 = add r275c67,r281c15
v991 = is_equal r280c15,r81c3
v993 = is_equal r280c15,r243c11
r275c79 = or v991,v993
r281c35 = and v50,r275c79
v995 = add_virtual_target
connect r281c35,v995
v1 = constant 0
r280c71 = sub v1,r275c75
r281c39 = mul v995,r280c71
r283c3 = add r275c75,r281c39
v996 = is_equal r280c15,r81c59
v998 = is_equal r280c15,r243c43
r283c7 = or v996,v998
r281c59 = and v51,r283c7
v1000 = add_virtual_target
connect r281c59,v1000
v1 = constant 0
r284c19 = sub v1,r283c3
r281c63 = mul v1000,r284c19
r283c11 = add r283c3,r281c63
v1001 = is_equal r280c15,r243c63
v1003 = is_equal r280c15,r243c79
r283c15 = or v1001,v1003
r285c3 = and v52,r283c15
v1005 = add_virtual_target
connect r285c3,v1005
v1 = constant 0
r284c47 = sub v1,r283c11
r285c7 = mul v1005,r284c47
r283c19 = add r283c11,r285c7
v1006 = is_equal r280c15,r245c19
v1008 = is_equal r280c15,r245c35
r283c23 = or v1006,v1008
r285c27 = and v53,r283c23
v1010 = add_virtual_target
connect r285c27,v1010
v1 = constant 0
r284c75 = sub v1,r283c19
r285c31 = mul v1010,r284c75
r283c27 = add r283c19,r285c31
v1011 = is_equal r280c15,r245c55
v1013 = is_equal r280c15,r245c71
r283c31 = or v1011,v1013
r285c51 = and v54,r283c31
v1015 = add_virtual_target
connect r285c51,v1015
v1 = constant 0
r286c23 = sub v1,r283c27
r285c55 = mul v1015,r286c23
r283c35 = add r283c27,r285c55
v1016 = is_equal r280c15,r247c11
v1018 = is_equal r280c15,r247c27
r283c39 = or v1016,v1018
r285c75 = and v55,r283c39
v1020 = add_virtual_target
connect r285c75,v1020
v1 = constant 0
r286c51 = sub v1,r283c35
r285c79 = mul v1020,r286c51
r283c43 = add r283c35,r285c79
v1021 = is_equal r280c15,r247c47
v1023 = is_equal r280c15,r247c63
r283c47 = or v1021,v1023
r287c19 = and v56,r283c47
v1025 = add_virtual_target
connect r287c19,v1025
v1 = constant 0
r286c79 = sub v1,r283c43
r287c23 = mul v1025,r286c79
r283c51 = add r283c43,r287c23
v459 = constant 7
r288c3 = sub v71,v459
v1026 = is_equal r288c3,v72
v1028 = is_equal r288c3,r240c63
r283c55 = or v1026,v1028
r287c43 = and v57,r283c55
v1030 = add_virtual_target
connect r287c43,v1030
v1 = constant 0
r288c31 = sub v1,r283c51
r287c47 = mul v1030,r288c31
r283c59 = add r283c51,r287c47
v1031 = is_equal r288c3,r81c3
v1033 = is_equal r288c3,r243c11
r283c63 = or v1031,v1033
r287c67 = and v58,r283c63
v1035 = add_virtual_target
connect r287c67,v1035
v1 = constant 0
r288c59 = sub v1,r283c59
r287c71 = mul v1035,r288c59
r283c67 = add r283c59,r287c71
v1036 = is_equal r288c3,r81c59
v1038 = is_equal r288c3,r243c43
r283c71 = or v1036,v1038
r289c11 = and v59,r283c71
v1040 = add_virtual_target
connect r289c11,v1040
v1 = constant 0
r290c7 = sub v1,r283c67
r289c15 = mul v1040,r290c7
r283c75 = add r283c67,r289c15
v1041 = is_equal r288c3,r243c63
v1043 = is_equal r288c3,r243c79
r283c79 = or v1041,v1043
r289c35 = and v60,r283c79
v1045 = add_virtual_target
connect r289c35,v1045
v1 = constant 0
r290c35 = sub v1,r283c75
r289c39 = mul v1045,r290c35
r291c3 = add r283c75,r289c39
v1046 = is_equal r288c3,r245c19
v1048 = is_equal r288c3,r245c35
r291c7 = or v1046,v1048
r289c59 = and v61,r291c7
v1050 = add_virtual_target
connect r289c59,v1050
v1 = constant 0
r290c63 = sub v1,r291c3
r289c63 = mul v1050,r290c63
r291c11 = add r291c3,r289c63
v1051 = is_equal r288c3,r245c55
v1053 = is_equal r288c3,r245c71
r291c15 = or v1051,v1053
r293c3 = and v62,r291c15
v1055 = add_virtual_target
connect r293c3,v1055
v1 = constant 0
r292c11 = sub v1,r291c11
r293c7 = mul v1055,r292c11
r291c19 = add r291c11,r293c7
v1056 = is_equal r288c3,r247c11
v1058 = is_equal r288c3,r247c27
r291c23 = or v1056,v1058
r293c27 = and v63,r291c23
v1060 = add_virtual_target
connect r293c27,v1060
v1 = constant 0
r292c39 = sub v1,r291c19
r293c31 = mul v1060,r292c39
r291c27 = add r291c19,r293c31
v1061 = is_equal r288c3,r247c47
v1063 = is_equal r288c3,r247c63
r291c31 = or v1061,v1063
r293c51 = and v64,r291c31
v1065 = add_virtual_target
connect r293c51,v1065
v1 = constant 0
r292c67 = sub v1,r291c27
r293c55 = mul v1065,r292c67
r291c35 = add r291c27,r293c55
v1066 = add_virtual_target
connect r291c35,v1066
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v1066,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1067 = is_equal v73,v74
v1 = constant 0
r294c3 = sub v1,v74
v1069 = is_equal v73,r294c3
r291c39 = or v1067,v1069
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r293c75 = and v0,r291c39
v1071 = add_virtual_target
connect r293c75,v1071
v124 = constant 18446744069414584320
r293c79 = mul v1071,v124
v87 = constant 1
v87 = constant 1
r291c43 = add v87,r293c79
v1072 = is_equal v73,r106c27
v87 = constant 1
r294c31 = sub v87,v74
v1074 = is_equal v73,r294c31
r291c47 = or v1072,v1074
r295c19 = and v2,r291c47
v1076 = add_virtual_target
connect r295c19,v1076
v1 = constant 0
r294c47 = sub v1,r291c43
r295c23 = mul v1076,r294c47
r291c51 = add r291c43,r295c23
v1077 = is_equal v73,r110c3
v84 = constant 2
r294c63 = sub v84,v74
v1079 = is_equal v73,r294c63
r291c55 = or v1077,v1079
r295c43 = and v3,r291c55
v1081 = add_virtual_target
connect r295c43,v1081
v1 = constant 0
r294c79 = sub v1,r291c51
r295c47 = mul v1081,r294c79
r291c59 = add r291c51,r295c47
v435 = constant 3
r296c3 = sub v74,v435
v1082 = is_equal v73,r296c3
v435 = constant 3
r296c19 = sub v435,v74
v1084 = is_equal v73,r296c19
r291c63 = or v1082,v1084
r295c67 = and v4,r291c63
v1086 = add_virtual_target
connect r295c67,v1086
v1 = constant 0
r296c35 = sub v1,r291c59
r295c71 = mul v1086,r296c35
r291c67 = add r291c59,r295c71
v441 = constant 4
r296c39 = sub v74,v441
v1087 = is_equal v73,r296c39
v441 = constant 4
r296c55 = sub v441,v74
v1089 = is_equal v73,r296c55
r291c71 = or v1087,v1089
r297c11 = and v5,r291c71
v1091 = add_virtual_target
connect r297c11,v1091
v1 = constant 0
r296c71 = sub v1,r291c67
r297c15 = mul v1091,r296c71
r291c75 = add r291c67,r297c15
v447 = constant 5
r296c75 = sub v74,v447
v1092 = is_equal v73,r296c75
v447 = constant 5
r298c11 = sub v447,v74
v1094 = is_equal v73,r298c11
r291c79 = or v1092,v1094
r297c35 = and v6,r291c79
v1096 = add_virtual_target
connect r297c35,v1096
v1 = constant 0
r298c27 = sub v1,r291c75
r297c39 = mul v1096,r298c27
r300c3 = add r291c75,r297c39
v453 = constant 6
r298c31 = sub v74,v453
v1097 = is_equal v73,r298c31
v453 = constant 6
r298c47 = sub v453,v74
v1099 = is_equal v73,r298c47
r300c7 = or v1097,v1099
r297c59 = and v7,r300c7
v1101 = add_virtual_target
connect r297c59,v1101
v1 = constant 0
r298c63 = sub v1,r300c3
r297c63 = mul v1101,r298c63
r300c11 = add r300c3,r297c63
v459 = constant 7
r298c67 = sub v74,v459
v1102 = is_equal v73,r298c67
v459 = constant 7
r301c3 = sub v459,v74
v1104 = is_equal v73,r301c3
r300c15 = or v1102,v1104
r302c3 = and v8,r300c15
v1106 = add_virtual_target
connect r302c3,v1106
v1 = constant 0
r301c19 = sub v1,r300c11
r302c7 = mul v1106,r301c19
r300c19 = add r300c11,r302c7
v1107 = is_equal r106c67,v74
v1109 = is_equal r106c67,r294c3
r300c23 = or v1107,v1109
r302c27 = and v9,r300c23
v1111 = add_virtual_target
connect r302c27,v1111
v1 = constant 0
r301c47 = sub v1,r300c19
r302c31 = mul v1111,r301c47
r300c27 = add r300c19,r302c31
v1112 = is_equal r106c67,r106c27
v1114 = is_equal r106c67,r294c31
r300c31 = or v1112,v1114
r302c51 = and v10,r300c31
v1116 = add_virtual_target
connect r302c51,v1116
v1 = constant 0
r301c75 = sub v1,r300c27
r302c55 = mul v1116,r301c75
r300c35 = add r300c27,r302c55
v1117 = is_equal r106c67,r110c3
v1119 = is_equal r106c67,r294c63
r300c39 = or v1117,v1119
r302c75 = and v11,r300c39
v1121 = add_virtual_target
connect r302c75,v1121
v1 = constant 0
r303c23 = sub v1,r300c35
r302c79 = mul v1121,r303c23
r300c43 = add r300c35,r302c79
v1122 = is_equal r106c67,r296c3
v1124 = is_equal r106c67,r296c19
r300c47 = or v1122,v1124
r304c19 = and v12,r300c47
v1126 = add_virtual_target
connect r304c19,v1126
v1 = constant 0
r303c51 = sub v1,r300c43
r304c23 = mul v1126,r303c51
r300c51 = add r300c43,r304c23
v1127 = is_equal r106c67,r296c39
v1129 = is_equal r106c67,r296c55
r300c55 = or v1127,v1129
r304c43 = and v13,r300c55
v1131 = add_virtual_target
connect r304c43,v1131
v1 = constant 0
r303c79 = sub v1,r300c51
r304c47 = mul v1131,r303c79
r300c59 = add r300c51,r304c47
v1132 = is_equal r106c67,r296c75
v1134 = is_equal r106c67,r298c11
r300c63 = or v1132,v1134
r304c67 = and v14,r300c63
v1136 = add_virtual_target
connect r304c67,v1136
v1 = constant 0
r305c27 = sub v1,r300c59
r304c71 = mul v1136,r305c27
r300c67 = add r300c59,r304c71
v1137 = is_equal r106c67,r298c31
v1139 = is_equal r106c67,r298c47
r300c71 = or v1137,v1139
r306c11 = and v15,r300c71
v1141 = add_virtual_target
connect r306c11,v1141
v1 = constant 0
r305c55 = sub v1,r300c67
r306c15 = mul v1141,r305c55
r300c75 = add r300c67,r306c15
v1142 = is_equal r106c67,r298c67
v1144 = is_equal r106c67,r301c3
r300c79 = or v1142,v1144
r306c35 = and v16,r300c79
v1146 = add_virtual_target
connect r306c35,v1146
v1 = constant 0
r307c3 = sub v1,r300c75
r306c39 = mul v1146,r307c3
r308c3 = add r300c75,r306c39
v1147 = is_equal r106c11,v74
v1149 = is_equal r106c11,r294c3
r308c7 = or v1147,v1149
r306c59 = and v17,r308c7
v1151 = add_virtual_target
connect r306c59,v1151
v1 = constant 0
r307c31 = sub v1,r308c3
r306c63 = mul v1151,r307c31
r308c11 = add r308c3,r306c63
v1152 = is_equal r106c11,r106c27
v1154 = is_equal r106c11,r294c31
r308c15 = or v1152,v1154
r309c3 = and v18,r308c15
v1156 = add_virtual_target
connect r309c3,v1156
v1 = constant 0
r307c59 = sub v1,r308c11
r309c7 = mul v1156,r307c59
r308c19 = add r308c11,r309c7
v1157 = is_equal r106c11,r110c3
v1159 = is_equal r106c11,r294c63
r308c23 = or v1157,v1159
r309c27 = and v19,r308c23
v1161 = add_virtual_target
connect r309c27,v1161
v1 = constant 0
r310c7 = sub v1,r308c19
r309c31 = mul v1161,r310c7
r308c27 = add r308c19,r309c31
v1162 = is_equal r106c11,r296c3
v1164 = is_equal r106c11,r296c19
r308c31 = or v1162,v1164
r309c51 = and v20,r308c31
v1166 = add_virtual_target
connect r309c51,v1166
v1 = constant 0
r310c35 = sub v1,r308c27
r309c55 = mul v1166,r310c35
r308c35 = add r308c27,r309c55
v1167 = is_equal r106c11,r296c39
v1169 = is_equal r106c11,r296c55
r308c39 = or v1167,v1169
r309c75 = and v21,r308c39
v1171 = add_virtual_target
connect r309c75,v1171
v1 = constant 0
r310c63 = sub v1,r308c35
r309c79 = mul v1171,r310c63
r308c43 = add r308c35,r309c79
v1172 = is_equal r106c11,r296c75
v1174 = is_equal r106c11,r298c11
r308c47 = or v1172,v1174
r311c19 = and v22,r308c47
v1176 = add_virtual_target
connect r311c19,v1176
v1 = constant 0
r312c11 = sub v1,r308c43
r311c23 = mul v1176,r312c11
r308c51 = add r308c43,r311c23
v1177 = is_equal r106c11,r298c31
v1179 = is_equal r106c11,r298c47
r308c55 = or v1177,v1179
r311c43 = and v23,r308c55
v1181 = add_virtual_target
connect r311c43,v1181
v1 = constant 0
r312c39 = sub v1,r308c51
r311c47 = mul v1181,r312c39
r308c59 = add r308c51,r311c47
v1182 = is_equal r106c11,r298c67
v1184 = is_equal r106c11,r301c3
r308c63 = or v1182,v1184
r311c67 = and v24,r308c63
v1186 = add_virtual_target
connect r311c67,v1186
v1 = constant 0
r312c67 = sub v1,r308c59
r311c71 = mul v1186,r312c67
r308c67 = add r308c59,r311c71
v435 = constant 3
r312c71 = sub v73,v435
v1187 = is_equal r312c71,v74
v1189 = is_equal r312c71,r294c3
r308c71 = or v1187,v1189
r314c11 = and v25,r308c71
v1191 = add_virtual_target
connect r314c11,v1191
v1 = constant 0
r313c19 = sub v1,r308c67
r314c15 = mul v1191,r313c19
r308c75 = add r308c67,r314c15
v1192 = is_equal r312c71,r106c27
v1194 = is_equal r312c71,r294c31
r308c79 = or v1192,v1194
r314c35 = and v26,r308c79
v1196 = add_virtual_target
connect r314c35,v1196
v1 = constant 0
r313c47 = sub v1,r308c75
r314c39 = mul v1196,r313c47
r316c3 = add r308c75,r314c39
v1197 = is_equal r312c71,r110c3
v1199 = is_equal r312c71,r294c63
r316c7 = or v1197,v1199
r314c59 = and v27,r316c7
v1201 = add_virtual_target
connect r314c59,v1201
v1 = constant 0
r313c75 = sub v1,r316c3
r314c63 = mul v1201,r313c75
r316c11 = add r316c3,r314c63
v1202 = is_equal r312c71,r296c3
v1204 = is_equal r312c71,r296c19
r316c15 = or v1202,v1204
r318c3 = and v28,r316c15
v1206 = add_virtual_target
connect r318c3,v1206
v1 = constant 0
r317c23 = sub v1,r316c11
r318c7 = mul v1206,r317c23
r316c19 = add r316c11,r318c7
v1207 = is_equal r312c71,r296c39
v1209 = is_equal r312c71,r296c55
r316c23 = or v1207,v1209
r318c27 = and v29,r316c23
v1211 = add_virtual_target
connect r318c27,v1211
v1 = constant 0
r317c51 = sub v1,r316c19
r318c31 = mul v1211,r317c51
r316c27 = add r316c19,r318c31
v1212 = is_equal r312c71,r296c75
v1214 = is_equal r312c71,r298c11
r316c31 = or v1212,v1214
r318c51 = and v30,r316c31
v1216 = add_virtual_target
connect r318c51,v1216
v1 = constant 0
r317c79 = sub v1,r316c27
r318c55 = mul v1216,r317c79
r316c35 = add r316c27,r318c55
v1217 = is_equal r312c71,r298c31
v1219 = is_equal r312c71,r298c47
r316c39 = or v1217,v1219
r318c75 = and v31,r316c39
v1221 = add_virtual_target
connect r318c75,v1221
v1 = constant 0
r319c27 = sub v1,r316c35
r318c79 = mul v1221,r319c27
r316c43 = add r316c35,r318c79
v1222 = is_equal r312c71,r298c67
v1224 = is_equal r312c71,r301c3
r316c47 = or v1222,v1224
r320c19 = and v32,r316c47
v1226 = add_virtual_target
connect r320c19,v1226
v1 = constant 0
r319c55 = sub v1,r316c43
r320c23 = mul v1226,r319c55
r316c51 = add r316c43,r320c23
v441 = constant 4
r319c59 = sub v73,v441
v1227 = is_equal r319c59,v74
v1229 = is_equal r319c59,r294c3
r316c55 = or v1227,v1229
r320c43 = and v33,r316c55
v1231 = add_virtual_target
connect r320c43,v1231
v1 = constant 0
r321c7 = sub v1,r316c51
r320c47 = mul v1231,r321c7
r316c59 = add r316c51,r320c47
v1232 = is_equal r319c59,r106c27
v1234 = is_equal r319c59,r294c31
r316c63 = or v1232,v1234
r320c67 = and v34,r316c63
v1236 = add_virtual_target
connect r320c67,v1236
v1 = constant 0
r321c35 = sub v1,r316c59
r320c71 = mul v1236,r321c35
r316c67 = add r316c59,r320c71
v1237 = is_equal r319c59,r110c3
v1239 = is_equal r319c59,r294c63
r316c71 = or v1237,v1239
r322c11 = and v35,r316c71
v1241 = add_virtual_target
connect r322c11,v1241
v1 = constant 0
r321c63 = sub v1,r316c67
r322c15 = mul v1241,r321c63
r316c75 = add r316c67,r322c15
v1242 = is_equal r319c59,r296c3
v1244 = is_equal r319c59,r296c19
r316c79 = or v1242,v1244
r322c35 = and v36,r316c79
v1246 = add_virtual_target
connect r322c35,v1246
v1 = constant 0
r323c11 = sub v1,r316c75
r322c39 = mul v1246,r323c11
r324c3 = add r316c75,r322c39
v1247 = is_equal r319c59,r296c39
v1249 = is_equal r319c59,r296c55
r324c7 = or v1247,v1249
r322c59 = and v37,r324c7
v1251 = add_virtual_target
connect r322c59,v1251
v1 = constant 0
r323c39 = sub v1,r324c3
r322c63 = mul v1251,r323c39
r324c11 = add r324c3,r322c63
v1252 = is_equal r319c59,r296c75
v1254 = is_equal r319c59,r298c11
r324c15 = or v1252,v1254
r325c3 = and v38,r324c15
v1256 = add_virtual_target
connect r325c3,v1256
v1 = constant 0
r323c67 = sub v1,r324c11
r325c7 = mul v1256,r323c67
r324c19 = add r324c11,r325c7
v1257 = is_equal r319c59,r298c31
v1259 = is_equal r319c59,r298c47
r324c23 = or v1257,v1259
r325c27 = and v39,r324c23
v1261 = add_virtual_target
connect r325c27,v1261
v1 = constant 0
r326c15 = sub v1,r324c19
r325c31 = mul v1261,r326c15
r324c27 = add r324c19,r325c31
v1262 = is_equal r319c59,r298c67
v1264 = is_equal r319c59,r301c3
r324c31 = or v1262,v1264
r325c51 = and v40,r324c31
v1266 = add_virtual_target
connect r325c51,v1266
v1 = constant 0
r326c43 = sub v1,r324c27
r325c55 = mul v1266,r326c43
r324c35 = add r324c27,r325c55
v447 = constant 5
r326c47 = sub v73,v447
v1267 = is_equal r326c47,v74
v1269 = is_equal r326c47,r294c3
r324c39 = or v1267,v1269
r325c75 = and v41,r324c39
v1271 = add_virtual_target
connect r325c75,v1271
v1 = constant 0
r326c75 = sub v1,r324c35
r325c79 = mul v1271,r326c75
r324c43 = add r324c35,r325c79
v1272 = is_equal r326c47,r106c27
v1274 = is_equal r326c47,r294c31
r324c47 = or v1272,v1274
r328c19 = and v42,r324c47
v1276 = add_virtual_target
connect r328c19,v1276
v1 = constant 0
r327c23 = sub v1,r324c43
r328c23 = mul v1276,r327c23
r324c51 = add r324c43,r328c23
v1277 = is_equal r326c47,r110c3
v1279 = is_equal r326c47,r294c63
r324c55 = or v1277,v1279
r328c43 = and v43,r324c55
v1281 = add_virtual_target
connect r328c43,v1281
v1 = constant 0
r327c51 = sub v1,r324c51
r328c47 = mul v1281,r327c51
r324c59 = add r324c51,r328c47
v1282 = is_equal r326c47,r296c3
v1284 = is_equal r326c47,r296c19
r324c63 = or v1282,v1284
r328c67 = and v44,r324c63
v1286 = add_virtual_target
connect r328c67,v1286
v1 = constant 0
r327c79 = sub v1,r324c59
r328c71 = mul v1286,r327c79
r324c67 = add r324c59,r328c71
v1287 = is_equal r326c47,r296c39
v1289 = is_equal r326c47,r296c55
r324c71 = or v1287,v1289
r330c11 = and v45,r324c71
v1291 = add_virtual_target
connect r330c11,v1291
v1 = constant 0
r329c27 = sub v1,r324c67
r330c15 = mul v1291,r329c27
r324c75 = add r324c67,r330c15
v1292 = is_equal r326c47,r296c75
v1294 = is_equal r326c47,r298c11
r324c79 = or v1292,v1294
r330c35 = and v46,r324c79
v1296 = add_virtual_target
connect r330c35,v1296
v1 = constant 0
r329c55 = sub v1,r324c75
r330c39 = mul v1296,r329c55
r332c3 = add r324c75,r330c39
v1297 = is_equal r326c47,r298c31
v1299 = is_equal r326c47,r298c47
r332c7 = or v1297,v1299
r330c59 = and v47,r332c7
v1301 = add_virtual_target
connect r330c59,v1301
v1 = constant 0
r333c3 = sub v1,r332c3
r330c63 = mul v1301,r333c3
r332c11 = add r332c3,r330c63
v1302 = is_equal r326c47,r298c67
v1304 = is_equal r326c47,r301c3
r332c15 = or v1302,v1304
r334c3 = and v48,r332c15
v1306 = add_virtual_target
connect r334c3,v1306
v1 = constant 0
r333c31 = sub v1,r332c11
r334c7 = mul v1306,r333c31
r332c19 = add r332c11,r334c7
v453 = constant 6
r333c35 = sub v73,v453
v1307 = is_equal r333c35,v74
v1309 = is_equal r333c35,r294c3
r332c23 = or v1307,v1309
r334c27 = and v49,r332c23
v1311 = add_virtual_target
connect r334c27,v1311
v1 = constant 0
r333c63 = sub v1,r332c19
r334c31 = mul v1311,r333c63
r332c27 = add r332c19,r334c31
v1312 = is_equal r333c35,r106c27
v1314 = is_equal r333c35,r294c31
r332c31 = or v1312,v1314
r334c51 = and v50,r332c31
v1316 = add_virtual_target
connect r334c51,v1316
v1 = constant 0
r335c11 = sub v1,r332c27
r334c55 = mul v1316,r335c11
r332c35 = add r332c27,r334c55
v1317 = is_equal r333c35,r110c3
v1319 = is_equal r333c35,r294c63
r332c39 = or v1317,v1319
r334c75 = and v51,r332c39
v1321 = add_virtual_target
connect r334c75,v1321
v1 = constant 0
r335c39 = sub v1,r332c35
r334c79 = mul v1321,r335c39
r332c43 = add r332c35,r334c79
v1322 = is_equal r333c35,r296c3
v1324 = is_equal r333c35,r296c19
r332c47 = or v1322,v1324
r336c19 = and v52,r332c47
v1326 = add_virtual_target
connect r336c19,v1326
v1 = constant 0
r335c67 = sub v1,r332c43
r336c23 = mul v1326,r335c67
r332c51 = add r332c43,r336c23
v1327 = is_equal r333c35,r296c39
v1329 = is_equal r333c35,r296c55
r332c55 = or v1327,v1329
r336c43 = and v53,r332c55
v1331 = add_virtual_target
connect r336c43,v1331
v1 = constant 0
r337c15 = sub v1,r332c51
r336c47 = mul v1331,r337c15
r332c59 = add r332c51,r336c47
v1332 = is_equal r333c35,r296c75
v1334 = is_equal r333c35,r298c11
r332c63 = or v1332,v1334
r336c67 = and v54,r332c63
v1336 = add_virtual_target
connect r336c67,v1336
v1 = constant 0
r337c43 = sub v1,r332c59
r336c71 = mul v1336,r337c43
r332c67 = add r332c59,r336c71
v1337 = is_equal r333c35,r298c31
v1339 = is_equal r333c35,r298c47
r332c71 = or v1337,v1339
r338c11 = and v55,r332c71
v1341 = add_virtual_target
connect r338c11,v1341
v1 = constant 0
r337c71 = sub v1,r332c67
r338c15 = mul v1341,r337c71
r332c75 = add r332c67,r338c15
v1342 = is_equal r333c35,r298c67
v1344 = is_equal r333c35,r301c3
r332c79 = or v1342,v1344
r338c35 = and v56,r332c79
v1346 = add_virtual_target
connect r338c35,v1346
v1 = constant 0
r339c19 = sub v1,r332c75
r338c39 = mul v1346,r339c19
r340c3 = add r332c75,r338c39
v459 = constant 7
r339c23 = sub v73,v459
v1347 = is_equal r339c23,v74
v1349 = is_equal r339c23,r294c3
r340c7 = or v1347,v1349
r338c59 = and v57,r340c7
v1351 = add_virtual_target
connect r338c59,v1351
v1 = constant 0
r339c51 = sub v1,r340c3
r338c63 = mul v1351,r339c51
r340c11 = add r340c3,r338c63
v1352 = is_equal r339c23,r106c27
v1354 = is_equal r339c23,r294c31
r340c15 = or v1352,v1354
r341c3 = and v58,r340c15
v1356 = add_virtual_target
connect r341c3,v1356
v1 = constant 0
r339c79 = sub v1,r340c11
r341c7 = mul v1356,r339c79
r340c19 = add r340c11,r341c7
v1357 = is_equal r339c23,r110c3
v1359 = is_equal r339c23,r294c63
r340c23 = or v1357,v1359
r341c27 = and v59,r340c23
v1361 = add_virtual_target
connect r341c27,v1361
v1 = constant 0
r342c27 = sub v1,r340c19
r341c31 = mul v1361,r342c27
r340c27 = add r340c19,r341c31
v1362 = is_equal r339c23,r296c3
v1364 = is_equal r339c23,r296c19
r340c31 = or v1362,v1364
r341c51 = and v60,r340c31
v1366 = add_virtual_target
connect r341c51,v1366
v1 = constant 0
r342c55 = sub v1,r340c27
r341c55 = mul v1366,r342c55
r340c35 = add r340c27,r341c55
v1367 = is_equal r339c23,r296c39
v1369 = is_equal r339c23,r296c55
r340c39 = or v1367,v1369
r341c75 = and v61,r340c39
v1371 = add_virtual_target
connect r341c75,v1371
v1 = constant 0
r343c3 = sub v1,r340c35
r341c79 = mul v1371,r343c3
r340c43 = add r340c35,r341c79
v1372 = is_equal r339c23,r296c75
v1374 = is_equal r339c23,r298c11
r340c47 = or v1372,v1374
r344c19 = and v62,r340c47
v1376 = add_virtual_target
connect r344c19,v1376
v1 = constant 0
r343c31 = sub v1,r340c43
r344c23 = mul v1376,r343c31
r340c51 = add r340c43,r344c23
v1377 = is_equal r339c23,r298c31
v1379 = is_equal r339c23,r298c47
r340c55 = or v1377,v1379
r344c43 = and v63,r340c55
v1381 = add_virtual_target
connect r344c43,v1381
v1 = constant 0
r343c59 = sub v1,r340c51
r344c47 = mul v1381,r343c59
r340c59 = add r340c51,r344c47
v1382 = is_equal r339c23,r298c67
v1384 = is_equal r339c23,r301c3
r340c63 = or v1382,v1384
r344c67 = and v64,r340c63
v1386 = add_virtual_target
connect r344c67,v1386
v1 = constant 0
r345c7 = sub v1,r340c59
r344c71 = mul v1386,r345c7
r340c67 = add r340c59,r344c71
v1387 = add_virtual_target
connect r340c67,v1387
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v1387,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1388 = is_equal v75,v76
v1 = constant 0
r345c23 = sub v1,v76
v1390 = is_equal v75,r345c23
r340c71 = or v1388,v1390
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r346c11 = and v0,r340c71
v1392 = add_virtual_target
connect r346c11,v1392
v124 = constant 18446744069414584320
r346c15 = mul v1392,v124
v87 = constant 1
v87 = constant 1
r340c75 = add v87,r346c15
v1393 = is_equal v75,r132c51
v87 = constant 1
r345c51 = sub v87,v76
v1395 = is_equal v75,r345c51
r340c79 = or v1393,v1395
r346c35 = and v2,r340c79
v1397 = add_virtual_target
connect r346c35,v1397
v1 = constant 0
r345c67 = sub v1,r340c75
r346c39 = mul v1397,r345c67
r348c3 = add r340c75,r346c39
v1398 = is_equal v75,r135c27
v84 = constant 2
r349c3 = sub v84,v76
v1400 = is_equal v75,r349c3
r348c7 = or v1398,v1400
r346c59 = and v3,r348c7
v1402 = add_virtual_target
connect r346c59,v1402
v1 = constant 0
r349c19 = sub v1,r348c3
r346c63 = mul v1402,r349c19
r348c11 = add r348c3,r346c63
v435 = constant 3
r349c23 = sub v76,v435
v1403 = is_equal v75,r349c23
v435 = constant 3
r349c39 = sub v435,v76
v1405 = is_equal v75,r349c39
r348c15 = or v1403,v1405
r350c3 = and v4,r348c15
v1407 = add_virtual_target
connect r350c3,v1407
v1 = constant 0
r349c55 = sub v1,r348c11
r350c7 = mul v1407,r349c55
r348c19 = add r348c11,r350c7
v441 = constant 4
r349c59 = sub v76,v441
v1408 = is_equal v75,r349c59
v441 = constant 4
r349c75 = sub v441,v76
v1410 = is_equal v75,r349c75
r348c23 = or v1408,v1410
r350c27 = and v5,r348c23
v1412 = add_virtual_target
connect r350c27,v1412
v1 = constant 0
r351c11 = sub v1,r348c19
r350c31 = mul v1412,r351c11
r348c27 = add r348c19,r350c31
v447 = constant 5
r351c15 = sub v76,v447
v1413 = is_equal v75,r351c15
v447 = constant 5
r351c31 = sub v447,v76
v1415 = is_equal v75,r351c31
r348c31 = or v1413,v1415
r350c51 = and v6,r348c31
v1417 = add_virtual_target
connect r350c51,v1417
v1 = constant 0
r351c47 = sub v1,r348c27
r350c55 = mul v1417,r351c47
r348c35 = add r348c27,r350c55
v453 = constant 6
r351c51 = sub v76,v453
v1418 = is_equal v75,r351c51
v453 = constant 6
r351c67 = sub v453,v76
v1420 = is_equal v75,r351c67
r348c39 = or v1418,v1420
r350c75 = and v7,r348c39
v1422 = add_virtual_target
connect r350c75,v1422
v1 = constant 0
r352c3 = sub v1,r348c35
r350c79 = mul v1422,r352c3
r348c43 = add r348c35,r350c79
v459 = constant 7
r352c7 = sub v76,v459
v1423 = is_equal v75,r352c7
v459 = constant 7
r352c23 = sub v459,v76
v1425 = is_equal v75,r352c23
r348c47 = or v1423,v1425
r353c19 = and v8,r348c47
v1427 = add_virtual_target
connect r353c19,v1427
v1 = constant 0
r352c39 = sub v1,r348c43
r353c23 = mul v1427,r352c39
r348c51 = add r348c43,r353c23
v1428 = is_equal r135c11,v76
v1430 = is_equal r135c11,r345c23
r348c55 = or v1428,v1430
r353c43 = and v9,r348c55
v1432 = add_virtual_target
connect r353c43,v1432
v1 = constant 0
r352c67 = sub v1,r348c51
r353c47 = mul v1432,r352c67
r348c59 = add r348c51,r353c47
v1433 = is_equal r135c11,r132c51
v1435 = is_equal r135c11,r345c51
r348c63 = or v1433,v1435
r353c67 = and v10,r348c63
v1437 = add_virtual_target
connect r353c67,v1437
v1 = constant 0
r354c15 = sub v1,r348c59
r353c71 = mul v1437,r354c15
r348c67 = add r348c59,r353c71
v1438 = is_equal r135c11,r135c27
v1440 = is_equal r135c11,r349c3
r348c71 = or v1438,v1440
r355c11 = and v11,r348c71
v1442 = add_virtual_target
connect r355c11,v1442
v1 = constant 0
r354c43 = sub v1,r348c67
r355c15 = mul v1442,r354c43
r348c75 = add r348c67,r355c15
v1443 = is_equal r135c11,r349c23
v1445 = is_equal r135c11,r349c39
r348c79 = or v1443,v1445
r355c35 = and v12,r348c79
v1447 = add_virtual_target
connect r355c35,v1447
v1 = constant 0
r354c71 = sub v1,r348c75
r355c39 = mul v1447,r354c71
r356c3 = add r348c75,r355c39
v1448 = is_equal r135c11,r349c59
v1450 = is_equal r135c11,r349c75
r356c7 = or v1448,v1450
r355c59 = and v13,r356c7
v1452 = add_virtual_target
connect r355c59,v1452
v1 = constant 0
r357c19 = sub v1,r356c3
r355c63 = mul v1452,r357c19
r356c11 = add r356c3,r355c63
v1453 = is_equal r135c11,r351c15
v1455 = is_equal r135c11,r351c31
r356c15 = or v1453,v1455
r358c3 = and v14,r356c15
v1457 = add_virtual_target
connect r358c3,v1457
v1 = constant 0
r357c47 = sub v1,r356c11
r358c7 = mul v1457,r357c47
r356c19 = add r356c11,r358c7
v1458 = is_equal r135c11,r351c51
v1460 = is_equal r135c11,r351c67
r356c23 = or v1458,v1460
r358c27 = and v15,r356c23
v1462 = add_virtual_target
connect r358c27,v1462
v1 = constant 0
r357c75 = sub v1,r356c19
r358c31 = mul v1462,r357c75
r356c27 = add r356c19,r358c31
v1463 = is_equal r135c11,r352c7
v1465 = is_equal r135c11,r352c23
r356c31 = or v1463,v1465
r358c51 = and v16,r356c31
v1467 = add_virtual_target
connect r358c51,v1467
v1 = constant 0
r359c23 = sub v1,r356c27
r358c55 = mul v1467,r359c23
r356c35 = add r356c27,r358c55
v1468 = is_equal r132c35,v76
v1470 = is_equal r132c35,r345c23
r356c39 = or v1468,v1470
r358c75 = and v17,r356c39
v1472 = add_virtual_target
connect r358c75,v1472
v1 = constant 0
r359c51 = sub v1,r356c35
r358c79 = mul v1472,r359c51
r356c43 = add r356c35,r358c79
v1473 = is_equal r132c35,r132c51
v1475 = is_equal r132c35,r345c51
r356c47 = or v1473,v1475
r360c19 = and v18,r356c47
v1477 = add_virtual_target
connect r360c19,v1477
v1 = constant 0
r359c79 = sub v1,r356c43
r360c23 = mul v1477,r359c79
r356c51 = add r356c43,r360c23
v1478 = is_equal r132c35,r135c27
v1480 = is_equal r132c35,r349c3
r356c55 = or v1478,v1480
r360c43 = and v19,r356c55
v1482 = add_virtual_target
connect r360c43,v1482
v1 = constant 0
r361c27 = sub v1,r356c51
r360c47 = mul v1482,r361c27
r356c59 = add r356c51,r360c47
v1483 = is_equal r132c35,r349c23
v1485 = is_equal r132c35,r349c39
r356c63 = or v1483,v1485
r360c67 = and v20,r356c63
v1487 = add_virtual_target
connect r360c67,v1487
v1 = constant 0
r361c55 = sub v1,r356c59
r360c71 = mul v1487,r361c55
r356c67 = add r356c59,r360c71
v1488 = is_equal r132c35,r349c59
v1490 = is_equal r132c35,r349c75
r356c71 = or v1488,v1490
r362c11 = and v21,r356c71
v1492 = add_virtual_target
connect r362c11,v1492
v1 = constant 0
r363c3 = sub v1,r356c67
r362c15 = mul v1492,r363c3
r356c75 = add r356c67,r362c15
v1493 = is_equal r132c35,r351c15
v1495 = is_equal r132c35,r351c31
r356c79 = or v1493,v1495
r362c35 = and v22,r356c79
v1497 = add_virtual_target
connect r362c35,v1497
v1 = constant 0
r363c31 = sub v1,r356c75
r362c39 = mul v1497,r363c31
r365c3 = add r356c75,r362c39
v1498 = is_equal r132c35,r351c51
v1500 = is_equal r132c35,r351c67
r365c7 = or v1498,v1500
r362c59 = and v23,r365c7
v1502 = add_virtual_target
connect r362c59,v1502
v1 = constant 0
r363c59 = sub v1,r365c3
r362c63 = mul v1502,r363c59
r365c11 = add r365c3,r362c63
v1503 = is_equal r132c35,r352c7
v1505 = is_equal r132c35,r352c23
r365c15 = or v1503,v1505
r367c3 = and v24,r365c15
v1507 = add_virtual_target
connect r367c3,v1507
v1 = constant 0
r366c7 = sub v1,r365c11
r367c7 = mul v1507,r366c7
r365c19 = add r365c11,r367c7
v435 = constant 3
r366c11 = sub v75,v435
v1508 = is_equal r366c11,v76
v1510 = is_equal r366c11,r345c23
r365c23 = or v1508,v1510
r367c27 = and v25,r365c23
v1512 = add_virtual_target
connect r367c27,v1512
v1 = constant 0
r366c39 = sub v1,r365c19
r367c31 = mul v1512,r366c39
r365c27 = add r365c19,r367c31
v1513 = is_equal r366c11,r132c51
v1515 = is_equal r366c11,r345c51
r365c31 = or v1513,v1515
r367c51 = and v26,r365c31
v1517 = add_virtual_target
connect r367c51,v1517
v1 = constant 0
r366c67 = sub v1,r365c27
r367c55 = mul v1517,r366c67
r365c35 = add r365c27,r367c55
v1518 = is_equal r366c11,r135c27
v1520 = is_equal r366c11,r349c3
r365c39 = or v1518,v1520
r367c75 = and v27,r365c39
v1522 = add_virtual_target
connect r367c75,v1522
v1 = constant 0
r368c15 = sub v1,r365c35
r367c79 = mul v1522,r368c15
r365c43 = add r365c35,r367c79
v1523 = is_equal r366c11,r349c23
v1525 = is_equal r366c11,r349c39
r365c47 = or v1523,v1525
r369c19 = and v28,r365c47
v1527 = add_virtual_target
connect r369c19,v1527
v1 = constant 0
r368c43 = sub v1,r365c43
r369c23 = mul v1527,r368c43
r365c51 = add r365c43,r369c23
v1528 = is_equal r366c11,r349c59
v1530 = is_equal r366c11,r349c75
r365c55 = or v1528,v1530
r369c43 = and v29,r365c55
v1532 = add_virtual_target
connect r369c43,v1532
v1 = constant 0
r368c71 = sub v1,r365c51
r369c47 = mul v1532,r368c71
r365c59 = add r365c51,r369c47
v1533 = is_equal r366c11,r351c15
v1535 = is_equal r366c11,r351c31
r365c63 = or v1533,v1535
r369c67 = and v30,r365c63
v1537 = add_virtual_target
connect r369c67,v1537
v1 = constant 0
r370c19 = sub v1,r365c59
r369c71 = mul v1537,r370c19
r365c67 = add r365c59,r369c71
v1538 = is_equal r366c11,r351c51
v1540 = is_equal r366c11,r351c67
r365c71 = or v1538,v1540
r371c11 = and v31,r365c71
v1542 = add_virtual_target
connect r371c11,v1542
v1 = constant 0
r370c47 = sub v1,r365c67
r371c15 = mul v1542,r370c47
r365c75 = add r365c67,r371c15
v1543 = is_equal r366c11,r352c7
v1545 = is_equal r366c11,r352c23
r365c79 = or v1543,v1545
r371c35 = and v32,r365c79
v1547 = add_virtual_target
connect r371c35,v1547
v1 = constant 0
r370c75 = sub v1,r365c75
r371c39 = mul v1547,r370c75
r372c3 = add r365c75,r371c39
v441 = constant 4
r370c79 = sub v75,v441
v1548 = is_equal r370c79,v76
v1550 = is_equal r370c79,r345c23
r372c7 = or v1548,v1550
r371c59 = and v33,r372c7
v1552 = add_virtual_target
connect r371c59,v1552
v1 = constant 0
r373c27 = sub v1,r372c3
r371c63 = mul v1552,r373c27
r372c11 = add r372c3,r371c63
v1553 = is_equal r370c79,r132c51
v1555 = is_equal r370c79,r345c51
r372c15 = or v1553,v1555
r374c3 = and v34,r372c15
v1557 = add_virtual_target
connect r374c3,v1557
v1 = constant 0
r373c55 = sub v1,r372c11
r374c7 = mul v1557,r373c55
r372c19 = add r372c11,r374c7
v1558 = is_equal r370c79,r135c27
v1560 = is_equal r370c79,r349c3
r372c23 = or v1558,v1560
r374c27 = and v35,r372c23
v1562 = add_virtual_target
connect r374c27,v1562
v1 = constant 0
r375c3 = sub v1,r372c19
r374c31 = mul v1562,r375c3
r372c27 = add r372c19,r374c31
v1563 = is_equal r370c79,r349c23
v1565 = is_equal r370c79,r349c39
r372c31 = or v1563,v1565
r374c51 = and v36,r372c31
v1567 = add_virtual_target
connect r374c51,v1567
v1 = constant 0
r375c31 = sub v1,r372c27
r374c55 = mul v1567,r375c31
r372c35 = add r372c27,r374c55
v1568 = is_equal r370c79,r349c59
v1570 = is_equal r370c79,r349c75
r372c39 = or v1568,v1570
r374c75 = and v37,r372c39
v1572 = add_virtual_target
connect r374c75,v1572
v1 = constant 0
r375c59 = sub v1,r372c35
r374c79 = mul v1572,r375c59
r372c43 = add r372c35,r374c79
v1573 = is_equal r370c79,r351c15
v1575 = is_equal r370c79,r351c31
r372c47 = or v1573,v1575
r376c19 = and v38,r372c47
v1577 = add_virtual_target
connect r376c19,v1577
v1 = constant 0
r377c7 = sub v1,r372c43
r376c23 = mul v1577,r377c7
r372c51 = add r372c43,r376c23
v1578 = is_equal r370c79,r351c51
v1580 = is_equal r370c79,r351c67
r372c55 = or v1578,v1580
r376c43 = and v39,r372c55
v1582 = add_virtual_target
connect r376c43,v1582
v1 = constant 0
r377c35 = sub v1,r372c51
r376c47 = mul v1582,r377c35
r372c59 = add r372c51,r376c47
v1583 = is_equal r370c79,r352c7
v1585 = is_equal r370c79,r352c23
r372c63 = or v1583,v1585
r376c67 = and v40,r372c63
v1587 = add_virtual_target
connect r376c67,v1587
v1 = constant 0
r377c63 = sub v1,r372c59
r376c71 = mul v1587,r377c63
r372c67 = add r372c59,r376c71
v447 = constant 5
r377c67 = sub v75,v447
v1588 = is_equal r377c67,v76
v1590 = is_equal r377c67,r345c23
r372c71 = or v1588,v1590
r379c11 = and v41,r372c71
v1592 = add_virtual_target
connect r379c11,v1592
v1 = constant 0
r378c15 = sub v1,r372c67
r379c15 = mul v1592,r378c15
r372c75 = add r372c67,r379c15
v1593 = is_equal r377c67,r132c51
v1595 = is_equal r377c67,r345c51
r372c79 = or v1593,v1595
r379c35 = and v42,r372c79
v1597 = add_virtual_target
connect r379c35,v1597
v1 = constant 0
r378c43 = sub v1,r372c75
r379c39 = mul v1597,r378c43
r381c3 = add r372c75,r379c39
v1598 = is_equal r377c67,r135c27
v1600 = is_equal r377c67,r349c3
r381c7 = or v1598,v1600
r379c59 = and v43,r381c7
v1602 = add_virtual_target
connect r379c59,v1602
v1 = constant 0
r378c71 = sub v1,r381c3
r379c63 = mul v1602,r378c71
r381c11 = add r381c3,r379c63
v1603 = is_equal r377c67,r349c23
v1605 = is_equal r377c67,r349c39
r381c15 = or v1603,v1605
r383c3 = and v44,r381c15
v1607 = add_virtual_target
connect r383c3,v1607
v1 = constant 0
r382c19 = sub v1,r381c11
r383c7 = mul v1607,r382c19
r381c19 = add r381c11,r383c7
v1608 = is_equal r377c67,r349c59
v1610 = is_equal r377c67,r349c75
r381c23 = or v1608,v1610
r383c27 = and v45,r381c23
v1612 = add_virtual_target
connect r383c27,v1612
v1 = constant 0
r382c47 = sub v1,r381c19
r383c31 = mul v1612,r382c47
r381c27 = add r381c19,r383c31
v1613 = is_equal r377c67,r351c15
v1615 = is_equal r377c67,r351c31
r381c31 = or v1613,v1615
r383c51 = and v46,r381c31
v1617 = add_virtual_target
connect r383c51,v1617
v1 = constant 0
r382c75 = sub v1,r381c27
r383c55 = mul v1617,r382c75
r381c35 = add r381c27,r383c55
v1618 = is_equal r377c67,r351c51
v1620 = is_equal r377c67,r351c67
r381c39 = or v1618,v1620
r383c75 = and v47,r381c39
v1622 = add_virtual_target
connect r383c75,v1622
v1 = constant 0
r384c23 = sub v1,r381c35
r383c79 = mul v1622,r384c23
r381c43 = add r381c35,r383c79
v1623 = is_equal r377c67,r352c7
v1625 = is_equal r377c67,r352c23
r381c47 = or v1623,v1625
r385c19 = and v48,r381c47
v1627 = add_virtual_target
connect r385c19,v1627
v1 = constant 0
r384c51 = sub v1,r381c43
r385c23 = mul v1627,r384c51
r381c51 = add r381c43,r385c23
v453 = constant 6
r384c55 = sub v75,v453
v1628 = is_equal r384c55,v76
v1630 = is_equal r384c55,r345c23
r381c55 = or v1628,v1630
r385c43 = and v49,r381c55
v1632 = add_virtual_target
connect r385c43,v1632
v1 = constant 0
r386c3 = sub v1,r381c51
r385c47 = mul v1632,r386c3
r381c59 = add r381c51,r385c47
v1633 = is_equal r384c55,r132c51
v1635 = is_equal r384c55,r345c51
r381c63 = or v1633,v1635
r385c67 = and v50,r381c63
v1637 = add_virtual_target
connect r385c67,v1637
v1 = constant 0
r386c31 = sub v1,r381c59
r385c71 = mul v1637,r386c31
r381c67 = add r381c59,r385c71
v1638 = is_equal r384c55,r135c27
v1640 = is_equal r384c55,r349c3
r381c71 = or v1638,v1640
r387c11 = and v51,r381c71
v1642 = add_virtual_target
connect r387c11,v1642
v1 = constant 0
r386c59 = sub v1,r381c67
r387c15 = mul v1642,r386c59
r381c75 = add r381c67,r387c15
v1643 = is_equal r384c55,r349c23
v1645 = is_equal r384c55,r349c39
r381c79 = or v1643,v1645
r387c35 = and v52,r381c79
v1647 = add_virtual_target
connect r387c35,v1647
v1 = constant 0
r388c7 = sub v1,r381c75
r387c39 = mul v1647,r388c7
r389c3 = add r381c75,r387c39
v1648 = is_equal r384c55,r349c59
v1650 = is_equal r384c55,r349c75
r389c7 = or v1648,v1650
r387c59 = and v53,r389c7
v1652 = add_virtual_target
connect r387c59,v1652
v1 = constant 0
r388c35 = sub v1,r389c3
r387c63 = mul v1652,r388c35
r389c11 = add r389c3,r387c63
v1653 = is_equal r384c55,r351c15
v1655 = is_equal r384c55,r351c31
r389c15 = or v1653,v1655
r390c3 = and v54,r389c15
v1657 = add_virtual_target
connect r390c3,v1657
v1 = constant 0
r388c63 = sub v1,r389c11
r390c7 = mul v1657,r388c63
r389c19 = add r389c11,r390c7
v1658 = is_equal r384c55,r351c51
v1660 = is_equal r384c55,r351c67
r389c23 = or v1658,v1660
r390c27 = and v55,r389c23
v1662 = add_virtual_target
connect r390c27,v1662
v1 = constant 0
r391c11 = sub v1,r389c19
r390c31 = mul v1662,r391c11
r389c27 = add r389c19,r390c31
v1663 = is_equal r384c55,r352c7
v1665 = is_equal r384c55,r352c23
r389c31 = or v1663,v1665
r390c51 = and v56,r389c31
v1667 = add_virtual_target
connect r390c51,v1667
v1 = constant 0
r391c39 = sub v1,r389c27
r390c55 = mul v1667,r391c39
r389c35 = add r389c27,r390c55
v459 = constant 7
r391c43 = sub v75,v459
v1668 = is_equal r391c43,v76
v1670 = is_equal r391c43,r345c23
r389c39 = or v1668,v1670
r390c75 = and v57,r389c39
v1672 = add_virtual_target
connect r390c75,v1672
v1 = constant 0
r391c71 = sub v1,r389c35
r390c79 = mul v1672,r391c71
r389c43 = add r389c35,r390c79
v1673 = is_equal r391c43,r132c51
v1675 = is_equal r391c43,r345c51
r389c47 = or v1673,v1675
r392c19 = and v58,r389c47
v1677 = add_virtual_target
connect r392c19,v1677
v1 = constant 0
r393c19 = sub v1,r389c43
r392c23 = mul v1677,r393c19
r389c51 = add r389c43,r392c23
v1678 = is_equal r391c43,r135c27
v1680 = is_equal r391c43,r349c3
r389c55 = or v1678,v1680
r392c43 = and v59,r389c55
v1682 = add_virtual_target
connect r392c43,v1682
v1 = constant 0
r393c47 = sub v1,r389c51
r392c47 = mul v1682,r393c47
r389c59 = add r389c51,r392c47
v1683 = is_equal r391c43,r349c23
v1685 = is_equal r391c43,r349c39
r389c63 = or v1683,v1685
r392c67 = and v60,r389c63
v1687 = add_virtual_target
connect r392c67,v1687
v1 = constant 0
r393c75 = sub v1,r389c59
r392c71 = mul v1687,r393c75
r389c67 = add r389c59,r392c71
v1688 = is_equal r391c43,r349c59
v1690 = is_equal r391c43,r349c75
r389c71 = or v1688,v1690
r395c11 = and v61,r389c71
v1692 = add_virtual_target
connect r395c11,v1692
v1 = constant 0
r394c23 = sub v1,r389c67
r395c15 = mul v1692,r394c23
r389c75 = add r389c67,r395c15
v1693 = is_equal r391c43,r351c15
v1695 = is_equal r391c43,r351c31
r389c79 = or v1693,v1695
r395c35 = and v62,r389c79
v1697 = add_virtual_target
connect r395c35,v1697
v1 = constant 0
r394c51 = sub v1,r389c75
r395c39 = mul v1697,r394c51
r397c3 = add r389c75,r395c39
v1698 = is_equal r391c43,r351c51
v1700 = is_equal r391c43,r351c67
r397c7 = or v1698,v1700
r395c59 = and v63,r397c7
v1702 = add_virtual_target
connect r395c59,v1702
v1 = constant 0
r394c79 = sub v1,r397c3
r395c63 = mul v1702,r394c79
r397c11 = add r397c3,r395c63
v1703 = is_equal r391c43,r352c7
v1705 = is_equal r391c43,r352c23
r397c15 = or v1703,v1705
r399c3 = and v64,r397c15
v1707 = add_virtual_target
connect r399c3,v1707
v1 = constant 0
r398c27 = sub v1,r397c11
r399c7 = mul v1707,r398c27
r397c19 = add r397c11,r399c7
v1708 = add_virtual_target
connect r397c19,v1708
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v1708,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v1709 = is_equal v77,v78
v1 = constant 0
r398c43 = sub v1,v78
v1711 = is_equal v77,r398c43
r397c23 = or v1709,v1711
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r399c27 = and v0,r397c23
v1713 = add_virtual_target
connect r399c27,v1713
v124 = constant 18446744069414584320
r399c31 = mul v1713,v124
v87 = constant 1
v87 = constant 1
r397c27 = add v87,r399c31
v1714 = is_equal v77,r158c75
v87 = constant 1
r398c71 = sub v87,v78
v1716 = is_equal v77,r398c71
r397c31 = or v1714,v1716
r399c51 = and v2,r397c31
v1718 = add_virtual_target
connect r399c51,v1718
v1 = constant 0
r400c7 = sub v1,r397c27
r399c55 = mul v1718,r400c7
r397c35 = add r397c27,r399c55
v1719 = is_equal v77,r160c51
v84 = constant 2
r400c23 = sub v84,v78
v1721 = is_equal v77,r400c23
r397c39 = or v1719,v1721
r399c75 = and v3,r397c39
v1723 = add_virtual_target
connect r399c75,v1723
v1 = constant 0
r400c39 = sub v1,r397c35
r399c79 = mul v1723,r400c39
r397c43 = add r397c35,r399c79
v435 = constant 3
r400c43 = sub v78,v435
v1724 = is_equal v77,r400c43
v435 = constant 3
r400c59 = sub v435,v78
v1726 = is_equal v77,r400c59
r397c47 = or v1724,v1726
r401c19 = and v4,r397c47
v1728 = add_virtual_target
connect r401c19,v1728
v1 = constant 0
r400c75 = sub v1,r397c43
r401c23 = mul v1728,r400c75
r397c51 = add r397c43,r401c23
v441 = constant 4
r400c79 = sub v78,v441
v1729 = is_equal v77,r400c79
v441 = constant 4
r402c15 = sub v441,v78
v1731 = is_equal v77,r402c15
r397c55 = or v1729,v1731
r401c43 = and v5,r397c55
v1733 = add_virtual_target
connect r401c43,v1733
v1 = constant 0
r402c31 = sub v1,r397c51
r401c47 = mul v1733,r402c31
r397c59 = add r397c51,r401c47
v447 = constant 5
r402c35 = sub v78,v447
v1734 = is_equal v77,r402c35
v447 = constant 5
r402c51 = sub v447,v78
v1736 = is_equal v77,r402c51
r397c63 = or v1734,v1736
r401c67 = and v6,r397c63
v1738 = add_virtual_target
connect r401c67,v1738
v1 = constant 0
r402c67 = sub v1,r397c59
r401c71 = mul v1738,r402c67
r397c67 = add r397c59,r401c71
v453 = constant 6
r402c71 = sub v78,v453
v1739 = is_equal v77,r402c71
v453 = constant 6
r403c7 = sub v453,v78
v1741 = is_equal v77,r403c7
r397c71 = or v1739,v1741
r404c11 = and v7,r397c71
v1743 = add_virtual_target
connect r404c11,v1743
v1 = constant 0
r403c23 = sub v1,r397c67
r404c15 = mul v1743,r403c23
r397c75 = add r397c67,r404c15
v459 = constant 7
r403c27 = sub v78,v459
v1744 = is_equal v77,r403c27
v459 = constant 7
r403c43 = sub v459,v78
v1746 = is_equal v77,r403c43
r397c79 = or v1744,v1746
r404c35 = and v8,r397c79
v1748 = add_virtual_target
connect r404c35,v1748
v1 = constant 0
r403c59 = sub v1,r397c75
r404c39 = mul v1748,r403c59
r405c3 = add r397c75,r404c39
v1749 = is_equal r160c35,v78
v1751 = is_equal r160c35,r398c43
r405c7 = or v1749,v1751
r404c59 = and v9,r405c7
v1753 = add_virtual_target
connect r404c59,v1753
v1 = constant 0
r406c7 = sub v1,r405c3
r404c63 = mul v1753,r406c7
r405c11 = add r405c3,r404c63
v1754 = is_equal r160c35,r158c75
v1756 = is_equal r160c35,r398c71
r405c15 = or v1754,v1756
r407c3 = and v10,r405c15
v1758 = add_virtual_target
connect r407c3,v1758
v1 = constant 0
r406c35 = sub v1,r405c11
r407c7 = mul v1758,r406c35
r405c19 = add r405c11,r407c7
v1759 = is_equal r160c35,r160c51
v1761 = is_equal r160c35,r400c23
r405c23 = or v1759,v1761
r407c27 = and v11,r405c23
v1763 = add_virtual_target
connect r407c27,v1763
v1 = constant 0
r406c63 = sub v1,r405c19
r407c31 = mul v1763,r406c63
r405c27 = add r405c19,r407c31
v1764 = is_equal r160c35,r400c43
v1766 = is_equal r160c35,r400c59
r405c31 = or v1764,v1766
r407c51 = and v12,r405c31
v1768 = add_virtual_target
connect r407c51,v1768
v1 = constant 0
r408c11 = sub v1,r405c27
r407c55 = mul v1768,r408c11
r405c35 = add r405c27,r407c55
v1769 = is_equal r160c35,r400c79
v1771 = is_equal r160c35,r402c15
r405c39 = or v1769,v1771
r407c75 = and v13,r405c39
v1773 = add_virtual_target
connect r407c75,v1773
v1 = constant 0
r408c39 = sub v1,r405c35
r407c79 = mul v1773,r408c39
r405c43 = add r405c35,r407c79
v1774 = is_equal r160c35,r402c35
v1776 = is_equal r160c35,r402c51
r405c47 = or v1774,v1776
r409c19 = and v14,r405c47
v1778 = add_virtual_target
connect r409c19,v1778
v1 = constant 0
r408c67 = sub v1,r405c43
r409c23 = mul v1778,r408c67
r405c51 = add r405c43,r409c23
v1779 = is_equal r160c35,r402c71
v1781 = is_equal r160c35,r403c7
r405c55 = or v1779,v1781
r409c43 = and v15,r405c55
v1783 = add_virtual_target
connect r409c43,v1783
v1 = constant 0
r410c15 = sub v1,r405c51
r409c47 = mul v1783,r410c15
r405c59 = add r405c51,r409c47
v1784 = is_equal r160c35,r403c27
v1786 = is_equal r160c35,r403c43
r405c63 = or v1784,v1786
r409c67 = and v16,r405c63
v1788 = add_virtual_target
connect r409c67,v1788
v1 = constant 0
r410c43 = sub v1,r405c59
r409c71 = mul v1788,r410c43
r405c67 = add r405c59,r409c71
v1789 = is_equal r158c59,v78
v1791 = is_equal r158c59,r398c43
r405c71 = or v1789,v1791
r411c11 = and v17,r405c71
v1793 = add_virtual_target
connect r411c11,v1793
v1 = constant 0
r410c71 = sub v1,r405c67
r411c15 = mul v1793,r410c71
r405c75 = add r405c67,r411c15
v1794 = is_equal r158c59,r158c75
v1796 = is_equal r158c59,r398c71
r405c79 = or v1794,v1796
r411c35 = and v18,r405c79
v1798 = add_virtual_target
connect r411c35,v1798
v1 = constant 0
r412c19 = sub v1,r405c75
r411c39 = mul v1798,r412c19
r414c3 = add r405c75,r411c39
v1799 = is_equal r158c59,r160c51
v1801 = is_equal r158c59,r400c23
r414c7 = or v1799,v1801
r411c59 = and v19,r414c7
v1803 = add_virtual_target
connect r411c59,v1803
v1 = constant 0
r412c47 = sub v1,r414c3
r411c63 = mul v1803,r412c47
r414c11 = add r414c3,r411c63
v1804 = is_equal r158c59,r400c43
v1806 = is_equal r158c59,r400c59
r414c15 = or v1804,v1806
r415c3 = and v20,r414c15
v1808 = add_virtual_target
connect r415c3,v1808
v1 = constant 0
r412c75 = sub v1,r414c11
r415c7 = mul v1808,r412c75
r414c19 = add r414c11,r415c7
v1809 = is_equal r158c59,r400c79
v1811 = is_equal r158c59,r402c15
r414c23 = or v1809,v1811
r415c27 = and v21,r414c23
v1813 = add_virtual_target
connect r415c27,v1813
v1 = constant 0
r416c23 = sub v1,r414c19
r415c31 = mul v1813,r416c23
r414c27 = add r414c19,r415c31
v1814 = is_equal r158c59,r402c35
v1816 = is_equal r158c59,r402c51
r414c31 = or v1814,v1816
r415c51 = and v22,r414c31
v1818 = add_virtual_target
connect r415c51,v1818
v1 = constant 0
r416c51 = sub v1,r414c27
r415c55 = mul v1818,r416c51
r414c35 = add r414c27,r415c55
v1819 = is_equal r158c59,r402c71
v1821 = is_equal r158c59,r403c7
r414c39 = or v1819,v1821
r415c75 = and v23,r414c39
v1823 = add_virtual_target
connect r415c75,v1823
v1 = constant 0
r416c79 = sub v1,r414c35
r415c79 = mul v1823,r416c79
r414c43 = add r414c35,r415c79
v1824 = is_equal r158c59,r403c27
v1826 = is_equal r158c59,r403c43
r414c47 = or v1824,v1826
r418c19 = and v24,r414c47
v1828 = add_virtual_target
connect r418c19,v1828
v1 = constant 0
r417c27 = sub v1,r414c43
r418c23 = mul v1828,r417c27
r414c51 = add r414c43,r418c23
v435 = constant 3
r417c31 = sub v77,v435
v1829 = is_equal r417c31,v78
v1831 = is_equal r417c31,r398c43
r414c55 = or v1829,v1831
r418c43 = and v25,r414c55
v1833 = add_virtual_target
connect r418c43,v1833
v1 = constant 0
r417c59 = sub v1,r414c51
r418c47 = mul v1833,r417c59
r414c59 = add r414c51,r418c47
v1834 = is_equal r417c31,r158c75
v1836 = is_equal r417c31,r398c71
r414c63 = or v1834,v1836
r418c67 = and v26,r414c63
v1838 = add_virtual_target
connect r418c67,v1838
v1 = constant 0
r419c7 = sub v1,r414c59
r418c71 = mul v1838,r419c7
r414c67 = add r414c59,r418c71
v1839 = is_equal r417c31,r160c51
v1841 = is_equal r417c31,r400c23
r414c71 = or v1839,v1841
r420c11 = and v27,r414c71
v1843 = add_virtual_target
connect r420c11,v1843
v1 = constant 0
r419c35 = sub v1,r414c67
r420c15 = mul v1843,r419c35
r414c75 = add r414c67,r420c15
v1844 = is_equal r417c31,r400c43
v1846 = is_equal r417c31,r400c59
r414c79 = or v1844,v1846
r420c35 = and v28,r414c79
v1848 = add_virtual_target
connect r420c35,v1848
v1 = constant 0
r419c63 = sub v1,r414c75
r420c39 = mul v1848,r419c63
r421c3 = add r414c75,r420c39
v1849 = is_equal r417c31,r400c79
v1851 = is_equal r417c31,r402c15
r421c7 = or v1849,v1851
r420c59 = and v29,r421c7
v1853 = add_virtual_target
connect r420c59,v1853
v1 = constant 0
r422c11 = sub v1,r421c3
r420c63 = mul v1853,r422c11
r421c11 = add r421c3,r420c63
v1854 = is_equal r417c31,r402c35
v1856 = is_equal r417c31,r402c51
r421c15 = or v1854,v1856
r423c3 = and v30,r421c15
v1858 = add_virtual_target
connect r423c3,v1858
v1 = constant 0
r422c39 = sub v1,r421c11
r423c7 = mul v1858,r422c39
r421c19 = add r421c11,r423c7
v1859 = is_equal r417c31,r402c71
v1861 = is_equal r417c31,r403c7
r421c23 = or v1859,v1861
r423c27 = and v31,r421c23
v1863 = add_virtual_target
connect r423c27,v1863
v1 = constant 0
r422c67 = sub v1,r421c19
r423c31 = mul v1863,r422c67
r421c27 = add r421c19,r423c31
v1864 = is_equal r417c31,r403c27
v1866 = is_equal r417c31,r403c43
r421c31 = or v1864,v1866
r423c51 = and v32,r421c31
v1868 = add_virtual_target
connect r423c51,v1868
v1 = constant 0
r424c15 = sub v1,r421c27
r423c55 = mul v1868,r424c15
r421c35 = add r421c27,r423c55
v441 = constant 4
r424c19 = sub v77,v441
v1869 = is_equal r424c19,v78
v1871 = is_equal r424c19,r398c43
r421c39 = or v1869,v1871
r423c75 = and v33,r421c39
v1873 = add_virtual_target
connect r423c75,v1873
v1 = constant 0
r424c47 = sub v1,r421c35
r423c79 = mul v1873,r424c47
r421c43 = add r421c35,r423c79
v1874 = is_equal r424c19,r158c75
v1876 = is_equal r424c19,r398c71
r421c47 = or v1874,v1876
r425c19 = and v34,r421c47
v1878 = add_virtual_target
connect r425c19,v1878
v1 = constant 0
r424c75 = sub v1,r421c43
r425c23 = mul v1878,r424c75
r421c51 = add r421c43,r425c23
v1879 = is_equal r424c19,r160c51
v1881 = is_equal r424c19,r400c23
r421c55 = or v1879,v1881
r425c43 = and v35,r421c55
v1883 = add_virtual_target
connect r425c43,v1883
v1 = constant 0
r426c23 = sub v1,r421c51
r425c47 = mul v1883,r426c23
r421c59 = add r421c51,r425c47
v1884 = is_equal r424c19,r400c43
v1886 = is_equal r424c19,r400c59
r421c63 = or v1884,v1886
r425c67 = and v36,r421c63
v1888 = add_virtual_target
connect r425c67,v1888
v1 = constant 0
r426c51 = sub v1,r421c59
r425c71 = mul v1888,r426c51
r421c67 = add r421c59,r425c71
v1889 = is_equal r424c19,r400c79
v1891 = is_equal r424c19,r402c15
r421c71 = or v1889,v1891
r427c11 = and v37,r421c71
v1893 = add_virtual_target
connect r427c11,v1893
v1 = constant 0
r426c79 = sub v1,r421c67
r427c15 = mul v1893,r426c79
r421c75 = add r421c67,r427c15
v1894 = is_equal r424c19,r402c35
v1896 = is_equal r424c19,r402c51
r421c79 = or v1894,v1896
r427c35 = and v38,r421c79
v1898 = add_virtual_target
connect r427c35,v1898
v1 = constant 0
r428c27 = sub v1,r421c75
r427c39 = mul v1898,r428c27
r430c3 = add r421c75,r427c39
v1899 = is_equal r424c19,r402c71
v1901 = is_equal r424c19,r403c7
r430c7 = or v1899,v1901
r427c59 = and v39,r430c7
v1903 = add_virtual_target
connect r427c59,v1903
v1 = constant 0
r428c55 = sub v1,r430c3
r427c63 = mul v1903,r428c55
r430c11 = add r430c3,r427c63
v1904 = is_equal r424c19,r403c27
v1906 = is_equal r424c19,r403c43
r430c15 = or v1904,v1906
r431c3 = and v40,r430c15
v1908 = add_virtual_target
connect r431c3,v1908
v1 = constant 0
r432c3 = sub v1,r430c11
r431c7 = mul v1908,r432c3
r430c19 = add r430c11,r431c7
v447 = constant 5
r432c7 = sub v77,v447
v1909 = is_equal r432c7,v78
v1911 = is_equal r432c7,r398c43
r430c23 = or v1909,v1911
r431c27 = and v41,r430c23
v1913 = add_virtual_target
connect r431c27,v1913
v1 = constant 0
r432c35 = sub v1,r430c19
r431c31 = mul v1913,r432c35
r430c27 = add r430c19,r431c31
v1914 = is_equal r432c7,r158c75
v1916 = is_equal r432c7,r398c71
r430c31 = or v1914,v1916
r431c51 = and v42,r430c31
v1918 = add_virtual_target
connect r431c51,v1918
v1 = constant 0
r432c63 = sub v1,r430c27
r431c55 = mul v1918,r432c63
r430c35 = add r430c27,r431c55
v1919 = is_equal r432c7,r160c51
v1921 = is_equal r432c7,r400c23
r430c39 = or v1919,v1921
r431c75 = and v43,r430c39
v1923 = add_virtual_target
connect r431c75,v1923
v1 = constant 0
r433c11 = sub v1,r430c35
r431c79 = mul v1923,r433c11
r430c43 = add r430c35,r431c79
v1924 = is_equal r432c7,r400c43
v1926 = is_equal r432c7,r400c59
r430c47 = or v1924,v1926
r434c19 = and v44,r430c47
v1928 = add_virtual_target
connect r434c19,v1928
v1 = constant 0
r433c39 = sub v1,r430c43
r434c23 = mul v1928,r433c39
r430c51 = add r430c43,r434c23
v1929 = is_equal r432c7,r400c79
v1931 = is_equal r432c7,r402c15
r430c55 = or v1929,v1931
r434c43 = and v45,r430c55
v1933 = add_virtual_target
connect r434c43,v1933
v1 = constant 0
r433c67 = sub v1,r430c51
r434c47 = mul v1933,r433c67
r430c59 = add r430c51,r434c47
v1934 = is_equal r432c7,r402c35
v1936 = is_equal r432c7,r402c51
r430c63 = or v1934,v1936
r434c67 = and v46,r430c63
v1938 = add_virtual_target
connect r434c67,v1938
v1 = constant 0
r435c15 = sub v1,r430c59
r434c71 = mul v1938,r435c15
r430c67 = add r430c59,r434c71
v1939 = is_equal r432c7,r402c71
v1941 = is_equal r432c7,r403c7
r430c71 = or v1939,v1941
r436c11 = and v47,r430c71
v1943 = add_virtual_target
connect r436c11,v1943
v1 = constant 0
r435c43 = sub v1,r430c67
r436c15 = mul v1943,r435c43
r430c75 = add r430c67,r436c15
v1944 = is_equal r432c7,r403c27
v1946 = is_equal r432c7,r403c43
r430c79 = or v1944,v1946
r436c35 = and v48,r430c79
v1948 = add_virtual_target
connect r436c35,v1948
v1 = constant 0
r435c71 = sub v1,r430c75
r436c39 = mul v1948,r435c71
r437c3 = add r430c75,r436c39
v453 = constant 6
r435c75 = sub v77,v453
v1949 = is_equal r435c75,v78
v1951 = is_equal r435c75,r398c43
r437c7 = or v1949,v1951
r436c59 = and v49,r437c7
v1953 = add_virtual_target
connect r436c59,v1953
v1 = constant 0
r438c23 = sub v1,r437c3
r436c63 = mul v1953,r438c23
r437c11 = add r437c3,r436c63
v1954 = is_equal r435c75,r158c75
v1956 = is_equal r435c75,r398c71
r437c15 = or v1954,v1956
r439c3 = and v50,r437c15
v1958 = add_virtual_target
connect r439c3,v1958
v1 = constant 0
r438c51 = sub v1,r437c11
r439c7 = mul v1958,r438c51
r437c19 = add r437c11,r439c7
v1959 = is_equal r435c75,r160c51
v1961 = is_equal r435c75,r400c23
r437c23 = or v1959,v1961
r439c27 = and v51,r437c23
v1963 = add_virtual_target
connect r439c27,v1963
v1 = constant 0
r438c79 = sub v1,r437c19
r439c31 = mul v1963,r438c79
r437c27 = add r437c19,r439c31
v1964 = is_equal r435c75,r400c43
v1966 = is_equal r435c75,r400c59
r437c31 = or v1964,v1966
r439c51 = and v52,r437c31
v1968 = add_virtual_target
connect r439c51,v1968
v1 = constant 0
r440c27 = sub v1,r437c27
r439c55 = mul v1968,r440c27
r437c35 = add r437c27,r439c55
v1969 = is_equal r435c75,r400c79
v1971 = is_equal r435c75,r402c15
r437c39 = or v1969,v1971
r439c75 = and v53,r437c39
v1973 = add_virtual_target
connect r439c75,v1973
v1 = constant 0
r440c55 = sub v1,r437c35
r439c79 = mul v1973,r440c55
r437c43 = add r437c35,r439c79
v1974 = is_equal r435c75,r402c35
v1976 = is_equal r435c75,r402c51
r437c47 = or v1974,v1976
r441c19 = and v54,r437c47
v1978 = add_virtual_target
connect r441c19,v1978
v1 = constant 0
r442c3 = sub v1,r437c43
r441c23 = mul v1978,r442c3
r437c51 = add r437c43,r441c23
v1979 = is_equal r435c75,r402c71
v1981 = is_equal r435c75,r403c7
r437c55 = or v1979,v1981
r441c43 = and v55,r437c55
v1983 = add_virtual_target
connect r441c43,v1983
v1 = constant 0
r442c31 = sub v1,r437c51
r441c47 = mul v1983,r442c31
r437c59 = add r437c51,r441c47
v1984 = is_equal r435c75,r403c27
v1986 = is_equal r435c75,r403c43
r437c63 = or v1984,v1986
r441c67 = and v56,r437c63
v1988 = add_virtual_target
connect r441c67,v1988
v1 = constant 0
r442c59 = sub v1,r437c59
r441c71 = mul v1988,r442c59
r437c67 = add r437c59,r441c71
v459 = constant 7
r442c63 = sub v77,v459
v1989 = is_equal r442c63,v78
v1991 = is_equal r442c63,r398c43
r437c71 = or v1989,v1991
r444c11 = and v57,r437c71
v1993 = add_virtual_target
connect r444c11,v1993
v1 = constant 0
r443c11 = sub v1,r437c67
r444c15 = mul v1993,r443c11
r437c75 = add r437c67,r444c15
v1994 = is_equal r442c63,r158c75
v1996 = is_equal r442c63,r398c71
r437c79 = or v1994,v1996
r444c35 = and v58,r437c79
v1998 = add_virtual_target
connect r444c35,v1998
v1 = constant 0
r443c39 = sub v1,r437c75
r444c39 = mul v1998,r443c39
r446c3 = add r437c75,r444c39
v1999 = is_equal r442c63,r160c51
v2001 = is_equal r442c63,r400c23
r446c7 = or v1999,v2001
r444c59 = and v59,r446c7
v2003 = add_virtual_target
connect r444c59,v2003
v1 = constant 0
r443c67 = sub v1,r446c3
r444c63 = mul v2003,r443c67
r446c11 = add r446c3,r444c63
v2004 = is_equal r442c63,r400c43
v2006 = is_equal r442c63,r400c59
r446c15 = or v2004,v2006
r448c3 = and v60,r446c15
v2008 = add_virtual_target
connect r448c3,v2008
v1 = constant 0
r447c15 = sub v1,r446c11
r448c7 = mul v2008,r447c15
r446c19 = add r446c11,r448c7
v2009 = is_equal r442c63,r400c79
v2011 = is_equal r442c63,r402c15
r446c23 = or v2009,v2011
r448c27 = and v61,r446c23
v2013 = add_virtual_target
connect r448c27,v2013
v1 = constant 0
r447c43 = sub v1,r446c19
r448c31 = mul v2013,r447c43
r446c27 = add r446c19,r448c31
v2014 = is_equal r442c63,r402c35
v2016 = is_equal r442c63,r402c51
r446c31 = or v2014,v2016
r448c51 = and v62,r446c31
v2018 = add_virtual_target
connect r448c51,v2018
v1 = constant 0
r447c71 = sub v1,r446c27
r448c55 = mul v2018,r447c71
r446c35 = add r446c27,r448c55
v2019 = is_equal r442c63,r402c71
v2021 = is_equal r442c63,r403c7
r446c39 = or v2019,v2021
r448c75 = and v63,r446c39
v2023 = add_virtual_target
connect r448c75,v2023
v1 = constant 0
r449c19 = sub v1,r446c35
r448c79 = mul v2023,r449c19
r446c43 = add r446c35,r448c79
v2024 = is_equal r442c63,r403c27
v2026 = is_equal r442c63,r403c43
r446c47 = or v2024,v2026
r450c19 = and v64,r446c47
v2028 = add_virtual_target
connect r450c19,v2028
v1 = constant 0
r449c47 = sub v1,r446c43
r450c23 = mul v2028,r449c47
r446c51 = add r446c43,r450c23
v2029 = add_virtual_target
connect r446c51,v2029
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v2029,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v2030 = is_equal v79,v80
v1 = constant 0
r449c63 = sub v1,v80
v2032 = is_equal v79,r449c63
r446c55 = or v2030,v2032
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r450c43 = and v0,r446c55
v2034 = add_virtual_target
connect r450c43,v2034
v124 = constant 18446744069414584320
r450c47 = mul v2034,v124
v87 = constant 1
v87 = constant 1
r446c59 = add v87,r450c47
v2035 = is_equal v79,r185c19
v87 = constant 1
r451c11 = sub v87,v80
v2037 = is_equal v79,r451c11
r446c63 = or v2035,v2037
r450c67 = and v2,r446c63
v2039 = add_virtual_target
connect r450c67,v2039
v1 = constant 0
r451c27 = sub v1,r446c59
r450c71 = mul v2039,r451c27
r446c67 = add r446c59,r450c71
v2040 = is_equal v79,r185c75
v84 = constant 2
r451c43 = sub v84,v80
v2042 = is_equal v79,r451c43
r446c71 = or v2040,v2042
r452c11 = and v3,r446c71
v2044 = add_virtual_target
connect r452c11,v2044
v1 = constant 0
r451c59 = sub v1,r446c67
r452c15 = mul v2044,r451c59
r446c75 = add r446c67,r452c15
v435 = constant 3
r451c63 = sub v80,v435
v2045 = is_equal v79,r451c63
v435 = constant 3
r451c79 = sub v435,v80
v2047 = is_equal v79,r451c79
r446c79 = or v2045,v2047
r452c35 = and v4,r446c79
v2049 = add_virtual_target
connect r452c35,v2049
v1 = constant 0
r453c15 = sub v1,r446c75
r452c39 = mul v2049,r453c15
r454c3 = add r446c75,r452c39
v441 = constant 4
r453c19 = sub v80,v441
v2050 = is_equal v79,r453c19
v441 = constant 4
r453c35 = sub v441,v80
v2052 = is_equal v79,r453c35
r454c7 = or v2050,v2052
r452c59 = and v5,r454c7
v2054 = add_virtual_target
connect r452c59,v2054
v1 = constant 0
r453c51 = sub v1,r454c3
r452c63 = mul v2054,r453c51
r454c11 = add r454c3,r452c63
v447 = constant 5
r453c55 = sub v80,v447
v2055 = is_equal v79,r453c55
v447 = constant 5
r453c71 = sub v447,v80
v2057 = is_equal v79,r453c71
r454c15 = or v2055,v2057
r456c3 = and v6,r454c15
v2059 = add_virtual_target
connect r456c3,v2059
v1 = constant 0
r455c7 = sub v1,r454c11
r456c7 = mul v2059,r455c7
r454c19 = add r454c11,r456c7
v453 = constant 6
r455c11 = sub v80,v453
v2060 = is_equal v79,r455c11
v453 = constant 6
r455c27 = sub v453,v80
v2062 = is_equal v79,r455c27
r454c23 = or v2060,v2062
r456c27 = and v7,r454c23
v2064 = add_virtual_target
connect r456c27,v2064
v1 = constant 0
r455c43 = sub v1,r454c19
r456c31 = mul v2064,r455c43
r454c27 = add r454c19,r456c31
v459 = constant 7
r455c47 = sub v80,v459
v2065 = is_equal v79,r455c47
v459 = constant 7
r455c63 = sub v459,v80
v2067 = is_equal v79,r455c63
r454c31 = or v2065,v2067
r456c51 = and v8,r454c31
v2069 = add_virtual_target
connect r456c51,v2069
v1 = constant 0
r455c79 = sub v1,r454c27
r456c55 = mul v2069,r455c79
r454c35 = add r454c27,r456c55
v2070 = is_equal r185c59,v80
v2072 = is_equal r185c59,r449c63
r454c39 = or v2070,v2072
r456c75 = and v9,r454c39
v2074 = add_virtual_target
connect r456c75,v2074
v1 = constant 0
r457c27 = sub v1,r454c35
r456c79 = mul v2074,r457c27
r454c43 = add r454c35,r456c79
v2075 = is_equal r185c59,r185c19
v2077 = is_equal r185c59,r451c11
r454c47 = or v2075,v2077
r458c19 = and v10,r454c47
v2079 = add_virtual_target
connect r458c19,v2079
v1 = constant 0
r457c55 = sub v1,r454c43
r458c23 = mul v2079,r457c55
r454c51 = add r454c43,r458c23
v2080 = is_equal r185c59,r185c75
v2082 = is_equal r185c59,r451c43
r454c55 = or v2080,v2082
r458c43 = and v11,r454c55
v2084 = add_virtual_target
connect r458c43,v2084
v1 = constant 0
r459c3 = sub v1,r454c51
r458c47 = mul v2084,r459c3
r454c59 = add r454c51,r458c47
v2085 = is_equal r185c59,r451c63
v2087 = is_equal r185c59,r451c79
r454c63 = or v2085,v2087
r458c67 = and v12,r454c63
v2089 = add_virtual_target
connect r458c67,v2089
v1 = constant 0
r459c31 = sub v1,r454c59
r458c71 = mul v2089,r459c31
r454c67 = add r454c59,r458c71
v2090 = is_equal r185c59,r453c19
v2092 = is_equal r185c59,r453c35
r454c71 = or v2090,v2092
r460c11 = and v13,r454c71
v2094 = add_virtual_target
connect r460c11,v2094
v1 = constant 0
r459c59 = sub v1,r454c67
r460c15 = mul v2094,r459c59
r454c75 = add r454c67,r460c15
v2095 = is_equal r185c59,r453c55
v2097 = is_equal r185c59,r453c71
r454c79 = or v2095,v2097
r460c35 = and v14,r454c79
v2099 = add_virtual_target
connect r460c35,v2099
v1 = constant 0
r461c7 = sub v1,r454c75
r460c39 = mul v2099,r461c7
r463c3 = add r454c75,r460c39
v2100 = is_equal r185c59,r455c11
v2102 = is_equal r185c59,r455c27
r463c7 = or v2100,v2102
r460c59 = and v15,r463c7
v2104 = add_virtual_target
connect r460c59,v2104
v1 = constant 0
r461c35 = sub v1,r463c3
r460c63 = mul v2104,r461c35
r463c11 = add r463c3,r460c63
v2105 = is_equal r185c59,r455c47
v2107 = is_equal r185c59,r455c63
r463c15 = or v2105,v2107
r464c3 = and v16,r463c15
v2109 = add_virtual_target
connect r464c3,v2109
v1 = constant 0
r461c63 = sub v1,r463c11
r464c7 = mul v2109,r461c63
r463c19 = add r463c11,r464c7
v2110 = is_equal r185c3,v80
v2112 = is_equal r185c3,r449c63
r463c23 = or v2110,v2112
r464c27 = and v17,r463c23
v2114 = add_virtual_target
connect r464c27,v2114
v1 = constant 0
r465c11 = sub v1,r463c19
r464c31 = mul v2114,r465c11
r463c27 = add r463c19,r464c31
v2115 = is_equal r185c3,r185c19
v2117 = is_equal r185c3,r451c11
r463c31 = or v2115,v2117
r464c51 = and v18,r463c31
v2119 = add_virtual_target
connect r464c51,v2119
v1 = constant 0
r465c39 = sub v1,r463c27
r464c55 = mul v2119,r465c39
r463c35 = add r463c27,r464c55
v2120 = is_equal r185c3,r185c75
v2122 = is_equal r185c3,r451c43
r463c39 = or v2120,v2122
r464c75 = and v19,r463c39
v2124 = add_virtual_target
connect r464c75,v2124
v1 = constant 0
r465c67 = sub v1,r463c35
r464c79 = mul v2124,r465c67
r463c43 = add r463c35,r464c79
v2125 = is_equal r185c3,r451c63
v2127 = is_equal r185c3,r451c79
r463c47 = or v2125,v2127
r466c19 = and v20,r463c47
v2129 = add_virtual_target
connect r466c19,v2129
v1 = constant 0
r467c15 = sub v1,r463c43
r466c23 = mul v2129,r467c15
r463c51 = add r463c43,r466c23
v2130 = is_equal r185c3,r453c19
v2132 = is_equal r185c3,r453c35
r463c55 = or v2130,v2132
r466c43 = and v21,r463c55
v2134 = add_virtual_target
connect r466c43,v2134
v1 = constant 0
r467c43 = sub v1,r463c51
r466c47 = mul v2134,r467c43
r463c59 = add r463c51,r466c47
v2135 = is_equal r185c3,r453c55
v2137 = is_equal r185c3,r453c71
r463c63 = or v2135,v2137
r466c67 = and v22,r463c63
v2139 = add_virtual_target
connect r466c67,v2139
v1 = constant 0
r467c71 = sub v1,r463c59
r466c71 = mul v2139,r467c71
r463c67 = add r463c59,r466c71
v2140 = is_equal r185c3,r455c11
v2142 = is_equal r185c3,r455c27
r463c71 = or v2140,v2142
r469c11 = and v23,r463c71
v2144 = add_virtual_target
connect r469c11,v2144
v1 = constant 0
r468c19 = sub v1,r463c67
r469c15 = mul v2144,r468c19
r463c75 = add r463c67,r469c15
v2145 = is_equal r185c3,r455c47
v2147 = is_equal r185c3,r455c63
r463c79 = or v2145,v2147
r469c35 = and v24,r463c79
v2149 = add_virtual_target
connect r469c35,v2149
v1 = constant 0
r468c47 = sub v1,r463c75
r469c39 = mul v2149,r468c47
r470c3 = add r463c75,r469c39
v435 = constant 3
r468c51 = sub v79,v435
v2150 = is_equal r468c51,v80
v2152 = is_equal r468c51,r449c63
r470c7 = or v2150,v2152
r469c59 = and v25,r470c7
v2154 = add_virtual_target
connect r469c59,v2154
v1 = constant 0
r468c79 = sub v1,r470c3
r469c63 = mul v2154,r468c79
r470c11 = add r470c3,r469c63
v2155 = is_equal r468c51,r185c19
v2157 = is_equal r468c51,r451c11
r470c15 = or v2155,v2157
r472c3 = and v26,r470c15
v2159 = add_virtual_target
connect r472c3,v2159
v1 = constant 0
r471c27 = sub v1,r470c11
r472c7 = mul v2159,r471c27
r470c19 = add r470c11,r472c7
v2160 = is_equal r468c51,r185c75
v2162 = is_equal r468c51,r451c43
r470c23 = or v2160,v2162
r472c27 = and v27,r470c23
v2164 = add_virtual_target
connect r472c27,v2164
v1 = constant 0
r471c55 = sub v1,r470c19
r472c31 = mul v2164,r471c55
r470c27 = add r470c19,r472c31
v2165 = is_equal r468c51,r451c63
v2167 = is_equal r468c51,r451c79
r470c31 = or v2165,v2167
r472c51 = and v28,r470c31
v2169 = add_virtual_target
connect r472c51,v2169
v1 = constant 0
r473c3 = sub v1,r470c27
r472c55 = mul v2169,r473c3
r470c35 = add r470c27,r472c55
v2170 = is_equal r468c51,r453c19
v2172 = is_equal r468c51,r453c35
r470c39 = or v2170,v2172
r472c75 = and v29,r470c39
v2174 = add_virtual_target
connect r472c75,v2174
v1 = constant 0
r473c31 = sub v1,r470c35
r472c79 = mul v2174,r473c31
r470c43 = add r470c35,r472c79
v2175 = is_equal r468c51,r453c55
v2177 = is_equal r468c51,r453c71
r470c47 = or v2175,v2177
r474c19 = and v30,r470c47
v2179 = add_virtual_target
connect r474c19,v2179
v1 = constant 0
r473c59 = sub v1,r470c43
r474c23 = mul v2179,r473c59
r470c51 = add r470c43,r474c23
v2180 = is_equal r468c51,r455c11
v2182 = is_equal r468c51,r455c27
r470c55 = or v2180,v2182
r474c43 = and v31,r470c55
v2184 = add_virtual_target
connect r474c43,v2184
v1 = constant 0
r475c7 = sub v1,r470c51
r474c47 = mul v2184,r475c7
r470c59 = add r470c51,r474c47
v2185 = is_equal r468c51,r455c47
v2187 = is_equal r468c51,r455c63
r470c63 = or v2185,v2187
r474c67 = and v32,r470c63
v2189 = add_virtual_target
connect r474c67,v2189
v1 = constant 0
r475c35 = sub v1,r470c59
r474c71 = mul v2189,r475c35
r470c67 = add r470c59,r474c71
v441 = constant 4
r475c39 = sub v79,v441
v2190 = is_equal r475c39,v80
v2192 = is_equal r475c39,r449c63
r470c71 = or v2190,v2192
r476c11 = and v33,r470c71
v2194 = add_virtual_target
connect r476c11,v2194
v1 = constant 0
r475c67 = sub v1,r470c67
r476c15 = mul v2194,r475c67
r470c75 = add r470c67,r476c15
v2195 = is_equal r475c39,r185c19
v2197 = is_equal r475c39,r451c11
r470c79 = or v2195,v2197
r476c35 = and v34,r470c79
v2199 = add_virtual_target
connect r476c35,v2199
v1 = constant 0
r477c15 = sub v1,r470c75
r476c39 = mul v2199,r477c15
r479c3 = add r470c75,r476c39
v2200 = is_equal r475c39,r185c75
v2202 = is_equal r475c39,r451c43
r479c7 = or v2200,v2202
r476c59 = and v35,r479c7
v2204 = add_virtual_target
connect r476c59,v2204
v1 = constant 0
r477c43 = sub v1,r479c3
r476c63 = mul v2204,r477c43
r479c11 = add r479c3,r476c63
v2205 = is_equal r475c39,r451c63
v2207 = is_equal r475c39,r451c79
r479c15 = or v2205,v2207
r480c3 = and v36,r479c15
v2209 = add_virtual_target
connect r480c3,v2209
v1 = constant 0
r477c71 = sub v1,r479c11
r480c7 = mul v2209,r477c71
r479c19 = add r479c11,r480c7
v2210 = is_equal r475c39,r453c19
v2212 = is_equal r475c39,r453c35
r479c23 = or v2210,v2212
r480c27 = and v37,r479c23
v2214 = add_virtual_target
connect r480c27,v2214
v1 = constant 0
r481c19 = sub v1,r479c19
r480c31 = mul v2214,r481c19
r479c27 = add r479c19,r480c31
v2215 = is_equal r475c39,r453c55
v2217 = is_equal r475c39,r453c71
r479c31 = or v2215,v2217
r480c51 = and v38,r479c31
v2219 = add_virtual_target
connect r480c51,v2219
v1 = constant 0
r481c47 = sub v1,r479c27
r480c55 = mul v2219,r481c47
r479c35 = add r479c27,r480c55
v2220 = is_equal r475c39,r455c11
v2222 = is_equal r475c39,r455c27
r479c39 = or v2220,v2222
r480c75 = and v39,r479c39
v2224 = add_virtual_target
connect r480c75,v2224
v1 = constant 0
r481c75 = sub v1,r479c35
r480c79 = mul v2224,r481c75
r479c43 = add r479c35,r480c79
v2225 = is_equal r475c39,r455c47
v2227 = is_equal r475c39,r455c63
r479c47 = or v2225,v2227
r483c19 = and v40,r479c47
v2229 = add_virtual_target
connect r483c19,v2229
v1 = constant 0
r482c23 = sub v1,r479c43
r483c23 = mul v2229,r482c23
r479c51 = add r479c43,r483c23
v447 = constant 5
r482c27 = sub v79,v447
v2230 = is_equal r482c27,v80
v2232 = is_equal r482c27,r449c63
r479c55 = or v2230,v2232
r483c43 = and v41,r479c55
v2234 = add_virtual_target
connect r483c43,v2234
v1 = constant 0
r482c55 = sub v1,r479c51
r483c47 = mul v2234,r482c55
r479c59 = add r479c51,r483c47
v2235 = is_equal r482c27,r185c19
v2237 = is_equal r482c27,r451c11
r479c63 = or v2235,v2237
r483c67 = and v42,r479c63
v2239 = add_virtual_target
connect r483c67,v2239
v1 = constant 0
r484c3 = sub v1,r479c59
r483c71 = mul v2239,r484c3
r479c67 = add r479c59,r483c71
v2240 = is_equal r482c27,r185c75
v2242 = is_equal r482c27,r451c43
r479c71 = or v2240,v2242
r485c11 = and v43,r479c71
v2244 = add_virtual_target
connect r485c11,v2244
v1 = constant 0
r484c31 = sub v1,r479c67
r485c15 = mul v2244,r484c31
r479c75 = add r479c67,r485c15
v2245 = is_equal r482c27,r451c63
v2247 = is_equal r482c27,r451c79
r479c79 = or v2245,v2247
r485c35 = and v44,r479c79
v2249 = add_virtual_target
connect r485c35,v2249
v1 = constant 0
r484c59 = sub v1,r479c75
r485c39 = mul v2249,r484c59
r486c3 = add r479c75,r485c39
v2250 = is_equal r482c27,r453c19
v2252 = is_equal r482c27,r453c35
r486c7 = or v2250,v2252
r485c59 = and v45,r486c7
v2254 = add_virtual_target
connect r485c59,v2254
v1 = constant 0
r487c7 = sub v1,r486c3
r485c63 = mul v2254,r487c7
r486c11 = add r486c3,r485c63
v2255 = is_equal r482c27,r453c55
v2257 = is_equal r482c27,r453c71
r486c15 = or v2255,v2257
r488c3 = and v46,r486c15
v2259 = add_virtual_target
connect r488c3,v2259
v1 = constant 0
r487c35 = sub v1,r486c11
r488c7 = mul v2259,r487c35
r486c19 = add r486c11,r488c7
v2260 = is_equal r482c27,r455c11
v2262 = is_equal r482c27,r455c27
r486c23 = or v2260,v2262
r488c27 = and v47,r486c23
v2264 = add_virtual_target
connect r488c27,v2264
v1 = constant 0
r487c63 = sub v1,r486c19
r488c31 = mul v2264,r487c63
r486c27 = add r486c19,r488c31
v2265 = is_equal r482c27,r455c47
v2267 = is_equal r482c27,r455c63
r486c31 = or v2265,v2267
r488c51 = and v48,r486c31
v2269 = add_virtual_target
connect r488c51,v2269
v1 = constant 0
r489c11 = sub v1,r486c27
r488c55 = mul v2269,r489c11
r486c35 = add r486c27,r488c55
v453 = constant 6
r489c15 = sub v79,v453
v2270 = is_equal r489c15,v80
v2272 = is_equal r489c15,r449c63
r486c39 = or v2270,v2272
r488c75 = and v49,r486c39
v2274 = add_virtual_target
connect r488c75,v2274
v1 = constant 0
r489c43 = sub v1,r486c35
r488c79 = mul v2274,r489c43
r486c43 = add r486c35,r488c79
v2275 = is_equal r489c15,r185c19
v2277 = is_equal r489c15,r451c11
r486c47 = or v2275,v2277
r490c19 = and v50,r486c47
v2279 = add_virtual_target
connect r490c19,v2279
v1 = constant 0
r489c71 = sub v1,r486c43
r490c23 = mul v2279,r489c71
r486c51 = add r486c43,r490c23
v2280 = is_equal r489c15,r185c75
v2282 = is_equal r489c15,r451c43
r486c55 = or v2280,v2282
r490c43 = and v51,r486c55
v2284 = add_virtual_target
connect r490c43,v2284
v1 = constant 0
r491c19 = sub v1,r486c51
r490c47 = mul v2284,r491c19
r486c59 = add r486c51,r490c47
v2285 = is_equal r489c15,r451c63
v2287 = is_equal r489c15,r451c79
r486c63 = or v2285,v2287
r490c67 = and v52,r486c63
v2289 = add_virtual_target
connect r490c67,v2289
v1 = constant 0
r491c47 = sub v1,r486c59
r490c71 = mul v2289,r491c47
r486c67 = add r486c59,r490c71
v2290 = is_equal r489c15,r453c19
v2292 = is_equal r489c15,r453c35
r486c71 = or v2290,v2292
r492c11 = and v53,r486c71
v2294 = add_virtual_target
connect r492c11,v2294
v1 = constant 0
r491c75 = sub v1,r486c67
r492c15 = mul v2294,r491c75
r486c75 = add r486c67,r492c15
v2295 = is_equal r489c15,r453c55
v2297 = is_equal r489c15,r453c71
r486c79 = or v2295,v2297
r492c35 = and v54,r486c79
v2299 = add_virtual_target
connect r492c35,v2299
v1 = constant 0
r493c23 = sub v1,r486c75
r492c39 = mul v2299,r493c23
r495c3 = add r486c75,r492c39
v2300 = is_equal r489c15,r455c11
v2302 = is_equal r489c15,r455c27
r495c7 = or v2300,v2302
r492c59 = and v55,r495c7
v2304 = add_virtual_target
connect r492c59,v2304
v1 = constant 0
r493c51 = sub v1,r495c3
r492c63 = mul v2304,r493c51
r495c11 = add r495c3,r492c63
v2305 = is_equal r489c15,r455c47
v2307 = is_equal r489c15,r455c63
r495c15 = or v2305,v2307
r496c3 = and v56,r495c15
v2309 = add_virtual_target
connect r496c3,v2309
v1 = constant 0
r493c79 = sub v1,r495c11
r496c7 = mul v2309,r493c79
r495c19 = add r495c11,r496c7
v459 = constant 7
r497c3 = sub v79,v459
v2310 = is_equal r497c3,v80
v2312 = is_equal r497c3,r449c63
r495c23 = or v2310,v2312
r496c27 = and v57,r495c23
v2314 = add_virtual_target
connect r496c27,v2314
v1 = constant 0
r497c31 = sub v1,r495c19
r496c31 = mul v2314,r497c31
r495c27 = add r495c19,r496c31
v2315 = is_equal r497c3,r185c19
v2317 = is_equal r497c3,r451c11
r495c31 = or v2315,v2317
r496c51 = and v58,r495c31
v2319 = add_virtual_target
connect r496c51,v2319
v1 = constant 0
r497c59 = sub v1,r495c27
r496c55 = mul v2319,r497c59
r495c35 = add r495c27,r496c55
v2320 = is_equal r497c3,r185c75
v2322 = is_equal r497c3,r451c43
r495c39 = or v2320,v2322
r496c75 = and v59,r495c39
v2324 = add_virtual_target
connect r496c75,v2324
v1 = constant 0
r498c7 = sub v1,r495c35
r496c79 = mul v2324,r498c7
r495c43 = add r495c35,r496c79
v2325 = is_equal r497c3,r451c63
v2327 = is_equal r497c3,r451c79
r495c47 = or v2325,v2327
r499c19 = and v60,r495c47
v2329 = add_virtual_target
connect r499c19,v2329
v1 = constant 0
r498c35 = sub v1,r495c43
r499c23 = mul v2329,r498c35
r495c51 = add r495c43,r499c23
v2330 = is_equal r497c3,r453c19
v2332 = is_equal r497c3,r453c35
r495c55 = or v2330,v2332
r499c43 = and v61,r495c55
v2334 = add_virtual_target
connect r499c43,v2334
v1 = constant 0
r498c63 = sub v1,r495c51
r499c47 = mul v2334,r498c63
r495c59 = add r495c51,r499c47
v2335 = is_equal r497c3,r453c55
v2337 = is_equal r497c3,r453c71
r495c63 = or v2335,v2337
r499c67 = and v62,r495c63
v2339 = add_virtual_target
connect r499c67,v2339
v1 = constant 0
r500c11 = sub v1,r495c59
r499c71 = mul v2339,r500c11
r495c67 = add r495c59,r499c71
v2340 = is_equal r497c3,r455c11
v2342 = is_equal r497c3,r455c27
r495c71 = or v2340,v2342
r501c11 = and v63,r495c71
v2344 = add_virtual_target
connect r501c11,v2344
v1 = constant 0
r500c39 = sub v1,r495c67
r501c15 = mul v2344,r500c39
r495c75 = add r495c67,r501c15
v2345 = is_equal r497c3,r455c47
v2347 = is_equal r497c3,r455c63
r495c79 = or v2345,v2347
r501c35 = and v64,r495c79
v2349 = add_virtual_target
connect r501c35,v2349
v1 = constant 0
r500c67 = sub v1,r495c75
r501c39 = mul v2349,r500c67
r502c3 = add r495c75,r501c39
v2350 = add_virtual_target
connect r502c3,v2350
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v2350,v87
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
v2351 = is_equal v65,v66
v1 = constant 0
r503c3 = sub v1,v66
v2353 = is_equal v65,r503c3
r502c7 = or v2351,v2353
# [36] if watcher_map[x][y] {
# [39] if (square.x - fx == square.y - fy) | (square.x - fx == fy - square.y) {
r501c59 = and v0,r502c7
v2355 = add_virtual_target
connect r501c59,v2355
v124 = constant 18446744069414584320
r501c63 = mul v2355,v124
v87 = constant 1
v87 = constant 1
r502c11 = add v87,r501c63
v87 = constant 1
r503c19 = sub v82,v87
v2356 = is_equal v81,r503c19
v87 = constant 1
r503c35 = sub v87,v82
v2358 = is_equal v81,r503c35
r502c15 = or v2356,v2358
r504c3 = and v2,r502c15
v2360 = add_virtual_target
connect r504c3,v2360
v1 = constant 0
r503c51 = sub v1,r502c11
r504c7 = mul v2360,r503c51
r502c19 = add r502c11,r504c7
v84 = constant 2
r503c55 = sub v82,v84
v2361 = is_equal v81,r503c55
v84 = constant 2
r503c71 = sub v84,v82
v2363 = is_equal v81,r503c71
r502c23 = or v2361,v2363
r504c27 = and v3,r502c23
v2365 = add_virtual_target
connect r504c27,v2365
v1 = constant 0
r505c7 = sub v1,r502c19
r504c31 = mul v2365,r505c7
r502c27 = add r502c19,r504c31
v435 = constant 3
r505c11 = sub v82,v435
v2366 = is_equal v81,r505c11
v435 = constant 3
r505c27 = sub v435,v82
v2368 = is_equal v81,r505c27
r502c31 = or v2366,v2368
r504c51 = and v4,r502c31
v2370 = add_virtual_target
connect r504c51,v2370
v1 = constant 0
r505c43 = sub v1,r502c27
r504c55 = mul v2370,r505c43
r502c35 = add r502c27,r504c55
v441 = constant 4
r505c47 = sub v82,v441
v2371 = is_equal v81,r505c47
v441 = constant 4
r505c63 = sub v441,v82
v2373 = is_equal v81,r505c63
r502c39 = or v2371,v2373
r504c75 = and v5,r502c39
v2375 = add_virtual_target
connect r504c75,v2375
v1 = constant 0
r505c79 = sub v1,r502c35
r504c79 = mul v2375,r505c79
r502c43 = add r502c35,r504c79
v447 = constant 5
r506c3 = sub v82,v447
v2376 = is_equal v81,r506c3
v447 = constant 5
r506c19 = sub v447,v82
v2378 = is_equal v81,r506c19
r502c47 = or v2376,v2378
r507c19 = and v6,r502c47
v2380 = add_virtual_target
connect r507c19,v2380
v1 = constant 0
r506c35 = sub v1,r502c43
r507c23 = mul v2380,r506c35
r502c51 = add r502c43,r507c23
v453 = constant 6
r506c39 = sub v82,v453
v2381 = is_equal v81,r506c39
v453 = constant 6
r506c55 = sub v453,v82
v2383 = is_equal v81,r506c55
r502c55 = or v2381,v2383
r507c43 = and v7,r502c55
v2385 = add_virtual_target
connect r507c43,v2385
v1 = constant 0
r506c71 = sub v1,r502c51
r507c47 = mul v2385,r506c71
r502c59 = add r502c51,r507c47
v459 = constant 7
r506c75 = sub v82,v459
v2386 = is_equal v81,r506c75
v459 = constant 7
r508c11 = sub v459,v82
v2388 = is_equal v81,r508c11
r502c63 = or v2386,v2388
r507c67 = and v8,r502c63
v2390 = add_virtual_target
connect r507c67,v2390
v1 = constant 0
r508c27 = sub v1,r502c59
r507c71 = mul v2390,r508c27
r502c67 = add r502c59,r507c71
v87 = constant 1
r508c31 = sub v81,v87
v2391 = is_equal r508c31,v82
v2393 = is_equal r508c31,r503c3
r502c71 = or v2391,v2393
r509c11 = and v9,r502c71
v2395 = add_virtual_target
connect r509c11,v2395
v1 = constant 0
r508c59 = sub v1,r502c67
r509c15 = mul v2395,r508c59
r502c75 = add r502c67,r509c15
v2396 = is_equal r508c31,r503c19
v2398 = is_equal r508c31,r503c35
r502c79 = or v2396,v2398
r509c35 = and v10,r502c79
v2400 = add_virtual_target
connect r509c35,v2400
v1 = constant 0
r510c7 = sub v1,r502c75
r509c39 = mul v2400,r510c7
r512c3 = add r502c75,r509c39
v2401 = is_equal r508c31,r503c55
v2403 = is_equal r508c31,r503c71
r512c7 = or v2401,v2403
r509c59 = and v11,r512c7
v2405 = add_virtual_target
connect r509c59,v2405
v1 = constant 0
r510c35 = sub v1,r512c3
r509c63 = mul v2405,r510c35
r512c11 = add r512c3,r509c63
v2406 = is_equal r508c31,r505c11
v2408 = is_equal r508c31,r505c27
r512c15 = or v2406,v2408
r513c3 = and v12,r512c15
v2410 = add_virtual_target
connect r513c3,v2410
v1 = constant 0
r510c63 = sub v1,r512c11
r513c7 = mul v2410,r510c63
r512c19 = add r512c11,r513c7
v2411 = is_equal r508c31,r505c47
v2413 = is_equal r508c31,r505c63
r512c23 = or v2411,v2413
r513c27 = and v13,r512c23
v2415 = add_virtual_target
connect r513c27,v2415
v1 = constant 0
r514c11 = sub v1,r512c19
r513c31 = mul v2415,r514c11
r512c27 = add r512c19,r513c31
v2416 = is_equal r508c31,r506c3
v2418 = is_equal r508c31,r506c19
r512c31 = or v2416,v2418
r513c51 = and v14,r512c31
v2420 = add_virtual_target
connect r513c51,v2420
v1 = constant 0
r514c39 = sub v1,r512c27
r513c55 = mul v2420,r514c39
r512c35 = add r512c27,r513c55
v2421 = is_equal r508c31,r506c39
v2423 = is_equal r508c31,r506c55
r512c39 = or v2421,v2423
r513c75 = and v15,r512c39
v2425 = add_virtual_target
connect r513c75,v2425
v1 = constant 0
r514c67 = sub v1,r512c35
r513c79 = mul v2425,r514c67
r512c43 = add r512c35,r513c79
v2426 = is_equal r508c31,r506c75
v2428 = is_equal r508c31,r508c11
r512c47 = or v2426,v2428
r515c19 = and v16,r512c47
v2430 = add_virtual_target
connect r515c19,v2430
v1 = constant 0
r516c15 = sub v1,r512c43
r515c23 = mul v2430,r516c15
r512c51 = add r512c43,r515c23
v84 = constant 2
r516c19 = sub v81,v84
v2431 = is_equal r516c19,v82
v2433 = is_equal r516c19,r503c3
r512c55 = or v2431,v2433
r515c43 = and v17,r512c55
v2435 = add_virtual_target
connect r515c43,v2435
v1 = constant 0
r516c47 = sub v1,r512c51
r515c47 = mul v2435,r516c47
r512c59 = add r512c51,r515c47
v2436 = is_equal r516c19,r503c19
v2438 = is_equal r516c19,r503c35
r512c63 = or v2436,v2438
r515c67 = and v18,r512c63
v2440 = add_virtual_target
connect r515c67,v2440
v1 = constant 0
r516c75 = sub v1,r512c59
r515c71 = mul v2440,r516c75
r512c67 = add r512c59,r515c71
v2441 = is_equal r516c19,r503c55
v2443 = is_equal r516c19,r503c71
r512c71 = or v2441,v2443
r518c11 = and v19,r512c71
v2445 = add_virtual_target
connect r518c11,v2445
v1 = constant 0
r517c23 = sub v1,r512c67
r518c15 = mul v2445,r517c23
r512c75 = add r512c67,r518c15
v2446 = is_equal r516c19,r505c11
v2448 = is_equal r516c19,r505c27
r512c79 = or v2446,v2448
r518c35 = and v20,r512c79
v2450 = add_virtual_target
connect r518c35,v2450
v1 = constant 0
r517c51 = sub v1,r512c75
r518c39 = mul v2450,r517c51
r519c3 = add r512c75,r518c39
v2451 = is_equal r516c19,r505c47
v2453 = is_equal r516c19,r505c63
r519c7 = or v2451,v2453
r518c59 = and v21,r519c7
v2455 = add_virtual_target
connect r518c59,v2455
v1 = constant 0
r517c79 = sub v1,r519c3
r518c63 = mul v2455,r517c79
r519c11 = add r519c3,r518c63
v2456 = is_equal r516c19,r506c3
v2458 = is_equal r516c19,r506c19
r519c15 = or v2456,v2458
r521c3 = and v22,r519c15
v2460 = add_virtual_target
connect r521c3,v2460
v1 = constant 0
r520c27 = sub v1,r519c11
r521c7 = mul v2460,r520c27
r519c19 = add r519c11,r521c7
v2461 = is_equal r516c19,r506c39
v2463 = is_equal r516c19,r506c55
r519c23 = or v2461,v2463
r521c27 = and v23,r519c23
v2465 = add_virtual_target
connect r521c27,v2465
v1 = constant 0
r520c55 = sub v1,r519c19
r521c31 = mul v2465,r520c55
r519c27 = add r519c19,r521c31
v2466 = is_equal r516c19,r506c75
v2468 = is_equal r516c19,r508c11
r519c31 = or v2466,v2468
r521c51 = and v24,r519c31
v2470 = add_virtual_target
connect r521c51,v2470
v1 = constant 0
r522c3 = sub v1,r519c27
r521c55 = mul v2470,r522c3
r519c35 = add r519c27,r521c55
v435 = constant 3
r522c7 = sub v81,v435
v2471 = is_equal r522c7,v82
v2473 = is_equal r522c7,r503c3
r519c39 = or v2471,v2473
r521c75 = and v25,r519c39
v2475 = add_virtual_target
connect r521c75,v2475
v1 = constant 0
r522c35 = sub v1,r519c35
r521c79 = mul v2475,r522c35
r519c43 = add r519c35,r521c79
v2476 = is_equal r522c7,r503c19
v2478 = is_equal r522c7,r503c35
r519c47 = or v2476,v2478
r523c19 = and v26,r519c47
v2480 = add_virtual_target
connect r523c19,v2480
v1 = constant 0
r522c63 = sub v1,r519c43
r523c23 = mul v2480,r522c63
r519c51 = add r519c43,r523c23
v2481 = is_equal r522c7,r503c55
v2483 = is_equal r522c7,r503c71
r519c55 = or v2481,v2483
r523c43 = and v27,r519c55
v2485 = add_virtual_target
connect r523c43,v2485
v1 = constant 0
r524c11 = sub v1,r519c51
r523c47 = mul v2485,r524c11
r519c59 = add r519c51,r523c47
v2486 = is_equal r522c7,r505c11
v2488 = is_equal r522c7,r505c27
r519c63 = or v2486,v2488
r523c67 = and v28,r519c63
v2490 = add_virtual_target
connect r523c67,v2490
v1 = constant 0
r524c39 = sub v1,r519c59
r523c71 = mul v2490,r524c39
r519c67 = add r519c59,r523c71
v2491 = is_equal r522c7,r505c47
v2493 = is_equal r522c7,r505c63
r519c71 = or v2491,v2493
r525c11 = and v29,r519c71
v2495 = add_virtual_target
connect r525c11,v2495
v1 = constant 0
r524c67 = sub v1,r519c67
r525c15 = mul v2495,r524c67
r519c75 = add r519c67,r525c15
v2496 = is_equal r522c7,r506c3
v2498 = is_equal r522c7,r506c19
r519c79 = or v2496,v2498
r525c35 = and v30,r519c79
v2500 = add_virtual_target
connect r525c35,v2500
v1 = constant 0
r526c15 = sub v1,r519c75
r525c39 = mul v2500,r526c15
r528c3 = add r519c75,r525c39
v2501 = is_equal r522c7,r506c39
v2503 = is_equal r522c7,r506c55
r528c7 = or v2501,v2503
r525c59 = and v31,r528c7
v2505 = add_virtual_target
connect r525c59,v2505
v1 = constant 0
r526c43 = sub v1,r528c3
r525c63 = mul v2505,r526c43
r528c11 = add r528c3,r525c63
v2506 = is_equal r522c7,r506c75
v2508 = is_equal r522c7,r508c11
r528c15 = or v2506,v2508
r529c3 = and v32,r528c15
v2510 = add_virtual_target
connect r529c3,v2510
v1 = constant 0
r526c71 = sub v1,r528c11
r529c7 = mul v2510,r526c71
r528c19 = add r528c11,r529c7
v441 = constant 4
r526c75 = sub v81,v441
v2511 = is_equal r526c75,v82
v2513 = is_equal r526c75,r503c3
r528c23 = or v2511,v2513
r529c27 = and v33,r528c23
v2515 = add_virtual_target
connect r529c27,v2515
v1 = constant 0
r530c23 = sub v1,r528c19
r529c31 = mul v2515,r530c23
r528c27 = add r528c19,r529c31
v2516 = is_equal r526c75,r503c19
v2518 = is_equal r526c75,r503c35
r528c31 = or v2516,v2518
r529c51 = and v34,r528c31
v2520 = add_virtual_target
connect r529c51,v2520
v1 = constant 0
r530c51 = sub v1,r528c27
r529c55 = mul v2520,r530c51
r528c35 = add r528c27,r529c55
v2521 = is_equal r526c75,r503c55
v2523 = is_equal r526c75,r503c71
r528c39 = or v2521,v2523
r529c75 = and v35,r528c39
v2525 = add_virtual_target
connect r529c75,v2525
v1 = constant 0
r530c79 = sub v1,r528c35
r529c79 = mul v2525,r530c79
r528c43 = add r528c35,r529c79
v2526 = is_equal r526c75,r505c11
v2528 = is_equal r526c75,r505c27
r528c47 = or v2526,v2528
r532c19 = and v36,r528c47
v2530 = add_virtual_target
connect r532c19,v2530
v1 = constant 0
r531c27 = sub v1,r528c43
r532c23 = mul v2530,r531c27
r528c51 = add r528c43,r532c23
v2531 = is_equal r526c75,r505c47
v2533 = is_equal r526c75,r505c63
r528c55 = or v2531,v2533
r532c43 = and v37,r528c55
v2535 = add_virtual_target
connect r532c43,v2535
v1 = constant 0
r531c55 = sub v1,r528c51
r532c47 = mul v2535,r531c55
r528c59 = add r528c51,r532c47
v2536 = is_equal r526c75,r506c3
v2538 = is_equal r526c75,r506c19
r528c63 = or v2536,v2538
r532c67 = and v38,r528c63
v2540 = add_virtual_target
connect r532c67,v2540
v1 = constant 0
r533c3 = sub v1,r528c59
r532c71 = mul v2540,r533c3
r528c67 = add r528c59,r532c71
v2541 = is_equal r526c75,r506c39
v2543 = is_equal r526c75,r506c55
r528c71 = or v2541,v2543
r534c11 = and v39,r528c71
v2545 = add_virtual_target
connect r534c11,v2545
v1 = constant 0
r533c31 = sub v1,r528c67
r534c15 = mul v2545,r533c31
r528c75 = add r528c67,r534c15
v2546 = is_equal r526c75,r506c75
v2548 = is_equal r526c75,r508c11
r528c79 = or v2546,v2548
r534c35 = and v40,r528c79
v2550 = add_virtual_target
connect r534c35,v2550
v1 = constant 0
r533c59 = sub v1,r528c75
r534c39 = mul v2550,r533c59
r535c3 = add r528c75,r534c39
v447 = constant 5
r533c63 = sub v81,v447
v2551 = is_equal r533c63,v82
v2553 = is_equal r533c63,r503c3
r535c7 = or v2551,v2553
r534c59 = and v41,r535c7
v2555 = add_virtual_target
connect r534c59,v2555
v1 = constant 0
r536c11 = sub v1,r535c3
r534c63 = mul v2555,r536c11
r535c11 = add r535c3,r534c63
v2556 = is_equal r533c63,r503c19
v2558 = is_equal r533c63,r503c35
r535c15 = or v2556,v2558
r537c3 = and v42,r535c15
v2560 = add_virtual_target
connect r537c3,v2560
v1 = constant 0
r536c39 = sub v1,r535c11
r537c7 = mul v2560,r536c39
r535c19 = add r535c11,r537c7
v2561 = is_equal r533c63,r503c55
v2563 = is_equal r533c63,r503c71
r535c23 = or v2561,v2563
r537c27 = and v43,r535c23
v2565 = add_virtual_target
connect r537c27,v2565
v1 = constant 0
r536c67 = sub v1,r535c19
r537c31 = mul v2565,r536c67
r535c27 = add r535c19,r537c31
v2566 = is_equal r533c63,r505c11
v2568 = is_equal r533c63,r505c27
r535c31 = or v2566,v2568
r537c51 = and v44,r535c31
v2570 = add_virtual_target
connect r537c51,v2570
v1 = constant 0
r538c15 = sub v1,r535c27
r537c55 = mul v2570,r538c15
r535c35 = add r535c27,r537c55
v2571 = is_equal r533c63,r505c47
v2573 = is_equal r533c63,r505c63
r535c39 = or v2571,v2573
r537c75 = and v45,r535c39
v2575 = add_virtual_target
connect r537c75,v2575
v1 = constant 0
r538c43 = sub v1,r535c35
r537c79 = mul v2575,r538c43
r535c43 = add r535c35,r537c79
v2576 = is_equal r533c63,r506c3
v2578 = is_equal r533c63,r506c19
r535c47 = or v2576,v2578
r539c19 = and v46,r535c47
v2580 = add_virtual_target
connect r539c19,v2580
v1 = constant 0
r538c71 = sub v1,r535c43
r539c23 = mul v2580,r538c71
r535c51 = add r535c43,r539c23
v2581 = is_equal r533c63,r506c39
v2583 = is_equal r533c63,r506c55
r535c55 = or v2581,v2583
r539c43 = and v47,r535c55
v2585 = add_virtual_target
connect r539c43,v2585
v1 = constant 0
r540c19 = sub v1,r535c51
r539c47 = mul v2585,r540c19
r535c59 = add r535c51,r539c47
v2586 = is_equal r533c63,r506c75
v2588 = is_equal r533c63,r508c11
r535c63 = or v2586,v2588
r539c67 = and v48,r535c63
v2590 = add_virtual_target
connect r539c67,v2590
v1 = constant 0
r540c47 = sub v1,r535c59
r539c71 = mul v2590,r540c47
r535c67 = add r535c59,r539c71
v453 = constant 6
r540c51 = sub v81,v453
v2591 = is_equal r540c51,v82
v2593 = is_equal r540c51,r503c3
r535c71 = or v2591,v2593
r541c11 = and v49,r535c71
v2595 = add_virtual_target
connect r541c11,v2595
v1 = constant 0
r540c79 = sub v1,r535c67
r541c15 = mul v2595,r540c79
r535c75 = add r535c67,r541c15
v2596 = is_equal r540c51,r503c19
v2598 = is_equal r540c51,r503c35
r535c79 = or v2596,v2598
r541c35 = and v50,r535c79
v2600 = add_virtual_target
connect r541c35,v2600
v1 = constant 0
r542c27 = sub v1,r535c75
r541c39 = mul v2600,r542c27
r544c3 = add r535c75,r541c39
v2601 = is_equal r540c51,r503c55
v2603 = is_equal r540c51,r503c71
r544c7 = or v2601,v2603
r541c59 = and v51,r544c7
v2605 = add_virtual_target
connect r541c59,v2605
v1 = constant 0
r542c55 = sub v1,r544c3
r541c63 = mul v2605,r542c55
r544c11 = add r544c3,r541c63
v2606 = is_equal r540c51,r505c11
v2608 = is_equal r540c51,r505c27
r544c15 = or v2606,v2608
r545c3 = and v52,r544c15
v2610 = add_virtual_target
connect r545c3,v2610
v1 = constant 0
r546c3 = sub v1,r544c11
r545c7 = mul v2610,r546c3
r544c19 = add r544c11,r545c7
v2611 = is_equal r540c51,r505c47
v2613 = is_equal r540c51,r505c63
r544c23 = or v2611,v2613
r545c27 = and v53,r544c23
v2615 = add_virtual_target
connect r545c27,v2615
v1 = constant 0
r546c31 = sub v1,r544c19
r545c31 = mul v2615,r546c31
r544c27 = add r544c19,r545c31
v2616 = is_equal r540c51,r506c3
v2618 = is_equal r540c51,r506c19
r544c31 = or v2616,v2618
r545c51 = and v54,r544c31
v2620 = add_virtual_target
connect r545c51,v2620
v1 = constant 0
r546c59 = sub v1,r544c27
r545c55 = mul v2620,r546c59
r544c35 = add r544c27,r545c55
v2621 = is_equal r540c51,r506c39
v2623 = is_equal r540c51,r506c55
r544c39 = or v2621,v2623
r545c75 = and v55,r544c39
v2625 = add_virtual_target
connect r545c75,v2625
v1 = constant 0
r547c7 = sub v1,r544c35
r545c79 = mul v2625,r547c7
r544c43 = add r544c35,r545c79
v2626 = is_equal r540c51,r506c75
v2628 = is_equal r540c51,r508c11
r544c47 = or v2626,v2628
r548c19 = and v56,r544c47
v2630 = add_virtual_target
connect r548c19,v2630
v1 = constant 0
r547c35 = sub v1,r544c43
r548c23 = mul v2630,r547c35
r544c51 = add r544c43,r548c23
v459 = constant 7
r547c39 = sub v81,v459
v2631 = is_equal r547c39,v82
v2633 = is_equal r547c39,r503c3
r544c55 = or v2631,v2633
r548c43 = and v57,r544c55
v2635 = add_virtual_target
connect r548c43,v2635
v1 = constant 0
r547c67 = sub v1,r544c51
r548c47 = mul v2635,r547c67
r544c59 = add r544c51,r548c47
v2636 = is_equal r547c39,r503c19
v2638 = is_equal r547c39,r503c35
r544c63 = or v2636,v2638
r548c67 = and v58,r544c63
v2640 = add_virtual_target
connect r548c67,v2640
v1 = constant 0
r549c15 = sub v1,r544c59
r548c71 = mul v2640,r549c15
r544c67 = add r544c59,r548c71
v2641 = is_equal r547c39,r503c55
v2643 = is_equal r547c39,r503c71
r544c71 = or v2641,v2643
r550c11 = and v59,r544c71
v2645 = add_virtual_target
connect r550c11,v2645
v1 = constant 0
r549c43 = sub v1,r544c67
r550c15 = mul v2645,r549c43
r544c75 = add r544c67,r550c15
v2646 = is_equal r547c39,r505c11
v2648 = is_equal r547c39,r505c27
r544c79 = or v2646,v2648
r550c35 = and v60,r544c79
v2650 = add_virtual_target
connect r550c35,v2650
v1 = constant 0
r549c71 = sub v1,r544c75
r550c39 = mul v2650,r549c71
r551c3 = add r544c75,r550c39
v2651 = is_equal r547c39,r505c47
v2653 = is_equal r547c39,r505c63
r551c7 = or v2651,v2653
r550c59 = and v61,r551c7
v2655 = add_virtual_target
connect r550c59,v2655
v1 = constant 0
r552c19 = sub v1,r551c3
r550c63 = mul v2655,r552c19
r551c11 = add r551c3,r550c63
v2656 = is_equal r547c39,r506c3
v2658 = is_equal r547c39,r506c19
r551c15 = or v2656,v2658
r553c3 = and v62,r551c15
v2660 = add_virtual_target
connect r553c3,v2660
v1 = constant 0
r552c47 = sub v1,r551c11
r553c7 = mul v2660,r552c47
r551c19 = add r551c11,r553c7
v2661 = is_equal r547c39,r506c39
v2663 = is_equal r547c39,r506c55
r551c23 = or v2661,v2663
r553c27 = and v63,r551c23
v2665 = add_virtual_target
connect r553c27,v2665
v1 = constant 0
r552c75 = sub v1,r551c19
r553c31 = mul v2665,r552c75
r551c27 = add r551c19,r553c31
v2666 = is_equal r547c39,r506c75
v2668 = is_equal r547c39,r508c11
r551c31 = or v2666,v2668
r553c51 = and v64,r551c31
v2670 = add_virtual_target
connect r553c51,v2670
v1 = constant 0
r554c23 = sub v1,r551c27
r553c55 = mul v2670,r554c23
r551c35 = add r551c27,r553c55
v2671 = add_virtual_target
connect r551c35,v2671
# [50] assert(is_safe_step(path[i], watcher_map));
v87 = constant_bool true
connect v2671,v87
register_public_inputs (v0,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29,v30,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v43,v44,v45,v46,v47,v48,v49,v50,v51,v52,v53,v54,v55,v56,v57,v58,v59,v60,v61,v62,v63,v64)
register_public_inputs (v65,v66)
