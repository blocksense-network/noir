---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/7VVUW6DMAw1TWjHEFq1/Ww/2wH2sTCYqDRNmrRdBLXiHBy9INmNZbn9AMcSSsDmvfjlQTKIkeHoYUUQyA+OBY4blnfT9Yv3YV3UheC1xD+Eti2U/gzX3xSImaXBD4SfSP+wQ5z/MeLzXoj3brpKNq8g+iNV/7R/Kft/utEzeedvjDkw5C5RyxehZaJem4physiUZ06p4X54w3ml1AHLSX09m3NM+ZyC9M9F/TOOpJtj71t65JHhguAqIfrEj/b83SEE4nVMB20PPcvz+le8v1f68CvWOXR9PTT90H/1p1N77KVOc2yYTtzr0hdyXRLH3cCW3w2A3d7v4fr/oVJ4l/awV7DI99Lfhv1dzi9vj/1J2Lk9dr2dMN4R6wF5tkxf6Ss653Kl1okc1X7jONd+GHH5K1wd42oWcIFSS7prHt4xviU6WvJp39b8vzgD59JII90KAAA=",
  "debug_symbols": "pZTLioMwFIbfJWsX5h77KqWU1KYlEKKkOjAU333+GO20i4FBN/mMJ9+5KORJru4y3s8+3roHORyf5JJ8CP5+Dl1rB99FvH2SOi9UkAOtCJUFqkAXmIJmBsN5BtACVsBncOw4wAtEgSxQBbrAzBA4KQCclABiCkBMV0SiggGQswF4QW6wBnOH6Ebqhbk5Nk0VWWc7D8m5PNrbsPgEvU0uDuQQxxAq8mXDOB969DbOHGxCFBVcvIJIePPB5aep+rXrv1XFF1eZlyz/bZvVNnqDTQVbdCr4Fr95+c1ef8v0TK0+U3ynv6U+l3LxuVT7fEW39P/6/cyInX6zpX+9+lx/zn/CzrY+fVwdU86UvL0Et2xvY2zfosN3v0bWq6dPXeuuY3I509v9g/XIZMXr05Sr/QA=",
  "file_map": {
    "50": {
      "source": "fn main() {\n    // Safety: test program\n    let bug = unsafe { foo() };\n    assert(!bug);\n}\n\nunconstrained fn foo() -> bool {\n    let mut i = 0;\n    let mut bug = false;\n    loop {\n        if i == 3 {\n            break;\n            bug = true;\n        } else if i == 2 {\n            i += 1;\n            continue;\n            bug = true;\n        }\n        i += 1;\n    }\n    bug\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
