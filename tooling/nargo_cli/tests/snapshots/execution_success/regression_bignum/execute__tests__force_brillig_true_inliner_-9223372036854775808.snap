---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/+1ay47rRBBtJ3YmD0aJuEjsr8QCsbFj5wUSGkTgXtiwgg1sPE684iP8F0iID2DPCokFEisklgjxK0gsmB66xicnFSdz0x4GaUqK/OjqU9XVVeXq7gSmpsBdQ3MGCcgLdzNwzx1o7978rtxzfB4lA5LrE38ZZ/lAGZ9H/dOBwwzawY8FvyX7xxcO59OqxsexiNz+zW8E989M7R9tjV/mr83xP2sYs/jOh1V7c2tpDfhhC/gfAb4x/mP343bsc4f/oh38meC/bAd/LviftIKfFjYebSx+4fC0WDzLn/JyXhbbPMkX+fV0U2ixeBb+toiLPC7ifFNs09lqADbygr+cbdJyURTTm5ttOh0Aphf8zWY2LbI8T8vNdpXOBT/yhQ80L7f5pcPsmZoCmvsL04avxYuA5BmaJ0Pyh6Sr79wQkDzRh+0jviq26yu6TpS2gO77ipy+IkfD6njE6nrECj1iRZ6wLK2rf68t11YL8Qn0ISHNX9CXmbr0jHpbjK8Al/mEvOfvXSpkTB1FvpZ7/4v8Ie+GptW67y5/dEkftg/nj1DRdWL0eML7UJETKnImStu6esJ6FayWfTq7VGQLSRvmRfRlJi1/yDubP74GXOZjmeh7nJc1f0cMqbXHRo8/DSt0P46dtcOKiP8zd9XqMZ/rq9cB1xg9Ro/Z4+U97BHc0x7C/znZoyV/Ve0hskamXu+GlX/5i2Uci9wu2IH9HuVHxP+lex4q4zjnO1ku8qRM8zKf5ZtNVuRsJ0sdsJO25nosOSZQdBc6lmN+AFzmY5kYB9EjtcU5+fZPwGU+lqnlW/aTS7Ofb7j2aikPnlx7ifyhaXUek6ZvPNqHa69I0XVCbZbWVc3HbV3lXecJyzuWFqvBgavI4XeHajz0k1PiKqJ+V+45Po9OjiuR/1Bxpc1fU1z1FF0n1GZpXdV83Na09/KE5Q+Lc6Hga1eRw+8Oxa8WV1i/yjmI1esb6IP9pKbjvlJH81rgO1Njfuvux4BrzP53dWz244hrIG1fULOBvNf2q3AvtUO6Ycz0qQ378Xpj0CBH02uo8A8a9ML9qiFhoZywYRysa+8Av+BFxP+9u1q8587oUkdJLY/z1+a6w+Zpq8dboAfHVlTtjlvzBS1Om+ZU2/+dmP35uyCsY/tRctamxa7oqNXogouxe2p9+qp5BbEkdxzLKz8CLsbPqXlF+H8yNeYfBzBRRzxj5PmNAEvT4QXpIPw/u6u183uBjonjChvGJfy/AOb7hKl9X5pyXtPZCeozNvu+xn7bg/FIv3VV8+B4kf83d7XPvxKmtj7QYkHz9xBw2afEJh1Tzz+e0UrfluvHOCC9Q7Nfb3MMIP/vNK4LsBXPv/Yt6ily0SfEJjxnItf64AdOAMc8ysYY1L7tuAeFOYlzojYu1JNj61R+GVfH6Osd5uf8wePpgfxDcxk09Gd/6x7oi/e8F2Hg/rGug4J29GlcB2n58Gkd9P/D8rkOGhj923flnuPzaO+/CkOj19Nhgz6BN32yu++O1Kh4HoE5pkftwv+Xu9rndbCro1avYR14qF77GzClrtHWDJjTLIXQ1vaaAeuRiHTSfFo7r2TbIz//V8aS9l8L/t9K0/clUDD5/27Ij3XTfeav7wRhravV+lKzWfzhCb7DdtNkj4Ma89Ldn7qHECrtTXPadP4n89I7wM/xJPxvgO2eBzom2gT14vkQ/jcBsymeMOdYCqvd8V259/F5pMYT1pocT037MZbuuwYXm00U/nW129a0zvG1JhHf932Wmc3yRZEvkmSVJdssmR07yxyLThWMq9rtc+GeZZ3A/IIXEf/bEJfvkA9GijzL924DX3DgeouhvAur3XeDap+/W+3zi+xhta+jtI2gDX3X0mvuGe2FWKJHRPwLyF2W+tBH+k8U+X2Sv6O38o7PRUcK/0jht/MTk9/i2H3X8LcyCR/fsW7iOyPjP66my+V8Nb2Os8WmKDdZeiyufMsvZvPr4ia4421yq85Dy59n82S5zJfFvChXWXH94ONfzctVml4n6WqzXSXzY/L/AfOTf/YZNQAA",
  "debug_symbols": "pZjdbhpBDIXfhWsudmyPx9NXiaKIJKRCQiSiUKmKePfa6z1Le1GpmtxwvgX87c94Z1g+N6/75+v3p8Pp7f3H5tvD5+b5fDgeD9+fju8vu8vh/eTvfm6meCF/LdsNlQzK4AzJqBma0TIso8/BaeG0cFo4LZwWTgunhdPCaeG0SFokLeIW8uAMyagZmtEy3MIefY46ZZQMyuAMyagZmtEy0lLTomnRtGhaNC2aFk2LukU8WoZl9DnalFEyKMMt1UMy3KIemtEyLMMtbbuxKcMt5kEZnCFzdN/qHpJRMzSjZVhGn6NMcbGngAIgAAMEUAEKiCHzUSplAhQAARgggApQQAMYAGaCmWAmmAlmgplgJpgJZoJ5blbvlzK36wwFQAAGCKACFNAABoBZYBaYBWaBWWAWmAVmgVlgjjYuHBBVEqB4J75cAwzQF4juLRoQ5S2AAAwIoQVUgAIaIMzRLdHPM0RHJxQAARgggArQBaKVKfonmjmBAHFrxzCZ75Ti3K0v0CdAARCAAQIIT1yfaP+EBgizX0OKnqcaIIAKUEADGKAvED2fAE/0fEIINSDKW0CUW0BfIBo7Icp7AAEYEHPMFFABCmgAA/QForETCoAADICZYWaYGWaGmWEWmAVmgTkam+flQgAVoIAGMEBfYJ6vZyiAMFMAAwRQAQpoAAP0BeY5nAMKgAAMUEBURW80fDkam2NMo7ETBFABUR7DHRN3ggFCGA0QPZ9QAARggAAqQAFhbrfbdoPV++ly3u9j8f5jOfdF/mN33p8um2+n6/G43fzcHa/zl3587E5zXnZn/9RHbH969XTh2+G4D7pt79XTv0tLdOZc7DPoWl7/v14U9doG6ilm8bne77eRelnr29D+Oy31PJUv1utAPRMGj6l/rZ5loF7WepGR6y+21veR49eC66eFR+prRX0duf7a0P9qI/3fRJb6Vkeuf5sa6ksdqY81PevJvlbP5WvHP1SvHfdvm0aunxH2b0Pnb+v8ZTIyf1hD/5uNnL/pun8buf+so74PzV+dcP90Gbn/uqH/u43c//70gQYsUxsZQX9awRTizys0Zih3w9BZlHUacKxDBrsb+tgxrFOhy4bWcloXA38IK0OGbvefEzJk0Psx2NgxWL0bdMhQ+W74u6MefWv3cjj/9bfLLVznw+75uF82366nlz8+vfz6wCf42+bj/P6yf72e92G6/3fjLw/UectFHuOR3DdNt73Ehv/UfGB/FuTSHm9xKL8B",
  "file_map": {
    "50": {
      "source": "fn main() {\n    let numerator =\n        [790096867046896348, 1063071665130103641, 602707730209562162, 996751591622961462, 28650, 0];\n    unsafe { __udiv_mod(numerator) };\n\n    let denominator = [12, 0, 0, 0, 0, 0];\n    let result = unsafe { __validate_gt_remainder(denominator) };\n    assert(result[4] == 0);\n    assert(result[5] == 0);\n}\n\nunconstrained fn __udiv_mod(remainder_u60: [u64; 6]) {\n    let bit_difference = get_msb(remainder_u60);\n    let accumulator_u60: [u64; 6] = shl(bit_difference);\n}\n\nunconstrained fn __validate_gt_remainder(a_u60: [u64; 6]) -> [u64; 6] {\n    let mut addend_u60: [u64; 6] = [0; 6];\n    let mut result_u60: [u64; 6] = [0; 6];\n\n    for i in 0..6 {\n        result_u60[i] = a_u60[i] + addend_u60[i];\n    }\n\n    result_u60\n}\n\nunconstrained fn get_msb(val: [u64; 6]) -> u32 {\n    let mut count = 0;\n    for i in 0..6 {\n        let v = val[(6 - 1) - i];\n        if (v > 0) {\n            count = 60 * ((6 - 1) - i);\n            break;\n        }\n    }\n    count\n}\n\nunconstrained fn shl(shift: u32) -> [u64; 6] {\n    let num_shifted_limbs = shift / 60;\n    let limb_shift = (shift % 60) as u8;\n\n    let mut result = [0; 6];\n    result[num_shifted_limbs] = (1 << limb_shift);\n\n    for i in 1..(6 - num_shifted_limbs) {\n        result[i + num_shifted_limbs] = 0;\n    }\n    result\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
