---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "ndvRThs7EIDhd8k1F/aMPbZ5laOqChCqSFFAAY50hHj3s6nYBMXeRP/cVGzbT6vkN7CZ9X6unjYPH39+b/fPL2+r+38+V7uXx/X79mU/HX1+3a0eDtvdbvvn98+/XoXjHxL+/v+31/X+ePj2vj68r+6jtLvVZv80faVh8s/b3WZ1n8PXr7uVRCwEC8UiYZGxMCwKFhWLRoXi5oqbK26uuLni5oqbK26uuLni5oqbJ9w84eZp3DzZLKxcCsUiYZGxMCwKFsPmEuO3kCiXolGRAxYRC8FCsUhYZCwMi4IFbp5xc8PNDTc33Nxwc8PNDTe3cfN0EuXyu9YKFhWLRkUJWEQsBAvFImGRscDNC25ecPOCm1fcvI6bN/kWGuKlECz0lrBLkbDIWBgWw+YqYRbSLkXFot0Qmi5EC1hELISKGIYnSSeSknREOFFOEieZE+OkcDJcX6meSGsdaZjEwEnkRDhRThInmRPjpHDC60deX3h94fWF1x+PaizOP8AtakeMk8JJ5aRhMp7XXCeRE+FEOUmc8PrK6yuvr7y+8vqJ10+8fuL1E6+feP3x+MZynkm2jhgnhZPKScNkPMO5TiInwolykjjh9TOvn3n9zOtnXt94feP1jdc3Xt94/fG4xco8grZ6OYKO41lISemblNx9fhmPNq6fZfjySyjzWWLuSOIkczJc/CXWmUjtSLlBNHakctIwGY84frz8AYmcCCfKyXjxt3lcU0K3LMdzjuvEOCmcVE4aJuNhx3USORFOhq+lyly/dt9iEgInkZPhGqunm1A1lY4M69cyfxarNXakctIwGQ8irpPIiXCinIy72KlLlY5kToyTcf02k9bNd2U8Imgy/xJvSTuinCROMifGSeGkctIwUd5lPCK4TsYp63xx1WrryPheerD5F/80DO1+ki1soZjGxjOK3c08WdhFcQM1B1rYSzENws+oeyMWtlPcQOJB400V8XQNPH2ZO5Q8KHuQeVDxoOpBzYFy8KDoQeJBnhWRPSsie1ZE9qyI7FkR2bMismdFmGdFmGdF2MKKqGfUTdTF1IOSB2UPMg8qHlQ9qDlQCR60sCJOU5PJ95tOxYPUg5IHZQ8yDyoeVD1oYUPm6ZZunC4ALlENHhQ9SDwoe9DSXtbT9Z52H6mled6ItvBG2Bn1n8WaeJB6UPKghbe85jOyDpkHFQ9aiJv1jLqr5dY40hA8KHqQeJB6UPKg7EFG0dd09O/6sF0/7Dbfz4w8f+wffzxC8v7f6+biaZLXw8vj5unjsDk+V3J+pOSYTqdbeqr667gNZTps6a6148GxkGqa/s2mc07n/R8=",
  "file_map": {
    "50": {
      "source": "fn main() {\n    let numerator =\n        [790096867046896348, 1063071665130103641, 602707730209562162, 996751591622961462, 28650, 0];\n    unsafe { __udiv_mod(numerator) };\n\n    let denominator = [12, 0, 0, 0, 0, 0];\n    let result = unsafe { __validate_gt_remainder(denominator) };\n    assert(result[4] == 0);\n    assert(result[5] == 0);\n}\n\nunconstrained fn __udiv_mod(remainder_u60: [u64; 6]) {\n    let bit_difference = get_msb(remainder_u60);\n    let accumulator_u60: [u64; 6] = shl(bit_difference);\n}\n\nunconstrained fn __validate_gt_remainder(a_u60: [u64; 6]) -> [u64; 6] {\n    let mut addend_u60: [u64; 6] = [0; 6];\n    let mut result_u60: [u64; 6] = [0; 6];\n\n    for i in 0..6 {\n        result_u60[i] = a_u60[i] + addend_u60[i];\n    }\n\n    result_u60\n}\n\nunconstrained fn get_msb(val: [u64; 6]) -> u32 {\n    let mut count = 0;\n    for i in 0..6 {\n        let v = val[(6 - 1) - i];\n        if (v > 0) {\n            count = 60 * ((6 - 1) - i);\n            break;\n        }\n    }\n    count\n}\n\nunconstrained fn shl(shift: u32) -> [u64; 6] {\n    let num_shifted_limbs = shift / 60;\n    let limb_shift = (shift % 60) as u8;\n\n    let mut result = [0; 6];\n    result[num_shifted_limbs] = (1 << limb_shift);\n\n    for i in 1..(6 - num_shifted_limbs) {\n        result[i + num_shifted_limbs] = 0;\n    }\n    result\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
